/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.dc-field-error {
  position: absolute;
  top: 4rem;
  text-align: left !important;
  padding-top: 0.4rem;
  padding-left: 1.2rem;
  color: var(--brand-red-coral);
  font-size: var(--text-size-xxs); }

.dc-password-meter {
  position: absolute;
  bottom: -5px;
  left: 0;
  height: 5px;
  border-radius: 0 0 4px 4px;
  transition: transform 0.25s linear;
  background: var(--status-danger);
  transform-origin: left top;
  width: 100%;
  z-index: 2; }

.dc-password-meter__bg {
  z-index: 1;
  position: absolute;
  bottom: -5px;
  left: 0;
  height: 5px;
  border-radius: 0 0 4px 4px;
  width: 100%;
  background: var(--general-section-1); }

.dc-password-meter__container {
  position: relative; }

.dc-password-meter__container .dc-input {
  border-radius: 4px 4px 0 0; }

.dc-password-meter__error, .dc-password-meter__warning {
  top: 5rem;
  z-index: 2; }

.dc-password-meter__warning {
  color: var(--status-warning); }

.dc-password-meter--weak {
  background-color: var(--status-danger);
  z-index: 2; }

.dc-password-meter--strong {
  background-color: var(--status-success);
  z-index: 2; }

