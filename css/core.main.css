@import url(https://fonts.googleapis.com/css?family=IBM+Plex+Sans:300,400,500,700&display=swap&subset=cyrillic,cyrillic-ext,latin-ext,vietnamese);
/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.dc-themed-scrollbars__track--horizontal {
  height: 6px;
  right: 2px;
  bottom: 2px;
  left: 2px;
  border-radius: 3px; }

.dc-themed-scrollbars__track--vertical {
  width: 6px;
  right: 2px;
  bottom: 2px;
  top: 2px;
  border-radius: 3px; }

.dc-themed-scrollbars__thumb--horizontal {
  border-radius: inherit;
  background-color: var(--state-active); }

.dc-themed-scrollbars__thumb--vertical {
  border-radius: inherit;
  background-color: var(--state-active); }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.dc-icon {
  --fill-color1: var(--text-general);
  --fill-color2: var(--text-less-prominent);
  --fill-color3: var(--general-section-1); }

.dc-icon--disabled {
  --fill-color1: var(--text-disabled);
  --fill-color2: var(--text-disabled); }

.dc-icon--active {
  --fill-color1: #fff;
  --fill-color2: #fff; }

.dc-icon--green {
  --fill-color1: var(--text-profit-success);
  --fill-color2: var(--text-profit-success);
  --fill-color3: #fff; }

.dc-icon--red {
  --fill-color1: var(--text-loss-danger);
  --fill-color2: var(--text-loss-danger);
  --fill-color3: #fff; }

.dc-icon--secondary {
  --fill-color1: var(--text-less-prominent);
  --fill-color2: var(--text-less-prominent);
  --fill-color3: #fff; }

.dc-icon--brand {
  --fill-color1: var(--brand-red-coral);
  --fill-color2: var(--brand-secondary);
  --fill-color3: #fff; }

.dc-icon, .dc-popover__target__icon .info:hover {
  --fill-color1: var(--text-general);
  --fill-color2: var(--text-less-prominent);
  --fill-color3: var(--general-section-1); }

.dc-icon--disabled, .dc-popover__target__icon--disabled .info, .dc-popover__target__icon--disabled .info:hover {
  --fill-color1: var(--text-disabled);
  --fill-color2: var(--text-disabled); }

.dc-icon--active {
  --fill-color1: #fff;
  --fill-color2: #fff; }

.dc-icon--green {
  --fill-color1: var(--text-profit-success);
  --fill-color2: var(--text-profit-success);
  --fill-color3: #fff; }

.dc-icon--red {
  --fill-color1: var(--text-loss-danger);
  --fill-color2: var(--text-loss-danger);
  --fill-color3: #fff; }

.dc-icon--secondary, .dc-popover__target__icon .info {
  --fill-color1: var(--text-less-prominent);
  --fill-color2: var(--text-less-prominent);
  --fill-color3: #fff; }

.dc-icon--brand {
  --fill-color1: var(--brand-red-coral);
  --fill-color2: var(--brand-secondary);
  --fill-color3: #fff; }

.dc-popover__target__icon .counter {
  color: var(--brand-red-coral);
  font-size: 10px;
  font-weight: bold;
  line-height: 1.4em;
  position: absolute;
  top: 50%;
  transform: translateY(-65%); }

.dc-popover__bubble {
  font-size: 1.2rem;
  color: var(--text-colored-background);
  font-weight: 400;
  text-transform: none;
  text-align: center;
  line-height: 1.25;
  cursor: help;
  position: relative;
  padding: 0.7em;
  max-width: 280px;
  border-radius: 4px;
  display: flex;
  flex-direction: row;
  background: var(--general-active);
  color: var(--text-prominent);
  z-index: 1; }

.dc-popover__bubble__icon {
  flex-grow: 1;
  margin-right: 0.7em;
  padding-top: 3px; }

.dc-popover__bubble__text {
  flex-grow: 2;
  text-align: left; }

.dc-popover__bubble__text--error {
  color: var(--text-colored-background); }

.dc-popover__bubble--error {
  background-color: var(--status-danger); }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.dc-icon {
  --fill-color1: var(--text-general);
  --fill-color2: var(--text-less-prominent);
  --fill-color3: var(--general-section-1); }

.dc-icon--disabled {
  --fill-color1: var(--text-disabled);
  --fill-color2: var(--text-disabled); }

.dc-icon--active {
  --fill-color1: #fff;
  --fill-color2: #fff; }

.dc-icon--green {
  --fill-color1: var(--text-profit-success);
  --fill-color2: var(--text-profit-success);
  --fill-color3: #fff; }

.dc-icon--red {
  --fill-color1: var(--text-loss-danger);
  --fill-color2: var(--text-loss-danger);
  --fill-color3: #fff; }

.dc-icon--secondary {
  --fill-color1: var(--text-less-prominent);
  --fill-color2: var(--text-less-prominent);
  --fill-color3: #fff; }

.dc-icon--brand {
  --fill-color1: var(--brand-red-coral);
  --fill-color2: var(--brand-secondary);
  --fill-color3: #fff; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.dc-icon {
  --fill-color1: var(--text-general);
  --fill-color2: var(--text-less-prominent);
  --fill-color3: var(--general-section-1); }

.dc-icon--disabled {
  --fill-color1: var(--text-disabled);
  --fill-color2: var(--text-disabled); }

.dc-icon--active {
  --fill-color1: #fff;
  --fill-color2: #fff; }

.dc-icon--green {
  --fill-color1: var(--text-profit-success);
  --fill-color2: var(--text-profit-success);
  --fill-color3: #fff; }

.dc-icon--red {
  --fill-color1: var(--text-loss-danger);
  --fill-color2: var(--text-loss-danger);
  --fill-color3: #fff; }

.dc-icon--secondary {
  --fill-color1: var(--text-less-prominent);
  --fill-color2: var(--text-less-prominent);
  --fill-color3: #fff; }

.dc-icon--brand {
  --fill-color1: var(--brand-red-coral);
  --fill-color2: var(--brand-secondary);
  --fill-color3: #fff; }

.dc-modal-header__close .color1-fill {
  fill: var(--text-prominent); }

.dc-modal-header__close .color1-stroke {
  stroke: var(--text-prominent); }

.dc-modal__container {
  display: flex;
  flex-direction: column;
  min-width: 400px;
  position: relative;
  overflow: hidden;
  border-radius: 8px;
  transition: transform 0.25s cubic-bezier(0.25, 0.1, 0.1, 0.25), opacity 0.25s cubic-bezier(0.25, 0.1, 0.1, 0.25);
  background-color: var(--general-main-2);
  box-shadow: 0 4px 6px 0 var(--shadow-menu);
  max-height: calc(100vh - 48px - 36px);
  max-width: 90vw; }

.dc-modal__container--hide {
  display: none; }

.dc-modal__container--enter, .dc-modal__container--exit {
  transform: translateY(50px);
  opacity: 0;
  pointer-events: none; }

.dc-modal__container--enter-done {
  transform: translateY(0);
  opacity: 1;
  pointer-events: auto; }

.dc-modal__container--small {
  max-width: 440px; }

.dc-modal__container--small .dc-modal-header {
  border-bottom: none; }

.dc-modal-header {
  display: flex;
  justify-content: space-between;
  width: 100%;
  line-height: 24px;
  align-items: center;
  border-bottom: 2px solid var(--general-section-2); }

.dc-modal-header__title {
  font-size: 1.6rem;
  color: var(--text-general);
  font-weight: 700;
  text-transform: none;
  text-align: left;
  line-height: 1.75;
  color: var(--text-prominent);
  line-height: 24px;
  padding: 1.2rem 1.6rem;
  display: flex;
  align-items: center; }

.dc-modal-header__section {
  flex-grow: 1;
  padding: 1.6rem;
  line-height: 24px;
  display: flex;
  align-items: center; }

.dc-modal-header__close {
  display: block;
  cursor: pointer;
  padding: 0.6rem 0.8rem;
  height: 30px;
  width: 32px;
  margin: 1.2rem 1.6rem 1.2rem auto; }

.dc-modal-body {
  padding: 2.4rem;
  font-size: 1.4rem;
  line-height: 1.43;
  color: var(--text-prominent); }

.dc-modal-footer {
  display: flex;
  justify-content: flex-end;
  padding: 1.6rem; }

.dc-modal-footer .btn:nth-child(2) {
  margin-left: 0.8rem; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.dc-counter {
  align-items: center;
  background: var(--status-danger);
  border-radius: 0.8rem;
  color: var(--text-colored-background);
  display: flex;
  font-size: 1rem;
  font-weight: bold;
  justify-content: center;
  line-height: 1;
  padding: 3px 5px; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/* postcss-bem-linter: ignore */
html {
  font-size: 62.5%;
  /** TODO: define breakpoints */ }

/** @define body */
.body {
  position: relative;
  min-height: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden; }

/* postcss-bem-linter: ignore */
*, html, .body {
  font-family: "IBM Plex Sans", sans-serif;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  box-sizing: border-box; }

/** @define select */
.select {
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  padding: 2px 3px;
  border: 1px solid var(--border-normal);
  border-radius: 4px; }

/** @define input */
.input {
  font-family: inherit;
  font-style: inherit;
  padding: 2px 3px;
  color: var(--text-general); }

::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
  color: var(--text-general); }

::-moz-placeholder {
  /* Firefox 19+ */
  color: var(--text-general); }

:-ms-input-placeholder {
  /* IE 10+ */
  color: var(--text-general); }

:-moz-placeholder {
  /* Firefox 18- */
  color: var(--text-general); }

/** @define theme */
.theme--light {
  background: #ffffff; }

.theme--dark {
  background: #0e0e0e; }

/** @define container */
.container {
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
  box-sizing: border-box; }

/** @define hidden */
.hidden {
  visibility: hidden !important;
  transition: none !important; }

/** @define absolute-center-v */
.absolute-center-v {
  position: absolute;
  margin: auto;
  top: 0;
  bottom: 0; }

/** @define link */
.link {
  color: var(--brand-red-coral);
  font-weight: bold;
  text-decoration: none; }
  .link:hover {
    text-decoration: underline;
    cursor: pointer; }
  .link--white {
    color: #ffffff; }

/** @define icon */
.icon--centered {
  top: 0.8em;
  left: 5%; }

/** @define center-text */
.center-text {
  text-align: center; }

/** @define no-margin */
.no-margin {
  margin: 0; }

/** @define hr */
.hr {
  border-top: var(--general-section-1);
  display: block;
  height: 1px;
  border: 0;
  margin: 0.5em 0;
  padding: 0; }

/** @define deriv-app */
.deriv-app {
  height: 100%;
  overflow: hidden; }

.theme-select-settings {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  width: 100%; }
  .theme-select-settings__title {
    font-weight: bold;
    font-size: 14px;
    color: var(--text-general);
    margin-bottom: 16px; }
  .theme-select-settings__content {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    width: 100%; }
  .theme-select-settings__option {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 234px;
    height: 207px; }
    .theme-select-settings__option__title {
      margin-top: 9px;
      font-size: 14px;
      line-height: 1.43;
      color: var(--text-general); }
      .theme-select-settings__option__title--selected {
        font-weight: bold;
        color: var(--text-prominent); }
    .theme-select-settings__option__icon {
      width: 234px;
      height: 178px;
      cursor: pointer;
      border-radius: 4px;
      border: 1px solid var(--border-normal); }
      .theme-select-settings__option__icon:hover:not(.theme-select-settings__option__icon--active) {
        border-color: var(--border-hover); }
      .theme-select-settings__option__icon--active {
        border-color: var(--border-active); }
      .theme-select-settings__option__icon--disabled {
        opacity: 0.16 !important;
        cursor: not-allowed !important; }

/** @define settings-language */
.settings-language__language-header {
  font-size: 14px;
  font-weight: bold;
  margin-bottom: 16px;
  color: var(--text-prominent); }

.settings-language__language-container {
  display: grid;
  grid-template-columns: repeat(5, 80px);
  grid-template-rows: repeat(5, 84px);
  grid-gap: 16px; }

.settings-language__language-link {
  color: var(--text-prominent);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  border-radius: 4px;
  padding: 16px;
  text-decoration: none;
  background-color: var(--state-normal); }
  .settings-language__language-link--active {
    border: 1px solid var(--border-active);
    color: var(--text-prominent); }

.settings-language__language-flag {
  width: 36px;
  height: 24px; }

.settings-language__language-name {
  font-size: 1.4rem;
  color: var(--text-general);
  font-weight: 400;
  text-transform: none;
  text-align: left;
  line-height: 1.5;
  color: var(--text-prominent); }
  .settings-language__language-name--active {
    font-weight: bold;
    color: var(--text-prominent); }

/** @define dc-modal-header; */
.dc-modal-header--modal-settings {
  background-color: var(--general-main-1); }

.dc-modal-header__title--modal-settings {
  min-width: 28%;
  background-color: var(--general-section-1); }

/** @define dc-modal; */
.dc-modal__container_modal-settings {
  /* postcss-bem-linter: ignore */ }
  .dc-modal__container_modal-settings .dc-modal-header {
    border-bottom-width: 0; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.barspinner {
  margin: auto;
  width: 6em;
  height: 2em;
  white-space: nowrap; }

.barspinner__rect {
  margin: 0.4em;
  border-radius: 20px;
  height: 60%;
  width: 0.6em;
  display: inline-block;
  -webkit-animation: sk-stretchdelay 1.2s infinite ease-in-out;
          animation: sk-stretchdelay 1.2s infinite ease-in-out; }

.barspinner__rect--1 {
  -webkit-animation-delay: -1.2s;
          animation-delay: -1.2s; }

.barspinner__rect--2 {
  -webkit-animation-delay: -1.1s;
          animation-delay: -1.1s; }

.barspinner__rect--3 {
  -webkit-animation-delay: -1s;
          animation-delay: -1s; }

.barspinner__rect--4 {
  -webkit-animation-delay: -.9s;
          animation-delay: -.9s; }

.barspinner__rect--5 {
  -webkit-animation-delay: -.8s;
          animation-delay: -.8s; }

.barspinner--dark .barspinner__rect {
  background-color: var(--brand-secondary); }

@-webkit-keyframes sk-stretchdelay {
  0%, 40%, 100% {
    transform: scaleY(1); }
  20% {
    transform: scaleY(2); } }

@keyframes sk-stretchdelay {
  0%, 40%, 100% {
    transform: scaleY(1); }
  20% {
    transform: scaleY(2); } }

.initial-loader {
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  display: flex;
  background: transparent; }

.initial-loader--fullscreen {
  width: 100vw;
  height: 100vh; }

.initial-loader__barspinner {
  margin: 5em auto; }

.initial-loader__barspinner--rect {
  background-color: var(--brand-secondary); }

.initial-loader__text {
  line-height: 44px;
  color: var(--text-prominent);
  font-size: 1.4rem;
  color: var(--text-general);
  font-weight: 400;
  text-transform: none;
  text-align: center;
  line-height: 1.5; }

.dc-icon {
  --fill-color1: var(--text-general);
  --fill-color2: var(--text-less-prominent);
  --fill-color3: var(--general-section-1); }

.dc-icon--disabled {
  --fill-color1: var(--text-disabled);
  --fill-color2: var(--text-disabled); }

.dc-icon--active {
  --fill-color1: #fff;
  --fill-color2: #fff; }

.dc-icon--green {
  --fill-color1: var(--text-profit-success);
  --fill-color2: var(--text-profit-success);
  --fill-color3: #fff; }

.dc-icon--red {
  --fill-color1: var(--text-loss-danger);
  --fill-color2: var(--text-loss-danger);
  --fill-color3: #fff; }

.dc-icon--secondary {
  --fill-color1: var(--text-less-prominent);
  --fill-color2: var(--text-less-prominent);
  --fill-color3: #fff; }

.dc-icon--brand {
  --fill-color1: var(--brand-red-coral);
  --fill-color2: var(--brand-secondary);
  --fill-color3: #fff; }

.btn {
  vertical-align: middle;
  align-items: center;
  justify-content: center;
  touch-action: manipulation;
  cursor: pointer;
  white-space: nowrap;
  padding: 0 1.6rem;
  display: inline-flex;
  border: 0;
  height: 3.2rem;
  border-radius: 4px;
  transition: all 0.2s cubic-bezier(0.65, 0.05, 0.36, 1);
  outline: 0;
  position: relative;
  text-decoration: none;
  text-transform: none !important; }

.btn__text, .btn__icon {
  font-size: 1.4rem;
  color: var(--text-general);
  font-weight: 700;
  text-transform: unset;
  text-align: center;
  line-height: 1.5;
  color: var(--text-general);
  display: flex; }

.btn__icon {
  padding-right: 0.8rem; }

.btn:not([disabled]):hover {
  text-decoration: none; }

.btn--primary {
  background: var(--button-primary-default);
  color: var(--text-colored-background); }

.btn--primary:hover:not([disabled]) {
  background: var(--button-primary-hover); }

.btn--primary:active:not([disabled]) {
  background: var(--button-primary-default); }

.btn--primary:disabled, .btn--primary[disabled] {
  opacity: 0.32;
  cursor: not-allowed !important; }

.btn--primary .btn__text, .btn--primary .btn__icon {
  color: var(--text-colored-background); }

.btn--secondary {
  background: transparent;
  border: 1px solid var(--button-secondary-default); }

.btn--secondary:hover:not([disabled]) {
  background: var(--button-secondary-hover); }

.btn--secondary:active:not([disabled]) {
  border: 1px solid var(--button-secondary-default); }

.btn--secondary:disabled, .btn--secondary[disabled] {
  opacity: 0.32;
  cursor: not-allowed !important; }

.btn--secondary .btn__text, .btn--secondary .btn__icon {
  color: var(--text-prominent); }

.btn--tertiary {
  background: var(--button-tertiary-default); }

.btn--tertiary:hover:not([disabled]) {
  background: var(--button-tertiary-hover); }

.btn--tertiary:active:not([disabled]) {
  background: var(--button-tertiary-default); }

.btn--tertiary .btn__text, .btn--tertiary .btn__icon {
  color: var(--brand-red-coral); }

.btn--tertiary:disabled, .btn--tertiary[disabled] {
  opacity: 0.32;
  cursor: not-allowed !important; }

.btn--green {
  background: var(--status-success); }

.btn--green:hover:not([disabled]) {
  background: var(--transparent-success); }

.btn--green:active:not([disabled]) {
  background: var(--status-success); }

.btn--green .btn__text, .btn--green .btn__icon {
  color: var(--text-colored-background); }

.btn__small {
  height: 2.4rem;
  border-width: 1px; }

.btn__small .btn__text {
  font-size: 1.2rem; }

.btn__medium {
  height: 3.2rem;
  border-width: 1px; }

.btn__medium .btn__text {
  font-size: 1.4rem; }

.btn__large {
  height: 4rem;
  border-width: 2px; }

.btn__large .btn__text {
  font-size: 1.4rem; }

.btn__effect:focus:not(:active):after {
  content: '';
  position: absolute;
  top: -0.1em;
  left: -0.1em;
  bottom: -0.1em;
  right: -0.1em;
  border-radius: inherit;
  border: 0 solid var(--brand-secondary);
  opacity: 0.4;
  -webkit-animation: buttonEffect 0.4s;
          animation: buttonEffect 0.4s;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards;
  display: block; }

.btn .initial-loader--btn {
  background-color: unset; }

.btn .initial-loader--btn .initial-loader__barspinner--rect {
  background-color: var(--text-colored-background); }

.btn .initial-loader--btn .barspinner {
  margin: 0.6rem 4px 0 -4px; }

.btn .initial-loader--btn .barspinner__rect {
  height: 35%; }

@-webkit-keyframes buttonEffect {
  to {
    opacity: 0;
    top: -0.6em;
    left: -0.6em;
    bottom: -0.6em;
    right: -0.6em;
    border-width: 6px; } }

@keyframes buttonEffect {
  to {
    opacity: 0;
    top: -0.6em;
    left: -0.6em;
    bottom: -0.6em;
    right: -0.6em;
    border-width: 6px; } }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
  .notifications-toggle:hover .notifications-toggle__icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .notifications-toggle:hover .notifications-toggle__icon .color1-fill {
      fill: var(--text-prominent); }
    .notifications-toggle:hover .notifications-toggle__icon .color1-stroke {
      stroke: var(--text-prominent); }
    .notifications-toggle:hover .notifications-toggle__icon .color2-fill {
      fill: none; }
    .notifications-toggle:hover .notifications-toggle__icon .color2-stroke {
      stroke: none; }

.notifications {
  /** @define notifications-toggle; weak */
  /** @define notifications-dialog; weak */
  /** @define notifications-empty; weak */
  /** @define notifications-item; weak */ }
  .notifications-toggle {
    position: relative;
    margin-right: 24px; }
    .notifications-toggle__icon {
      width: 26px;
      height: 26px;
      pointer-events: none; }
      .notifications-toggle__icon-wrapper {
        cursor: pointer; }
        .notifications-toggle__icon-wrapper--active {
          cursor: default; }
      .notifications-toggle__icon .color1-fill {
        fill: var(--text-general); }
      .notifications-toggle__icon .color1-stroke {
        stroke: var(--text-general); }
    .notifications-toggle__step {
      position: absolute;
      left: 1rem;
      top: -2px;
      pointer-events: none; }
    .notifications-toggle--active .dc-popover {
      pointer-events: none; }
  .notifications-dialog {
    position: absolute;
    top: 48px;
    left: calc(-50% - 10rem);
    width: 264px;
    height: 525px;
    background: var(--general-main-2);
    border-radius: 4px;
    box-shadow: 0 4px 8px 2px var(--shadow-menu);
    transition: transform 0.3s cubic-bezier(0.25, 0.1, 0.25, 1), opacity 0.25s linear;
    opacity: 0;
    transform: translate3d(0, -20px, 0); }
    .notifications-dialog__header {
      display: flex;
      align-items: center;
      justify-content: center;
      border-bottom: 1px solid var(--border-normal); }
      .notifications-dialog__header-text {
        font-weight: bold;
        font-size: 1.6rem;
        margin: 1rem 0;
        color: var(--text-prominent); }
    .notifications-dialog__content {
      padding: 8px 0;
      height: calc(100% - 37px);
      border-radius: 4px; }
      .notifications-dialog__content--empty {
        display: flex;
        height: 100%;
        max-height: 400px; }
    .notifications-dialog--enter-done {
      opacity: 1;
      transform: translate3d(0, 0, 0); }
    .notifications-dialog--enter, .notifications-dialog--exit {
      opacity: 0;
      transform: translate3d(0, -20px, 0); }
  .notifications-empty {
    display: flex;
    flex-direction: column;
    align-items: center; }
    .notifications-empty__container {
      flex-grow: 1;
      display: flex;
      align-items: center;
      justify-content: center; }
    .notifications-empty__icon {
      width: 64px;
      height: 64px;
      margin-bottom: 8px; }
      .notifications-empty__icon .color1-fill {
        fill: var(--text-less-prominent); }
    .notifications-empty__header {
      font-size: 1.4rem;
      font-weight: bold;
      text-align: center;
      color: var(--text-less-prominent);
      padding: 8px; }
    .notifications-empty__message {
      line-height: 1.5;
      font-size: 1.2rem;
      text-align: center;
      color: var(--text-less-prominent); }
  .notifications-item {
    padding: 0.8rem;
    margin-left: 3.2rem;
    margin-right: 0.8rem;
    position: relative; }
    .notifications-item:after {
      position: absolute;
      content: '';
      bottom: 0;
      left: -3.2rem;
      width: calc(100% + 4rem);
      height: 1px;
      background: var(--border-disabled); }
    .notifications-item__cta-button {
      margin: 8px 0 0 auto;
      height: 24px !important;
      width: 106px; }
      .notifications-item__cta-button .btn__text {
        font-size: 1.2rem; }
    .notifications-item__title {
      font-size: 1.4rem;
      font-weight: bold;
      margin-bottom: 4px;
      color: var(--text-prominent);
      position: relative;
      line-height: 1.5; }
      .notifications-item__title-icon {
        position: absolute;
        left: -26px;
        top: 2px;
        height: 16px;
        width: 16px;
        pointer-events: none; }
    .notifications-item__message {
      font-size: 1.2rem;
      color: var(--text-prominent);
      line-height: 1.5;
      padding-right: 8px; }
      .notifications-item__message a {
        text-decoration: none;
        font-weight: bold;
        color: var(--text-prominent); }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.acc-info__select-arrow, .acc-switcher__logout-icon {
  /* postcss-bem-linter: ignore */
  /* postcss-bem-linter: ignore */
  /* postcss-bem-linter: ignore */
  /* postcss-bem-linter: ignore */ }
  .acc-info__select-arrow .color1-fill, .acc-switcher__logout-icon .color1-fill {
    fill: var(--text-general); }
  .acc-info__select-arrow .color1-stroke, .acc-switcher__logout-icon .color1-stroke {
    stroke: var(--text-general); }
  .acc-info__select-arrow .color2-fill, .acc-switcher__logout-icon .color2-fill {
    fill: none; }
  .acc-info__select-arrow .color2-stroke, .acc-switcher__logout-icon .color2-stroke {
    stroke: none; }
  .active.acc-info__select-arrow, .active.acc-switcher__logout-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .active.acc-info__select-arrow .color1-fill, .active.acc-switcher__logout-icon .color1-fill {
      fill: var(--text-prominent); }
    .active.acc-info__select-arrow .color1-stroke, .active.acc-switcher__logout-icon .color1-stroke {
      stroke: var(--text-prominent); }
    .active.acc-info__select-arrow .color2-fill, .active.acc-switcher__logout-icon .color2-fill {
      fill: none; }
    .active.acc-info__select-arrow .color2-stroke, .active.acc-switcher__logout-icon .color2-stroke {
      stroke: none; }
  .disabled.acc-info__select-arrow, .disabled.acc-switcher__logout-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .disabled.acc-info__select-arrow .color1-fill, .disabled.acc-switcher__logout-icon .color1-fill {
      fill: var(--text-disabled); }
    .disabled.acc-info__select-arrow .color1-stroke, .disabled.acc-switcher__logout-icon .color1-stroke {
      stroke: var(--text-disabled); }
    .disabled.acc-info__select-arrow .color2-fill, .disabled.acc-switcher__logout-icon .color2-fill {
      fill: none; }
    .disabled.acc-info__select-arrow .color2-stroke, .disabled.acc-switcher__logout-icon .color2-stroke {
      stroke: none; }
  .white.acc-info__select-arrow, .white.acc-switcher__logout-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .white.acc-info__select-arrow .color1-fill, .white.acc-switcher__logout-icon .color1-fill {
      fill: var(--text-prominent); }
    .white.acc-info__select-arrow .color1-stroke, .white.acc-switcher__logout-icon .color1-stroke {
      stroke: var(--text-prominent); }
  .border_hover_color.acc-info__select-arrow, .border_hover_color.acc-switcher__logout-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .border_hover_color.acc-info__select-arrow .color1-fill, .border_hover_color.acc-switcher__logout-icon .color1-fill {
      fill: var(--text-prominent); }
    .border_hover_color.acc-info__select-arrow .color1-stroke, .border_hover_color.acc-switcher__logout-icon .color1-stroke {
      stroke: var(--text-prominent); }
  .secondary.acc-info__select-arrow, .secondary.acc-switcher__logout-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .secondary.acc-info__select-arrow .color1-fill, .secondary.acc-switcher__logout-icon .color1-fill {
      fill: var(--text-less-prominent); }
    .secondary.acc-info__select-arrow .color1-stroke, .secondary.acc-switcher__logout-icon .color1-stroke {
      stroke: var(--text-less-prominent); }

/* postcss-bem-linter: ignore */
html {
  font-size: 62.5%;
  /** TODO: define breakpoints */ }

/** @define body */
.body {
  position: relative;
  min-height: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden; }

/* postcss-bem-linter: ignore */
*, html, .body {
  font-family: "IBM Plex Sans", sans-serif;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  box-sizing: border-box; }

/** @define select */
.select {
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  padding: 2px 3px;
  border: 1px solid var(--border-normal);
  border-radius: 4px; }

/** @define input */
.input {
  font-family: inherit;
  font-style: inherit;
  padding: 2px 3px;
  color: var(--text-general); }

::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
  color: var(--text-general); }

::-moz-placeholder {
  /* Firefox 19+ */
  color: var(--text-general); }

:-ms-input-placeholder {
  /* IE 10+ */
  color: var(--text-general); }

:-moz-placeholder {
  /* Firefox 18- */
  color: var(--text-general); }

/** @define theme */
.theme--light {
  background: #ffffff; }

.theme--dark {
  background: #0e0e0e; }

/** @define container */
.container {
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
  box-sizing: border-box; }

/** @define hidden */
.hidden {
  visibility: hidden !important;
  transition: none !important; }

/** @define absolute-center-v */
.absolute-center-v {
  position: absolute;
  margin: auto;
  top: 0;
  bottom: 0; }

/** @define link */
.link {
  color: var(--brand-red-coral);
  font-weight: bold;
  text-decoration: none; }
  .link:hover {
    text-decoration: underline;
    cursor: pointer; }
  .link--white {
    color: #ffffff; }

/** @define icon */
.icon--centered {
  top: 0.8em;
  left: 5%; }

/** @define center-text */
.center-text {
  text-align: center; }

/** @define no-margin */
.no-margin {
  margin: 0; }

/** @define hr */
.hr {
  border-top: var(--general-section-1);
  display: block;
  height: 1px;
  border: 0;
  margin: 0.5em 0;
  padding: 0; }

/** @define deriv-app */
.deriv-app {
  height: 100%;
  overflow: hidden; }

/** @define acc-info */
.acc-info {
  align-items: center;
  cursor: pointer;
  display: flex;
  flex-direction: row;
  height: 100%;
  justify-content: center;
  padding: 0 1.6em 0 1.7em; }
  .acc-info__preloader {
    position: absolute;
    top: 0;
    right: 0;
    width: 350px;
    height: 46px;
    z-index: 2;
    background: var(--general-main-1); }
    .acc-info__preloader:before {
      content: '';
      position: absolute;
      left: -90px;
      width: 90px;
      height: 46px;
      top: 0;
      background: var(--general-main-1); }
    .acc-info__preloader--no-currency:before {
      left: -140px;
      width: 140px; }
  .acc-info__container {
    align-items: center;
    -webkit-box-align: center;
    display: flex; }
  .acc-info__wrapper {
    align-items: center;
    display: flex;
    flex-direction: row;
    height: 100%;
    justify-content: center;
    position: relative;
    margin-right: 0.8rem; }
  .acc-info__id {
    pointer-events: none; }
    .acc-info__id-icon {
      vertical-align: middle;
      margin-right: 0.8rem; }
  .acc-info__separator {
    border-right: 1px solid var(--general-section-1);
    width: 2rem;
    height: 3.2rem;
    margin-right: -0.1rem; }
  .acc-info__balance {
    font-size: 1.6rem;
    color: var(--text-profit-success);
    font-weight: 700;
    text-transform: default;
    text-align: center;
    line-height: 1.75;
    padding: 0.5em;
    color: var(--text-profit-success);
    pointer-events: none; }
  .acc-info__select-arrow {
    pointer-events: none;
    transform: rotate(0);
    transform-origin: 50% 45%;
    transition: transform 0.3s cubic-bezier(0.25, 0.1, 0.25, 1); }
    .acc-info__select-arrow--invert {
      transform: rotate(180deg); }
  .acc-info:hover:not(.show) {
    background: var(--state-hover); }
    .acc-info:hover:not(.show) .symbols {
      background: transparent; }
  .acc-info--is-virtual .acc-info__balance {
    color: var(--text-profit-success); }
  .acc-info--show .acc-info__select-arrow {
    transform: rotate(180deg); }
  .acc-info--show .acc-info__select-arrow--invert {
    transform: rotate(0deg); }
  .acc-info__button {
    margin: 0 1.6em 0 0 !important; }
    .acc-info__button:not(:last-child) {
      margin-right: 1em; }

/** @define acc-switcher; weak */
.acc-switcher {
  cursor: pointer;
  display: flex;
  align-items: center;
  margin: 0 0.8rem;
  height: 4rem;
  position: relative; }
  .acc-switcher--is-loading {
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    left: 0;
    background: var(--general-main-2); }
  .acc-switcher__wrapper {
    border-radius: 4px;
    position: absolute;
    transition: transform 0.3s cubic-bezier(0.25, 0.1, 0.25, 1), opacity 0.25s linear;
    box-shadow: 0 8px 16px 0 var(--shadow-menu);
    right: 0;
    top: calc(100% + 4px);
    width: 278px;
    background-color: var(--general-main-2); }
    .acc-switcher__wrapper--enter-done {
      opacity: 1;
      transform: translate3d(0, 0, 0); }
    .acc-switcher__wrapper--enter, .acc-switcher__wrapper--exit {
      opacity: 0;
      transform: translate3d(0, -20px, 0); }
    .acc-switcher__wrapper .acc-switcher__button {
      max-width: calc(100% - 1.6rem);
      margin: 0.2rem 0.8rem 0.8rem;
      height: 4rem; }
  .acc-switcher__new-account {
    background-color: transparent;
    border-radius: 4px;
    margin: 0 0 16px; }
    .acc-switcher__new-account-link {
      background-color: transparent;
      margin: 0 0 0.8em;
      padding: 0 0 0 0.8em;
      display: flex;
      text-decoration: none;
      width: 100%;
      height: 4rem;
      align-items: center; }
      .acc-switcher__new-account-link .btn {
        background-color: transparent;
        padding: 0; }
        .acc-switcher__new-account-link .btn__text {
          color: var(--general-main-1); }
    .acc-switcher__new-account:hover {
      background-color: rgba(255, 68, 79, 0.08) !important; }
    .acc-switcher__new-account .btn__text {
      font-weight: normal;
      color: var(--brand-red-coral); }
    .acc-switcher__new-account .btn {
      align-items: center;
      background-color: transparent;
      display: flex;
      margin: 0;
      padding: 0 0 0 0.8rem;
      height: 4rem;
      justify-content: left; }
  .acc-switcher__list {
    border-radius: 4px;
    display: flex;
    flex-flow: column nowrap;
    height: 100%;
    background: var(--general-main-2); }
    .acc-switcher__list-title {
      font-size: 1.6rem;
      color: var(--text-general);
      font-weight: 700;
      text-transform: none;
      text-align: left;
      line-height: 1.75;
      display: block;
      color: var(--text-prominent);
      flex: 1; }
    .acc-switcher__list-wrapper {
      padding: 0.4em 0.8em 0; }
  .acc-switcher__accounts {
    border-radius: 4px;
    background: var(--general-main-2);
    position: relative; }
    .acc-switcher__accounts .acc-switcher__account {
      background: var(--general-main-2); }
      .acc-switcher__accounts .acc-switcher__account:hover:not(.acc-switcher__account--selected) {
        background-color: var(--state-hover);
        border-radius: 4px; }
      .acc-switcher__accounts .acc-switcher__account.acc-switcher__account--disabled:hover {
        background-color: var(--general-main-2); }
      .acc-switcher__accounts .acc-switcher__account .acc-switcher__id {
        color: var(--text-general);
        width: 100%;
        line-height: 1.43; }
      .acc-switcher__accounts .acc-switcher__account--selected {
        background: var(--state-active); }
        .acc-switcher__accounts .acc-switcher__account--selected .acc-switcher__id {
          color: var(--text-prominent);
          font-weight: 700; }
          .acc-switcher__accounts .acc-switcher__account--selected .acc-switcher__id--virtual:before {
            color: var(--text-prominent);
            border: 1px solid var(--text-prominent); }
      .acc-switcher__accounts .acc-switcher__account--disabled {
        opacity: 0.5;
        cursor: default; }
      .acc-switcher__accounts .acc-switcher__account:only-child {
        border-radius: 4px; }
      .acc-switcher__accounts .acc-switcher__account:last-child {
        margin-bottom: 16px; }
      .acc-switcher__accounts .acc-switcher__account-set-currency {
        justify-content: flex-end;
        padding: 0.8rem 0.4rem; }
        .acc-switcher__accounts .acc-switcher__account-set-currency-link {
          font-size: 1.2rem;
          color: var(--button-primary-default);
          font-weight: bold; }
          .acc-switcher__accounts .acc-switcher__account-set-currency-link:hover {
            text-decoration: underline;
            cursor: pointer; }
        .acc-switcher__accounts .acc-switcher__account-set-currency:hover {
          background: var(--general-main-2) !important;
          cursor: auto;
          cursor: initial; }
    .acc-switcher__accounts--has-add-account:not(:empty) {
      margin-bottom: -16px; }
  .acc-switcher__account {
    display: flex;
    align-items: center;
    justify-content: space-between;
    cursor: pointer;
    padding: 0.8em;
    position: relative;
    background: var(--general-main-2);
    text-decoration: none;
    padding-top: 0.3em;
    padding-bottom: 0.3em; }
    .acc-switcher__account .acc-switcher__id {
      font-size: 1.4rem;
      color: var(--text-general);
      font-weight: 400;
      text-transform: none;
      text-align: left;
      line-height: 1.5;
      align-items: center;
      display: flex;
      color: var(--text-prominent); }
      .acc-switcher__account .acc-switcher__id-icon {
        margin-right: 8px; }
    .acc-switcher__account:hover:not(.acc-switcher__account--selected) {
      background: var(--state-hover); }
    .acc-switcher__account--selected {
      background: var(--state-active);
      border-radius: 4px; }
      .acc-switcher__account--selected .acc-switcher__id {
        font-size: 1.4rem;
        color: var(--text-colored-background);
        font-weight: 700;
        text-transform: none;
        text-align: left;
        line-height: 1.5; }
        .acc-switcher__account--selected .acc-switcher__id--virtual:before {
          color: var(--text-prominent);
          border: 1px solid var(--text-prominent); }
      .acc-switcher__account--selected .acc-switcher__loginid-text {
        color: var(--text-prominent);
        font-weight: normal; }
      .acc-switcher__account--selected .no-currency {
        color: var(--text-prominent); }
  .acc-switcher__logout {
    align-items: center;
    align-self: flex-end;
    display: flex;
    justify-content: flex-end;
    padding: 1.6em 1.3em; }
    .acc-switcher__logout-text {
      font-size: 1.4rem;
      color: var(--text-general);
      font-weight: 400;
      text-transform: none;
      text-align: left;
      line-height: 1.5;
      color: var(--text-prominent);
      cursor: pointer; }
    .acc-switcher__logout-icon {
      margin-left: 8px;
      cursor: pointer; }
  .acc-switcher__balance {
    color: var(--status-success);
    margin-left: auto;
    font-weight: normal; }
    .acc-switcher__balance--virtual {
      color: var(--text-prominent); }
  .acc-switcher__separator {
    height: 4px;
    background-color: var(--general-section-2); }
    .acc-switcher__separator--no-padding {
      margin: 0 -8px; }
  .acc-switcher__total {
    height: 2.6rem;
    margin: 0.4rem 1.6rem;
    font-size: 1.4rem;
    font-weight: bold;
    color: var(--text-prominent);
    align-items: center;
    display: flex; }
    .acc-switcher__total-subtitle {
      margin: 0 1.6rem 1.2rem;
      font-size: 1rem;
      line-height: 1.4rem;
      font-weight: normal;
      color: var(--text-less-prominent); }
  .acc-switcher__loginid-text {
    font-size: 1rem;
    color: var(--text-less-prominent);
    line-height: 1.4; }
  .acc-switcher__loader {
    margin: 1rem auto !important;
    font-size: 0.8rem; }

/** @define set-currency; weak */
.set-currency {
  margin-right: 8px; }
  .set-currency .btn {
    display: flex;
    align-items: center; }

/** @define no-currency; weak */
.no-currency {
  font-size: 0.8rem;
  color: var(--text-general);
  font-weight: 400;
  text-transform: none;
  text-align: center;
  line-height: unset;
  text-transform: none;
  color: var(--text-less-prominent);
  line-height: 1.5;
  text-align: right; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.platform_dropdown {
  z-index: 5;
  background-color: var(--overlay-outside-dialog);
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  opacity: 0;
  transition: opacity 0.25s ease; }
  .platform_dropdown-enter-done {
    opacity: 1; }
    .platform_dropdown-enter-done .platform_dropdown__list {
      transform: translateY(48px); }
  .platform_dropdown__list {
    background-color: var(--general-main-1);
    width: 100%;
    position: fixed;
    top: 0;
    transform: translateY(0px);
    transition: transform 0.25s ease; }
    .platform_dropdown__list__platform {
      position: relative;
      display: inline-flex;
      background-color: transparent;
      color: var(--text-general);
      text-decoration: none;
      margin: 24px 16px;
      padding: 24px 16px;
      width: 302px;
      border-radius: 8px; }
      .platform_dropdown__list__platform__icon {
        min-height: 32px;
        min-width: 32px;
        margin-right: 16px; }
      .platform_dropdown__list__platform__title {
        font-size: 16px;
        font-weight: bold;
        line-height: 24px; }
      .platform_dropdown__list__platform__description {
        font-size: 14px;
        line-height: 20px;
        margin-top: 8px; }
      .platform_dropdown__list__platform__background {
        opacity: 0;
        transition: opacity 0.25s ease;
        background-color: var(--general-hover);
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        z-index: -1;
        border-radius: inherit; }
      .platform_dropdown__list__platform.active {
        border: solid 2px var(--border-active); }
      .platform_dropdown__list__platform:not(.active):hover .platform_dropdown__list__platform__background {
        opacity: 1; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.platform_switcher {
  display: flex;
  align-items: center;
  padding: 8px;
  transition: background-color 0.3s;
  cursor: pointer; }
  .platform_switcher:hover {
    background-color: var(--general-hover); }
  .platform_switcher svg:first-child, .platform_switcher p, .platform_switcher h1 {
    margin: 0 0 0 8px; }
  .platform_switcher svg:last-child {
    margin: 0 8px; }
  .platform_switcher__header {
    font-size: 16px;
    line-height: 24px;
    font-weight: bold;
    color: var(--text-general); }
  .platform_switcher__label {
    font-size: 14px;
    line-height: 20px;
    border-radius: 10px;
    background-color: var(--brand-secondary);
    color: var(--text-colored-background);
    width: 50px;
    height: 20px;
    font-weight: bold;
    text-align: center; }
  .platform_switcher__arrow {
    transition: transform 0.3s ease;
    transform: rotate(0deg); }
  .platform_switcher__arrow .color1-fill {
    fill: var(--text-general); }
  .platform_switcher--active .platform_switcher__arrow {
    transform: rotate(180deg); }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.barspinner {
  margin: auto;
  width: 6em;
  height: 2em;
  white-space: nowrap; }

.barspinner__rect {
  margin: 0.4em;
  border-radius: 20px;
  height: 60%;
  width: 0.6em;
  display: inline-block;
  -webkit-animation: sk-stretchdelay 1.2s infinite ease-in-out;
          animation: sk-stretchdelay 1.2s infinite ease-in-out; }

.barspinner__rect--1 {
  -webkit-animation-delay: -1.2s;
          animation-delay: -1.2s; }

.barspinner__rect--2 {
  -webkit-animation-delay: -1.1s;
          animation-delay: -1.1s; }

.barspinner__rect--3 {
  -webkit-animation-delay: -1s;
          animation-delay: -1s; }

.barspinner__rect--4 {
  -webkit-animation-delay: -.9s;
          animation-delay: -.9s; }

.barspinner__rect--5 {
  -webkit-animation-delay: -.8s;
          animation-delay: -.8s; }

.barspinner--dark .barspinner__rect {
  background-color: var(--brand-secondary); }

@-webkit-keyframes sk-stretchdelay {
  0%, 40%, 100% {
    transform: scaleY(1); }
  20% {
    transform: scaleY(2); } }

@keyframes sk-stretchdelay {
  0%, 40%, 100% {
    transform: scaleY(1); }
  20% {
    transform: scaleY(2); } }

.initial-loader {
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  display: flex;
  background: transparent; }

.initial-loader--fullscreen {
  width: 100vw;
  height: 100vh; }

.initial-loader__barspinner {
  margin: 5em auto; }

.initial-loader__barspinner--rect {
  background-color: var(--brand-secondary); }

.initial-loader__text {
  line-height: 44px;
  color: var(--text-prominent);
  font-size: 1.4rem;
  color: var(--text-general);
  font-weight: 400;
  text-transform: none;
  text-align: center;
  line-height: 1.5; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.dc-icon {
  --fill-color1: var(--text-general);
  --fill-color2: var(--text-less-prominent);
  --fill-color3: var(--general-section-1); }

.dc-icon--disabled {
  --fill-color1: var(--text-disabled);
  --fill-color2: var(--text-disabled); }

.dc-icon--active {
  --fill-color1: #fff;
  --fill-color2: #fff; }

.dc-icon--green {
  --fill-color1: var(--text-profit-success);
  --fill-color2: var(--text-profit-success);
  --fill-color3: #fff; }

.dc-icon--red {
  --fill-color1: var(--text-loss-danger);
  --fill-color2: var(--text-loss-danger);
  --fill-color3: #fff; }

.dc-icon--secondary {
  --fill-color1: var(--text-less-prominent);
  --fill-color2: var(--text-less-prominent);
  --fill-color3: #fff; }

.dc-icon--brand {
  --fill-color1: var(--brand-red-coral);
  --fill-color2: var(--brand-secondary);
  --fill-color3: #fff; }

.dc-field-error {
  position: absolute;
  top: 4rem;
  text-align: left !important;
  padding-top: 0.4rem;
  padding-left: 1.2rem;
  color: var(--brand-red-coral);
  font-size: var(--text-size-xxs); }

.dc-input {
  position: relative;
  width: 100%;
  border-radius: 4px;
  border: 1px solid var(--border-normal);
  display: flex;
  align-items: center;
  margin-bottom: 3.2rem; }

.dc-input:hover:not(.dc-input__disabled) {
  border-color: var(--border-hover); }

.dc-input[focus-within] {
  border-color: var(--brand-secondary); }

.dc-input:focus-within {
  border-color: var(--brand-secondary); }

.dc-input[focus-within]:hover {
  border-color: var(--brand-secondary); }

.dc-input:focus-within:hover {
  border-color: var(--brand-secondary); }

.dc-input__disabled {
  border-color: var(--general-disabled);
  color: var(--text-disabled); }

.dc-input__field {
  background: none;
  color: var(--text-prominent);
  font-size: var(--text-size-xs);
  padding: 1rem 1.2rem;
  width: 100%;
  height: 3.8rem;
  display: block; }

.dc-input__field::-webkit-input-placeholder {
  line-height: 1.5;
  opacity: 0;
  transition: opacity 0.25s; }

.dc-input__field::-moz-placeholder {
  line-height: 1.5;
  opacity: 0;
  transition: opacity 0.25s; }

.dc-input__field:-ms-input-placeholder {
  line-height: 1.5;
  opacity: 0;
  transition: opacity 0.25s; }

.dc-input__field::-ms-input-placeholder {
  line-height: 1.5;
  opacity: 0;
  transition: opacity 0.25s; }

.dc-input__field::placeholder {
  line-height: 1.5;
  opacity: 0;
  transition: opacity 0.25s; }

.dc-input__field--placeholder-visible::-webkit-input-placeholder {
  opacity: 0.2; }

.dc-input__field--placeholder-visible::-moz-placeholder {
  opacity: 0.2; }

.dc-input__field--placeholder-visible:-ms-input-placeholder {
  opacity: 0.2; }

.dc-input__field--placeholder-visible::-ms-input-placeholder {
  opacity: 0.2; }

.dc-input__field--placeholder-visible::placeholder {
  opacity: 0.2; }

.dc-input__field:focus, .dc-input__field:disabled, .dc-input__field:not(:focus):not([value='']) {
  outline: none; }

.dc-input__field:focus ~ label, .dc-input__field:disabled ~ label, .dc-input__field:not(:focus):not([value='']) ~ label {
  transform: translate(0, -1.8rem) scale(0.75);
  padding: 0 4px; }

.dc-input__field:disabled {
  color: var(--text-disabled); }

.dc-input__field:disabled ~ label {
  color: var(--text-disabled); }

.dc-input__field:disabled ~ svg .color1-fill {
  fill: var(--text-disabled); }

@media not all and (min-resolution: 0.001dpcm) {
  @supports (-webkit-appearance: none) {
    .dc-input__field:disabled {
      color: var(--text-prominent); } } }

.dc-input__field:focus {
  outline: none; }

.dc-input__field:focus ~ label {
  color: var(--brand-secondary); }

.dc-input__field:focus::-webkit-input-placeholder {
  opacity: 0.4; }

.dc-input__field:focus::-moz-placeholder {
  opacity: 0.4; }

.dc-input__field:focus:-ms-input-placeholder {
  opacity: 0.4; }

.dc-input__field:focus::-ms-input-placeholder {
  opacity: 0.4; }

.dc-input__field:focus::placeholder {
  opacity: 0.4; }

.dc-input__field:not(.dc-input--no-placeholder):not(:focus):not([value='']) ~ label {
  color: var(--text-general); }

.dc-input__field[type=number]::-webkit-inner-spin-button, .dc-input__field[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0; }

.dc-input__field[type=textarea] {
  height: 9.6rem;
  border: none;
  resize: none; }

.dc-input__field[type=textarea] ~ .dc-field-error {
  top: 10rem; }

.dc-input__field:-webkit-autofill {
  border-radius: 4px;
  -webkit-box-shadow: 0 0 0 30px var(--fill-normal) inset !important;
  -webkit-text-fill-color: var(--text-prominent) !important; }

.dc-input__field:-webkit-autofill:hover, .dc-input__field:-webkit-autofill:focus, .dc-input__field:-webkit-autofill:active {
  -webkit-box-shadow: 0 0 0 30px var(--fill-normal) inset !important; }

.dc-input__leading-icon {
  margin-left: 1rem;
  top: 1rem;
  position: absolute;
  left: 0;
  pointer-events: none;
  cursor: text;
  font-size: var(--text-size-xs); }

.dc-input__leading-icon.symbols {
  top: 0.9rem; }

.dc-input__leading-icon.symbols + .dc-input__field {
  padding-left: calc(1.6rem + 15px); }

.dc-input__leading-icon.symbols--usd + .dc-input__field {
  padding-left: calc(1.6rem + 3px); }

.dc-input__leading-icon.symbols--eur + .dc-input__field, .dc-input__leading-icon.symbols--gbp + .dc-input__field, .dc-input__leading-icon.symbols--eth + .dc-input__field, .dc-input__leading-icon.symbols--etc + .dc-input__field {
  padding-left: calc(1.6rem + 4px); }

.dc-input__leading-icon.symbols--btc + .dc-input__field, .dc-input__leading-icon.symbols--ltc + .dc-input__field {
  padding-left: calc(1.6rem + 5px); }

.dc-input__leading-icon.symbols--ust + .dc-input__field {
  padding-left: calc(1.6rem + 7px); }

.dc-input__leading-icon.symbols--bch + .dc-input__field {
  padding-left: calc(1.6rem + 10px); }

.dc-input__leading-icon.symbols--aud + .dc-input__field {
  padding-left: calc(1.6rem + 15px); }

.dc-input__trailing-icon {
  margin: 0 1.2rem 0 0 !important; }

.dc-input__trailing-icon .color1-fill {
  fill: var(--text-less-prominent); }

.dc-input__trailing-icon .color1-stroke {
  fill: var(--text-less-prominent); }

.dc-input__label {
  color: var(--text-less-prominent);
  font-size: var(--text-size-xs);
  background-color: var(--fill-normal);
  position: absolute;
  pointer-events: none;
  left: 1rem;
  top: 0.9rem;
  transition: 0.25s ease all;
  transform-origin: top left; }

.dc-input:not(.dc-input--no-placeholder)__label {
  color: var(--text-general);
  transition: 0.25s ease all;
  transform: translateZ(0); }

.dc-input__hint {
  color: var(--text-less-prominent);
  font-size: 1.2rem;
  margin-left: 1.2rem;
  position: absolute;
  top: 4rem; }

.dc-input--no-placeholder label {
  transform: translate(0, -1.8rem) scale(0.75);
  color: var(--text-prominent);
  padding: 0 4px;
  background-color: var(--fill-normal); }

.dc-input--error {
  border-color: var(--brand-red-coral) !important; }

.dc-input--error label {
  color: var(--brand-red-coral) !important; }

.dc-input__error {
  color: var(--text-loss-danger); }

.dc-themed-scrollbars__track--horizontal {
  height: 6px;
  right: 2px;
  bottom: 2px;
  left: 2px;
  border-radius: 3px; }

.dc-themed-scrollbars__track--vertical {
  width: 6px;
  right: 2px;
  bottom: 2px;
  top: 2px;
  border-radius: 3px; }

.dc-themed-scrollbars__thumb--horizontal {
  border-radius: inherit;
  background-color: var(--state-active); }

.dc-themed-scrollbars__thumb--vertical {
  border-radius: inherit;
  background-color: var(--state-active); }

.dc-dropdown-list {
  position: absolute;
  margin-top: 4px;
  border-radius: 4px;
  z-index: 1;
  box-shadow: 0 4px 6px 0 rgba(0, 0, 0, 0.24);
  transform-origin: top;
  transition: transform 0.25s ease, opacity 0.25s linear;
  transform: scale(1, 0);
  cursor: pointer;
  background-color: var(--state-normal); }

.dc-dropdown-list--enter, .dc-dropdown-list--exit {
  transform: scale(1, 0);
  opacity: 0; }

.dc-dropdown-list--enter-done {
  transform: scale(1, 1);
  opacity: 1; }

.dc-dropdown-list__item {
  height: 40px;
  display: flex;
  align-items: center;
  padding: 1rem 1.6rem;
  font-size: 1.4rem;
  color: var(--text-general); }

.dc-dropdown-list__item:hover {
  background-color: var(--state-hover); }

.dc-dropdown-list__item--active {
  background-color: var(--state-active); }

.dc-autocomplete {
  width: 100%;
  position: relative; }

.dc-autocomplete__trailing-icon {
  position: absolute;
  right: 0;
  pointer-events: none;
  cursor: text;
  transition: transform 0.2s ease;
  transform: rotate(0deg);
  transform-origin: 50% 45%; }

.dc-autocomplete__trailing-icon--opened {
  transform: rotate(-180deg); }

.dc-autocomplete__trailing-icon .color1-fill {
  fill: var(--text-less-prominent); }

.dc-autocomplete .dc-input--error .dc-autocomplete__trailing-icon .color1-fill {
  fill: var(--text-loss-danger); }

.dc-autocomplete .dc-dropdown-list {
  box-shadow: 0 8px 16px 0 var(--shadow-menu);
  background: var(--general-main-2); }

.dc-autocomplete:focus, .dc-autocomplete[focus-within], .dc-autocomplete:active {
  outline: 0; }

.dc-autocomplete:focus, .dc-autocomplete:focus-within, .dc-autocomplete:active {
  outline: 0; }

.dc-autocomplete:focus .dc-input:not(.dc-input--error) .dc-autocomplete__trailing-icon .color1-fill, .dc-autocomplete[focus-within] .dc-input:not(.dc-input--error) .dc-autocomplete__trailing-icon .color1-fill, .dc-autocomplete:active .dc-input:not(.dc-input--error) .dc-autocomplete__trailing-icon .color1-fill {
  fill: var(--brand-secondary); }

.dc-autocomplete:focus .dc-input:not(.dc-input--error) .dc-autocomplete__trailing-icon .color1-fill, .dc-autocomplete:focus-within .dc-input:not(.dc-input--error) .dc-autocomplete__trailing-icon .color1-fill, .dc-autocomplete:active .dc-input:not(.dc-input--error) .dc-autocomplete__trailing-icon .color1-fill {
  fill: var(--brand-secondary); }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.dc-field-error {
  position: absolute;
  top: 4rem;
  text-align: left !important;
  padding-top: 0.4rem;
  padding-left: 1.2rem;
  color: var(--brand-red-coral);
  font-size: var(--text-size-xxs); }

.dc-input {
  position: relative;
  width: 100%;
  border-radius: 4px;
  border: 1px solid var(--border-normal);
  display: flex;
  align-items: center;
  margin-bottom: 3.2rem; }

.dc-input:hover:not(.dc-input__disabled) {
  border-color: var(--border-hover); }

.dc-input[focus-within] {
  border-color: var(--brand-secondary); }

.dc-input:focus-within {
  border-color: var(--brand-secondary); }

.dc-input[focus-within]:hover {
  border-color: var(--brand-secondary); }

.dc-input:focus-within:hover {
  border-color: var(--brand-secondary); }

.dc-input__disabled {
  border-color: var(--general-disabled);
  color: var(--text-disabled); }

.dc-input__field {
  background: none;
  color: var(--text-prominent);
  font-size: var(--text-size-xs);
  padding: 1rem 1.2rem;
  width: 100%;
  height: 3.8rem;
  display: block; }

.dc-input__field::-webkit-input-placeholder {
  line-height: 1.5;
  opacity: 0;
  transition: opacity 0.25s; }

.dc-input__field::-moz-placeholder {
  line-height: 1.5;
  opacity: 0;
  transition: opacity 0.25s; }

.dc-input__field:-ms-input-placeholder {
  line-height: 1.5;
  opacity: 0;
  transition: opacity 0.25s; }

.dc-input__field::-ms-input-placeholder {
  line-height: 1.5;
  opacity: 0;
  transition: opacity 0.25s; }

.dc-input__field::placeholder {
  line-height: 1.5;
  opacity: 0;
  transition: opacity 0.25s; }

.dc-input__field--placeholder-visible::-webkit-input-placeholder {
  opacity: 0.2; }

.dc-input__field--placeholder-visible::-moz-placeholder {
  opacity: 0.2; }

.dc-input__field--placeholder-visible:-ms-input-placeholder {
  opacity: 0.2; }

.dc-input__field--placeholder-visible::-ms-input-placeholder {
  opacity: 0.2; }

.dc-input__field--placeholder-visible::placeholder {
  opacity: 0.2; }

.dc-input__field:focus, .dc-input__field:disabled, .dc-input__field:not(:focus):not([value='']) {
  outline: none; }

.dc-input__field:focus ~ label, .dc-input__field:disabled ~ label, .dc-input__field:not(:focus):not([value='']) ~ label {
  transform: translate(0, -1.8rem) scale(0.75);
  padding: 0 4px; }

.dc-input__field:disabled {
  color: var(--text-disabled); }

.dc-input__field:disabled ~ label {
  color: var(--text-disabled); }

.dc-input__field:disabled ~ svg .color1-fill {
  fill: var(--text-disabled); }

@media not all and (min-resolution: 0.001dpcm) {
  @supports (-webkit-appearance: none) {
    .dc-input__field:disabled {
      color: var(--text-prominent); } } }

.dc-input__field:focus {
  outline: none; }

.dc-input__field:focus ~ label {
  color: var(--brand-secondary); }

.dc-input__field:focus::-webkit-input-placeholder {
  opacity: 0.4; }

.dc-input__field:focus::-moz-placeholder {
  opacity: 0.4; }

.dc-input__field:focus:-ms-input-placeholder {
  opacity: 0.4; }

.dc-input__field:focus::-ms-input-placeholder {
  opacity: 0.4; }

.dc-input__field:focus::placeholder {
  opacity: 0.4; }

.dc-input__field:not(.dc-input--no-placeholder):not(:focus):not([value='']) ~ label {
  color: var(--text-general); }

.dc-input__field[type=number]::-webkit-inner-spin-button, .dc-input__field[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0; }

.dc-input__field[type=textarea] {
  height: 9.6rem;
  border: none;
  resize: none; }

.dc-input__field[type=textarea] ~ .dc-field-error {
  top: 10rem; }

.dc-input__field:-webkit-autofill {
  border-radius: 4px;
  -webkit-box-shadow: 0 0 0 30px var(--fill-normal) inset !important;
  -webkit-text-fill-color: var(--text-prominent) !important; }

.dc-input__field:-webkit-autofill:hover, .dc-input__field:-webkit-autofill:focus, .dc-input__field:-webkit-autofill:active {
  -webkit-box-shadow: 0 0 0 30px var(--fill-normal) inset !important; }

.dc-input__leading-icon {
  margin-left: 1rem;
  top: 1rem;
  position: absolute;
  left: 0;
  pointer-events: none;
  cursor: text;
  font-size: var(--text-size-xs); }

.dc-input__leading-icon.symbols {
  top: 0.9rem; }

.dc-input__leading-icon.symbols + .dc-input__field {
  padding-left: calc(1.6rem + 15px); }

.dc-input__leading-icon.symbols--usd + .dc-input__field {
  padding-left: calc(1.6rem + 3px); }

.dc-input__leading-icon.symbols--eur + .dc-input__field, .dc-input__leading-icon.symbols--gbp + .dc-input__field, .dc-input__leading-icon.symbols--eth + .dc-input__field, .dc-input__leading-icon.symbols--etc + .dc-input__field {
  padding-left: calc(1.6rem + 4px); }

.dc-input__leading-icon.symbols--btc + .dc-input__field, .dc-input__leading-icon.symbols--ltc + .dc-input__field {
  padding-left: calc(1.6rem + 5px); }

.dc-input__leading-icon.symbols--ust + .dc-input__field {
  padding-left: calc(1.6rem + 7px); }

.dc-input__leading-icon.symbols--bch + .dc-input__field {
  padding-left: calc(1.6rem + 10px); }

.dc-input__leading-icon.symbols--aud + .dc-input__field {
  padding-left: calc(1.6rem + 15px); }

.dc-input__trailing-icon {
  margin: 0 1.2rem 0 0 !important; }

.dc-input__trailing-icon .color1-fill {
  fill: var(--text-less-prominent); }

.dc-input__trailing-icon .color1-stroke {
  fill: var(--text-less-prominent); }

.dc-input__label {
  color: var(--text-less-prominent);
  font-size: var(--text-size-xs);
  background-color: var(--fill-normal);
  position: absolute;
  pointer-events: none;
  left: 1rem;
  top: 0.9rem;
  transition: 0.25s ease all;
  transform-origin: top left; }

.dc-input:not(.dc-input--no-placeholder)__label {
  color: var(--text-general);
  transition: 0.25s ease all;
  transform: translateZ(0); }

.dc-input__hint {
  color: var(--text-less-prominent);
  font-size: 1.2rem;
  margin-left: 1.2rem;
  position: absolute;
  top: 4rem; }

.dc-input--no-placeholder label {
  transform: translate(0, -1.8rem) scale(0.75);
  color: var(--text-prominent);
  padding: 0 4px;
  background-color: var(--fill-normal); }

.dc-input--error {
  border-color: var(--brand-red-coral) !important; }

.dc-input--error label {
  color: var(--brand-red-coral) !important; }

.dc-input__error {
  color: var(--text-loss-danger); }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/* postcss-bem-linter: ignore */
html {
  font-size: 62.5%;
  /** TODO: define breakpoints */ }

/** @define body */
.body {
  position: relative;
  min-height: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden; }

/* postcss-bem-linter: ignore */
*, html, .body {
  font-family: "IBM Plex Sans", sans-serif;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  box-sizing: border-box; }

/** @define select */
.select {
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  padding: 2px 3px;
  border: 1px solid var(--border-normal);
  border-radius: 4px; }

/** @define input */
.input {
  font-family: inherit;
  font-style: inherit;
  padding: 2px 3px;
  color: var(--text-general); }

::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
  color: var(--text-general); }

::-moz-placeholder {
  /* Firefox 19+ */
  color: var(--text-general); }

:-ms-input-placeholder {
  /* IE 10+ */
  color: var(--text-general); }

:-moz-placeholder {
  /* Firefox 18- */
  color: var(--text-general); }

/** @define theme */
.theme--light {
  background: #ffffff; }

.theme--dark {
  background: #0e0e0e; }

/** @define container */
.container {
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
  box-sizing: border-box; }

/** @define hidden */
.hidden {
  visibility: hidden !important;
  transition: none !important; }

/** @define absolute-center-v */
.absolute-center-v {
  position: absolute;
  margin: auto;
  top: 0;
  bottom: 0; }

/** @define link */
.link {
  color: var(--brand-red-coral);
  font-weight: bold;
  text-decoration: none; }
  .link:hover {
    text-decoration: underline;
    cursor: pointer; }
  .link--white {
    color: #ffffff; }

/** @define icon */
.icon--centered {
  top: 0.8em;
  left: 5%; }

/** @define center-text */
.center-text {
  text-align: center; }

/** @define no-margin */
.no-margin {
  margin: 0; }

/** @define hr */
.hr {
  border-top: var(--general-section-1);
  display: block;
  height: 1px;
  border: 0;
  margin: 0.5em 0;
  padding: 0; }

/** @define deriv-app */
.deriv-app {
  height: 100%;
  overflow: hidden; }

.currency-list {
  width: 100%; }
  .currency-list form {
    width: 100%; }
  .currency-list__items {
    display: flex;
    justify-content: space-around; }
  .currency-list__item {
    align-items: center;
    border-radius: 8px;
    display: inline-flex;
    flex-direction: column;
    height: 128px;
    justify-content: space-around;
    margin: 1.6rem 2rem 0;
    width: 128px; }
    .currency-list__item:hover:not(.currency-list__item--selected) {
      cursor: pointer;
      border: 1px solid var(--border-hover); }
    .currency-list__item--current {
      pointer-events: none; }
      .currency-list__item--current svg {
        opacity: 0.08; }
      .currency-list__item--current .label {
        color: var(--text-disabled); }
    .currency-list__item--selected {
      border: 2px solid var(--border-active); }
      .currency-list__item--selected p.label {
        font-size: 1.4rem;
        color: var(--text-general);
        font-weight: 700;
        text-transform: none;
        text-align: center;
        line-height: 1.5;
        color: var(--text-prominent); }
    .currency-list__item > div {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      align-items: center; }
    .currency-list__item svg {
      height: 48px;
      width: 48px;
      margin-bottom: 1em; }
    .currency-list__item p {
      text-align: center;
      font-size: 1.4rem;
      color: var(--text-general);
      font-weight: 400;
      text-transform: none;
      text-align: center;
      line-height: 1.5;
      color: var(--text-general); }
  .currency-list__radio-button {
    display: none; }

.currency-hr {
  height: 2px;
  margin: 1.6rem 0 0;
  width: 100%;
  border-top: 1px solid var(--general-section-2); }

.currency-selector__radio-group {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  justify-content: space-around; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/* postcss-bem-linter: ignore */
html {
  font-size: 62.5%;
  /** TODO: define breakpoints */ }

/** @define body */
.body {
  position: relative;
  min-height: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden; }

/* postcss-bem-linter: ignore */
*, html, .body {
  font-family: "IBM Plex Sans", sans-serif;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  box-sizing: border-box; }

/** @define select */
.select {
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  padding: 2px 3px;
  border: 1px solid var(--border-normal);
  border-radius: 4px; }

/** @define input */
.input {
  font-family: inherit;
  font-style: inherit;
  padding: 2px 3px;
  color: var(--text-general); }

::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
  color: var(--text-general); }

::-moz-placeholder {
  /* Firefox 19+ */
  color: var(--text-general); }

:-ms-input-placeholder {
  /* IE 10+ */
  color: var(--text-general); }

:-moz-placeholder {
  /* Firefox 18- */
  color: var(--text-general); }

/** @define theme */
.theme--light {
  background: #ffffff; }

.theme--dark {
  background: #0e0e0e; }

/** @define container */
.container {
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
  box-sizing: border-box; }

/** @define hidden */
.hidden {
  visibility: hidden !important;
  transition: none !important; }

/** @define absolute-center-v */
.absolute-center-v {
  position: absolute;
  margin: auto;
  top: 0;
  bottom: 0; }

/** @define link */
.link {
  color: var(--brand-red-coral);
  font-weight: bold;
  text-decoration: none; }
  .link:hover {
    text-decoration: underline;
    cursor: pointer; }
  .link--white {
    color: #ffffff; }

/** @define icon */
.icon--centered {
  top: 0.8em;
  left: 5%; }

/** @define center-text */
.center-text {
  text-align: center; }

/** @define no-margin */
.no-margin {
  margin: 0; }

/** @define hr */
.hr {
  border-top: var(--general-section-1);
  display: block;
  height: 1px;
  border: 0;
  margin: 0.5em 0;
  padding: 0; }

/** @define deriv-app */
.deriv-app {
  height: 100%;
  overflow: hidden; }

.details-form {
  flex-grow: 1; }
  .details-form .datepicker {
    max-width: none;
    max-width: initial;
    position: relative; }
    .details-form .datepicker--active-label label {
      color: var(--text-general); }
    .details-form .datepicker .icon-datepicker {
      top: 1.2rem;
      right: 1rem;
      position: absolute; }
    .details-form .datepicker__picker {
      margin-top: 8px; }
    .details-form .datepicker .calendar__cell--disabled {
      color: var(--text-disabled) !important; }
    .details-form .datepicker .calendar__cell--other:not(.calendar__cell--today) {
      color: var(--text-prominent); }
  .details-form__elements {
    flex-grow: 1;
    margin: 1.2rem auto;
    width: 40%; }
    .details-form__elements-container {
      height: calc(100% - 76px);
      overflow: hidden; }
    .details-form__elements .dc-input label {
      top: 1.2rem;
      background-color: var(--general-main-2); }
    .details-form__elements .dc-dropdown__display {
      background-color: var(--general-main-2); }
      .details-form__elements .dc-dropdown__display-placeholder-text {
        background-color: var(--general-main-2); }
  .details-form__description {
    text-align: center;
    font-size: var(--text-size-xxs);
    margin: 1.6rem 0;
    color: var(--text-general); }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.dc-icon {
  --fill-color1: var(--text-general);
  --fill-color2: var(--text-less-prominent);
  --fill-color3: var(--general-section-1); }

.dc-icon--disabled {
  --fill-color1: var(--text-disabled);
  --fill-color2: var(--text-disabled); }

.dc-icon--active {
  --fill-color1: #fff;
  --fill-color2: #fff; }

.dc-icon--green {
  --fill-color1: var(--text-profit-success);
  --fill-color2: var(--text-profit-success);
  --fill-color3: #fff; }

.dc-icon--red {
  --fill-color1: var(--text-loss-danger);
  --fill-color2: var(--text-loss-danger);
  --fill-color3: #fff; }

.dc-icon--secondary {
  --fill-color1: var(--text-less-prominent);
  --fill-color2: var(--text-less-prominent);
  --fill-color3: #fff; }

.dc-icon--brand {
  --fill-color1: var(--brand-red-coral);
  --fill-color2: var(--brand-secondary);
  --fill-color3: #fff; }

.dc-checkbox {
  display: flex;
  justify-content: flex-start;
  cursor: pointer;
  align-items: center; }

.dc-checkbox__input {
  display: none; }

.dc-checkbox__box {
  display: block;
  width: 16px;
  height: 16px;
  transition: 0.3s ease-in-out;
  flex-shrink: 0;
  margin: 2px 8px 0 0;
  border-radius: 2px;
  align-self: flex-start;
  border: 2px solid var(--text-less-prominent); }

.dc-checkbox__box--active {
  border: none;
  background-color: var(--brand-red-coral); }

.dc-checkbox--active {
  border: none;
  background-color: var(--brand-red-coral); }

.dc-checkbox__label {
  color: var(--text-general);
  font-size: var(--text-size-xs); }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/* postcss-bem-linter: ignore */
html {
  font-size: 62.5%;
  /** TODO: define breakpoints */ }

/** @define body */
.body {
  position: relative;
  min-height: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden; }

/* postcss-bem-linter: ignore */
*, html, .body {
  font-family: "IBM Plex Sans", sans-serif;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  box-sizing: border-box; }

/** @define select */
.select {
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  padding: 2px 3px;
  border: 1px solid var(--border-normal);
  border-radius: 4px; }

/** @define input */
.input {
  font-family: inherit;
  font-style: inherit;
  padding: 2px 3px;
  color: var(--text-general); }

::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
  color: var(--text-general); }

::-moz-placeholder {
  /* Firefox 19+ */
  color: var(--text-general); }

:-ms-input-placeholder {
  /* IE 10+ */
  color: var(--text-general); }

:-moz-placeholder {
  /* Firefox 18- */
  color: var(--text-general); }

/** @define theme */
.theme--light {
  background: #ffffff; }

.theme--dark {
  background: #0e0e0e; }

/** @define container */
.container {
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
  box-sizing: border-box; }

/** @define hidden */
.hidden {
  visibility: hidden !important;
  transition: none !important; }

/** @define absolute-center-v */
.absolute-center-v {
  position: absolute;
  margin: auto;
  top: 0;
  bottom: 0; }

/** @define link */
.link {
  color: var(--brand-red-coral);
  font-weight: bold;
  text-decoration: none; }
  .link:hover {
    text-decoration: underline;
    cursor: pointer; }
  .link--white {
    color: #ffffff; }

/** @define icon */
.icon--centered {
  top: 0.8em;
  left: 5%; }

/** @define center-text */
.center-text {
  text-align: center; }

/** @define no-margin */
.no-margin {
  margin: 0; }

/** @define hr */
.hr {
  border-top: var(--general-section-1);
  display: block;
  height: 1px;
  border: 0;
  margin: 0.5em 0;
  padding: 0; }

/** @define deriv-app */
.deriv-app {
  height: 100%;
  overflow: hidden; }

.terms-of-use {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  margin: 0 8rem 0.8rem; }
  .terms-of-use .dc-checkbox__label {
    font-size: 1.4rem;
    color: var(--text-general);
    font-weight: 400;
    text-transform: none;
    text-align: left;
    line-height: 1.5;
    text-transform: none;
    color: var(--text-general); }
  .terms-of-use__checkbox {
    margin-top: 2rem; }
  .terms-of-use h4 {
    font-size: 1.4rem;
    color: var(--text-general);
    font-weight: 700;
    text-transform: none;
    text-align: left;
    line-height: 1.5;
    margin: 1rem 0;
    text-transform: none;
    color: var(--text-general); }
  .terms-of-use p {
    font-size: 1.4rem;
    color: var(--text-general);
    font-weight: 400;
    text-transform: none;
    text-align: left;
    line-height: 1.5;
    text-transform: none;
    color: var(--text-general); }
  .terms-of-use input {
    display: none; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/* postcss-bem-linter: ignore */
html {
  font-size: 62.5%;
  /** TODO: define breakpoints */ }

/** @define body */
.body {
  position: relative;
  min-height: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden; }

/* postcss-bem-linter: ignore */
*, html, .body {
  font-family: "IBM Plex Sans", sans-serif;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  box-sizing: border-box; }

/** @define select */
.select {
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  padding: 2px 3px;
  border: 1px solid var(--border-normal);
  border-radius: 4px; }

/** @define input */
.input {
  font-family: inherit;
  font-style: inherit;
  padding: 2px 3px;
  color: var(--text-general); }

::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
  color: var(--text-general); }

::-moz-placeholder {
  /* Firefox 19+ */
  color: var(--text-general); }

:-ms-input-placeholder {
  /* IE 10+ */
  color: var(--text-general); }

:-moz-placeholder {
  /* Firefox 18- */
  color: var(--text-general); }

/** @define theme */
.theme--light {
  background: #ffffff; }

.theme--dark {
  background: #0e0e0e; }

/** @define container */
.container {
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
  box-sizing: border-box; }

/** @define hidden */
.hidden {
  visibility: hidden !important;
  transition: none !important; }

/** @define absolute-center-v */
.absolute-center-v {
  position: absolute;
  margin: auto;
  top: 0;
  bottom: 0; }

/** @define link */
.link {
  color: var(--brand-red-coral);
  font-weight: bold;
  text-decoration: none; }
  .link:hover {
    text-decoration: underline;
    cursor: pointer; }
  .link--white {
    color: #ffffff; }

/** @define icon */
.icon--centered {
  top: 0.8em;
  left: 5%; }

/** @define center-text */
.center-text {
  text-align: center; }

/** @define no-margin */
.no-margin {
  margin: 0; }

/** @define hr */
.hr {
  border-top: var(--general-section-1);
  display: block;
  height: 1px;
  border: 0;
  margin: 0.5em 0;
  padding: 0; }

/** @define deriv-app */
.deriv-app {
  height: 100%;
  overflow: hidden; }

.add-or-manage {
  flex-direction: row;
  /* fix for Safari */
  flex-wrap: wrap; }
  .add-or-manage form {
    flex-direction: column; }

.success-change {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  flex-grow: 1; }
  .success-change__icon-area {
    display: flex;
    align-items: center;
    width: 60%;
    justify-content: space-between;
    position: relative;
    margin-top: 3rem; }
    .success-change__icon-area .bottom-right-overlay {
      position: absolute;
      bottom: 0;
      right: 0rem;
      width: 3rem;
      height: 3rem; }
    .success-change__icon-area svg.inline-icon {
      width: 90px;
      height: 120px; }
    .success-change__icon-area svg {
      display: block; }
    .success-change__icon-area--xlarge, .success-change__icon-area--large {
      width: auto; }
      .success-change__icon-area--xlarge .bottom-right-overlay, .success-change__icon-area--large .bottom-right-overlay {
        width: 48px;
        height: 48px;
        right: 0; }
    .success-change__icon-area--xlarge svg:first-child {
      width: 128px;
      height: 128px; }
    .success-change__icon-area--large svg.inline-icon {
      width: 120px;
      height: 120px; }
  .success-change__body-area {
    flex-grow: 1; }
    .success-change__body-area h2 {
      font-size: 1.6rem;
      color: var(--text-general);
      font-weight: 700;
      text-transform: none;
      text-align: center;
      line-height: 1.75;
      margin-top: 2rem;
      color: var(--text-general); }
    .success-change__body-area p {
      font-size: 1.4rem;
      color: var(--text-general);
      font-weight: 400;
      text-transform: none;
      text-align: left;
      line-height: 1.5;
      padding: 1rem;
      text-align: center;
      text-transform: none;
      color: var(--text-general); }
  .success-change__btn-area {
    margin: 3rem 0;
    width: 100%;
    display: flex;
    justify-content: center; }
    .success-change__btn-area .btn {
      margin: 0 2rem;
      height: 4rem; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/* postcss-bem-linter: ignore */
html {
  font-size: 62.5%;
  /** TODO: define breakpoints */ }

/** @define body */
.body {
  position: relative;
  min-height: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden; }

/* postcss-bem-linter: ignore */
*, html, .body {
  font-family: "IBM Plex Sans", sans-serif;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  box-sizing: border-box; }

/** @define select */
.select {
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  padding: 2px 3px;
  border: 1px solid var(--border-normal);
  border-radius: 4px; }

/** @define input */
.input {
  font-family: inherit;
  font-style: inherit;
  padding: 2px 3px;
  color: var(--text-general); }

::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
  color: var(--text-general); }

::-moz-placeholder {
  /* Firefox 19+ */
  color: var(--text-general); }

:-ms-input-placeholder {
  /* IE 10+ */
  color: var(--text-general); }

:-moz-placeholder {
  /* Firefox 18- */
  color: var(--text-general); }

/** @define theme */
.theme--light {
  background: #ffffff; }

.theme--dark {
  background: #0e0e0e; }

/** @define container */
.container {
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
  box-sizing: border-box; }

/** @define hidden */
.hidden {
  visibility: hidden !important;
  transition: none !important; }

/** @define absolute-center-v */
.absolute-center-v {
  position: absolute;
  margin: auto;
  top: 0;
  bottom: 0; }

/** @define link */
.link {
  color: var(--brand-red-coral);
  font-weight: bold;
  text-decoration: none; }
  .link:hover {
    text-decoration: underline;
    cursor: pointer; }
  .link--white {
    color: #ffffff; }

/** @define icon */
.icon--centered {
  top: 0.8em;
  left: 5%; }

/** @define center-text */
.center-text {
  text-align: center; }

/** @define no-margin */
.no-margin {
  margin: 0; }

/** @define hr */
.hr {
  border-top: var(--general-section-1);
  display: block;
  height: 1px;
  border: 0;
  margin: 0.5em 0;
  padding: 0; }

/** @define deriv-app */
.deriv-app {
  height: 100%;
  overflow: hidden; }

.change-currency {
  background-color: var(--general-section-1);
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px; }
  .change-currency h1 {
    text-transform: none; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/* postcss-bem-linter: ignore */
html {
  font-size: 62.5%;
  /** TODO: define breakpoints */ }

/** @define body */
.body {
  position: relative;
  min-height: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden; }

/* postcss-bem-linter: ignore */
*, html, .body {
  font-family: "IBM Plex Sans", sans-serif;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  box-sizing: border-box; }

/** @define select */
.select {
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  padding: 2px 3px;
  border: 1px solid var(--border-normal);
  border-radius: 4px; }

/** @define input */
.input {
  font-family: inherit;
  font-style: inherit;
  padding: 2px 3px;
  color: var(--text-general); }

::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
  color: var(--text-general); }

::-moz-placeholder {
  /* Firefox 19+ */
  color: var(--text-general); }

:-ms-input-placeholder {
  /* IE 10+ */
  color: var(--text-general); }

:-moz-placeholder {
  /* Firefox 18- */
  color: var(--text-general); }

/** @define theme */
.theme--light {
  background: #ffffff; }

.theme--dark {
  background: #0e0e0e; }

/** @define container */
.container {
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
  box-sizing: border-box; }

/** @define hidden */
.hidden {
  visibility: hidden !important;
  transition: none !important; }

/** @define absolute-center-v */
.absolute-center-v {
  position: absolute;
  margin: auto;
  top: 0;
  bottom: 0; }

/** @define link */
.link {
  color: var(--brand-red-coral);
  font-weight: bold;
  text-decoration: none; }
  .link:hover {
    text-decoration: underline;
    cursor: pointer; }
  .link--white {
    color: #ffffff; }

/** @define icon */
.icon--centered {
  top: 0.8em;
  left: 5%; }

/** @define center-text */
.center-text {
  text-align: center; }

/** @define no-margin */
.no-margin {
  margin: 0; }

/** @define hr */
.hr {
  border-top: var(--general-section-1);
  display: block;
  height: 1px;
  border: 0;
  margin: 0.5em 0;
  padding: 0; }

/** @define deriv-app */
.deriv-app {
  height: 100%;
  overflow: hidden; }

.dc-modal__container_real-account-signup-modal {
  display: flex;
  flex-direction: column;
  transition: all 0.3s ease-in-out; }
  .dc-modal__container_real-account-signup-modal--success {
    max-height: 380px;
    border-radius: 4px;
    overflow: hidden;
    max-width: 478px; }
  .dc-modal__container_real-account-signup-modal .dc-modal-header__title {
    text-transform: none;
    border-top-left-radius: 1em; }
  .dc-modal__container_real-account-signup-modal--error .account-wizard--error {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    height: 100%;
    width: 100%; }
  .dc-modal__container_real-account-signup-modal--error > svg {
    width: 128px;
    height: 128px;
    align-self: center;
    margin: 2em 0 0; }
  .dc-modal__container_real-account-signup-modal--error h1 {
    font-size: 1.6rem;
    color: var(--text-general);
    font-weight: 700;
    text-transform: none;
    text-align: center;
    line-height: 1.75;
    text-transform: none;
    color: var(--text-general);
    margin: 1.6rem; }
  .dc-modal__container_real-account-signup-modal--error p {
    font-size: 1.4rem;
    color: var(--text-general);
    font-weight: 400;
    text-transform: none;
    text-align: center;
    line-height: 1.5;
    text-transform: none;
    color: var(--text-prominent);
    width: 80%; }
  .dc-modal__container_real-account-signup-modal--error a {
    font-size: 1.4rem;
    color: var(--text-general);
    font-weight: 700;
    text-transform: none;
    text-align: center;
    line-height: 1.5;
    text-transform: none;
    text-decoration: none;
    color: var(--text-colored-background);
    display: flex;
    align-items: center;
    justify-content: center;
    width: 12em;
    align-self: center; }

.dc-modal-header__real-account-signup-modal {
  border-bottom: 1px solid var(--general-section-1); }

.account-wizard {
  display: flex;
  flex-direction: column;
  flex: 1 1 0;
  /* fix for Safari */
  width: 100%; }
  .account-wizard h1 {
    font-size: 1.6rem;
    color: var(--text-general);
    font-weight: 700;
    text-transform: none;
    text-align: center;
    line-height: 1.75;
    color: var(--text-prominent);
    text-transform: none;
    margin-top: 3rem; }
  .account-wizard h2 {
    font-size: 1.6rem;
    color: var(--text-general);
    font-weight: 700;
    text-transform: none;
    text-align: center;
    line-height: 1.75;
    text-transform: none;
    margin-top: 2.4rem;
    color: var(--text-less-prominent); }
  .account-wizard h3 {
    font-size: 1.2rem;
    color: var(--text-general);
    font-weight: 400;
    text-transform: none;
    text-align: center;
    line-height: 1.25;
    text-transform: none;
    color: var(--text-general);
    margin-bottom: 1.6rem; }
  .account-wizard form {
    display: flex;
    flex: 1 1 0;
    /* fix for Safari */
    width: 100%;
    padding: 0 2.4rem 3.2rem; }
  .account-wizard__body {
    display: flex;
    flex: 1 1 0;
    /* fix for Safari */
    width: 100%; }
  .account-wizard__set-currency p {
    margin-top: 2.4rem;
    font-size: 1.4rem;
    color: var(--text-general);
    font-weight: 400;
    text-transform: none;
    text-align: center;
    line-height: 1.5;
    text-transform: initial;
    color: var(--text-prominent); }
  .account-wizard__set-currency h2 {
    font-size: 1.6rem;
    color: var(--text-general);
    font-weight: 700;
    text-transform: none;
    text-align: center;
    line-height: 1.75;
    color: var(--text-prominent); }
  .account-wizard__btn-area {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    align-self: flex-end;
    padding-top: 2.4em;
    width: 100%; }
    .account-wizard__btn-area .btn:not(:last-child) {
      margin: 0 1em; }
    .account-wizard__btn-area .btn:last-child {
      margin: 0; }
    .account-wizard__btn-area--absolute {
      bottom: 0;
      position: absolute;
      left: 0;
      padding: 2.4em;
      border-top: 1px solid var(--general-section-1); }
    .account-wizard__btn-area--center {
      justify-content: center;
      width: 100%; }
      .account-wizard__btn-area--center .btn {
        min-width: 9em; }
    .account-wizard__btn-area--error {
      font-size: 1.4rem;
      color: var(--text-general);
      font-weight: 400;
      text-transform: none;
      text-align: left;
      line-height: 1.5;
      text-transform: none;
      color: var(--brand-red-coral) !important; }
  .account-wizard .checkbox {
    align-items: center;
    margin: 1rem 0 0; }
    .account-wizard .checkbox__box--active {
      background-color: var(--brand-red-coral); }
    .account-wizard .checkbox__box--active:after {
      font-size: 1.3rem;
      line-height: 20px; }
    .account-wizard .checkbox__label {
      font-size: 1.4rem;
      color: var(--text-general);
      font-weight: 400;
      text-transform: none;
      text-align: left;
      line-height: 1.5;
      text-transform: none; }
  .account-wizard--disabled {
    position: relative; }
    .account-wizard--disabled h1, .account-wizard--disabled h2, .account-wizard--disabled h3, .account-wizard--disabled p {
      color: var(--text-disabled); }
    .account-wizard--disabled .currency-list__item {
      pointer-events: none; }
      .account-wizard--disabled .currency-list__item svg {
        opacity: 0.08; }
      .account-wizard--disabled .currency-list__item .label {
        color: var(--text-disabled); }
    .account-wizard--disabled-message {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 99;
      display: flex;
      align-items: center;
      justify-content: center; }
      .account-wizard--disabled-message p {
        color: var(--text-general);
        font-size: var(--text-size-s);
        line-height: 1.5;
        width: 78%;
        text-align: center; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/* postcss-bem-linter: ignore */
html {
  font-size: 62.5%;
  /** TODO: define breakpoints */ }

/** @define body */
.body {
  position: relative;
  min-height: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden; }

/* postcss-bem-linter: ignore */
*, html, .body {
  font-family: "IBM Plex Sans", sans-serif;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  box-sizing: border-box; }

/** @define select */
.select {
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  padding: 2px 3px;
  border: 1px solid var(--border-normal);
  border-radius: 4px; }

/** @define input */
.input {
  font-family: inherit;
  font-style: inherit;
  padding: 2px 3px;
  color: var(--text-general); }

::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
  color: var(--text-general); }

::-moz-placeholder {
  /* Firefox 19+ */
  color: var(--text-general); }

:-ms-input-placeholder {
  /* IE 10+ */
  color: var(--text-general); }

:-moz-placeholder {
  /* Firefox 18- */
  color: var(--text-general); }

/** @define theme */
.theme--light {
  background: #ffffff; }

.theme--dark {
  background: #0e0e0e; }

/** @define container */
.container {
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
  box-sizing: border-box; }

/** @define hidden */
.hidden {
  visibility: hidden !important;
  transition: none !important; }

/** @define absolute-center-v */
.absolute-center-v {
  position: absolute;
  margin: auto;
  top: 0;
  bottom: 0; }

/** @define link */
.link {
  color: var(--brand-red-coral);
  font-weight: bold;
  text-decoration: none; }
  .link:hover {
    text-decoration: underline;
    cursor: pointer; }
  .link--white {
    color: #ffffff; }

/** @define icon */
.icon--centered {
  top: 0.8em;
  left: 5%; }

/** @define center-text */
.center-text {
  text-align: center; }

/** @define no-margin */
.no-margin {
  margin: 0; }

/** @define hr */
.hr {
  border-top: var(--general-section-1);
  display: block;
  height: 1px;
  border: 0;
  margin: 0.5em 0;
  padding: 0; }

/** @define deriv-app */
.deriv-app {
  height: 100%;
  overflow: hidden; }

.form-progress {
  width: 100%; }
  .form-progress__header {
    align-items: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    margin-bottom: 3.2em; }
    .form-progress__header h2 {
      font-size: var(--text-size-s);
      font-weight: bold;
      color: var(--text-general);
      text-transform: none; }
  .form-progress__step {
    align-items: center;
    display: flex;
    flex-direction: column;
    height: 6rem;
    justify-content: space-around;
    min-width: 160px;
    z-index: 2; }
    .form-progress__step .title {
      font-size: 1.2rem;
      color: var(--text-less-prominent); }
    .form-progress__step .identifier {
      border-radius: 50%;
      display: block;
      width: 24px;
      font-size: 1.4rem;
      color: var(--text-general);
      font-weight: 700;
      text-transform: none;
      text-align: center;
      line-height: 1.5;
      background-color: var(--text-less-prominent);
      border: 1px solid var(--text-less-prominent);
      color: var(--text-colored-background); }
    .form-progress__step--active .identifier {
      font-size: 1.4rem;
      color: var(--text-general);
      font-weight: 700;
      text-transform: none;
      text-align: center;
      line-height: 1.5;
      background-color: var(--brand-red-coral) !important;
      border: 1px solid var(--brand-red-coral) !important;
      color: var(--text-colored-background);
      transition: all 0.3s ease; }
    .form-progress__step--current .title {
      color: var(--brand-red-coral);
      font-weight: bold; }
  .form-progress__steps {
    align-items: center;
    display: flex;
    justify-content: center;
    margin-top: 20px;
    position: relative; }
    .form-progress__steps--before {
      bottom: 0;
      content: '';
      left: 0;
      margin: 0 auto;
      /* this centers the line to the full width specified */
      position: absolute;
      /* positioning must be absolute here, and relative positioning must be applied to the parent */
      right: 0;
      top: 1.7em;
      width: 77%;
      border-top: 2px solid var(--text-less-prominent); }
    .form-progress__steps--after {
      border-top: 2px solid var(--brand-red-coral);
      bottom: 0;
      content: '';
      left: 0;
      margin: 0 auto;
      /* this centers the line to the full width specified */
      position: absolute;
      /* positioning must be absolute here, and relative positioning must be applied to the parent */
      top: 1.7em;
      transition: width 0.3s ease; }

.modal__container.modal__real-account-signup-modal .vertical-tab__content {
  padding: 0 !important; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/* postcss-bem-linter: ignore */
html {
  font-size: 62.5%;
  /** TODO: define breakpoints */ }

/** @define body */
.body {
  position: relative;
  min-height: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden; }

/* postcss-bem-linter: ignore */
*, html, .body {
  font-family: "IBM Plex Sans", sans-serif;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  box-sizing: border-box; }

/** @define select */
.select {
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  padding: 2px 3px;
  border: 1px solid var(--border-normal);
  border-radius: 4px; }

/** @define input */
.input {
  font-family: inherit;
  font-style: inherit;
  padding: 2px 3px;
  color: var(--text-general); }

::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
  color: var(--text-general); }

::-moz-placeholder {
  /* Firefox 19+ */
  color: var(--text-general); }

:-ms-input-placeholder {
  /* IE 10+ */
  color: var(--text-general); }

:-moz-placeholder {
  /* Firefox 18- */
  color: var(--text-general); }

/** @define theme */
.theme--light {
  background: #ffffff; }

.theme--dark {
  background: #0e0e0e; }

/** @define container */
.container {
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
  box-sizing: border-box; }

/** @define hidden */
.hidden {
  visibility: hidden !important;
  transition: none !important; }

/** @define absolute-center-v */
.absolute-center-v {
  position: absolute;
  margin: auto;
  top: 0;
  bottom: 0; }

/** @define link */
.link {
  color: var(--brand-red-coral);
  font-weight: bold;
  text-decoration: none; }
  .link:hover {
    text-decoration: underline;
    cursor: pointer; }
  .link--white {
    color: #ffffff; }

/** @define icon */
.icon--centered {
  top: 0.8em;
  left: 5%; }

/** @define center-text */
.center-text {
  text-align: center; }

/** @define no-margin */
.no-margin {
  margin: 0; }

/** @define hr */
.hr {
  border-top: var(--general-section-1);
  display: block;
  height: 1px;
  border: 0;
  margin: 0.5em 0;
  padding: 0; }

/** @define deriv-app */
.deriv-app {
  height: 100%;
  overflow: hidden; }

/** @define notification-messages; */
.notification-messages {
  z-index: 4;
  position: absolute;
  right: 0;
  top: 8px; }

/** @define notification; weak */
.notification {
  position: relative;
  display: flex;
  border-radius: 4px;
  max-width: 348px;
  padding: 16px;
  color: var(--text-prominent);
  background-color: var(--general-main-2);
  box-shadow: 0 4px 6px 0 var(--shadow-menu), 0 4px 6px 0 var(--shadow-menu);
  overflow: hidden;
  transition: transform 0.25s ease, opacity 0.25s linear; }
  .notification--enter-done {
    opacity: 1;
    transform: translateY(0); }
  .notification--enter, .notification--exit {
    opacity: 0;
    transform: translateY(-16px); }
  .notification--small {
    max-width: 240px; }
  .notification__cta-button {
    margin-top: 0.8rem;
    flex-grow: 1;
    height: 24px;
    max-width: 150px;
    align-self: flex-end; }
    .notification__cta-button .btn__text {
      font-size: 1.2rem; }
  .notification__text-container {
    display: flex;
    flex-direction: column;
    z-index: 2;
    width: 100%; }
  .notification__text-body {
    font-size: 1.4rem;
    line-height: 1.43; }
  .notification__header {
    font-size: 1.6rem;
    font-weight: bold;
    line-height: 1.5;
    margin-bottom: 8px; }
  .notification__close-button {
    position: absolute;
    top: -4px;
    right: 8px;
    visibility: visible;
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
    z-index: 2; }
    .notification__close-button:focus, .notification__close-button:active {
      outline: none; }
    .notification__close-button:after {
      content: '\0000D7';
      font-size: 30px;
      font-weight: 300;
      color: var(--text-prominent); }
  .notification__icon-type {
    margin-right: 15px;
    margin-top: 0.5rem;
    width: 1.4rem;
    height: 1.4rem; }
    .notification__icon-type--is-background {
      width: 160px;
      height: 160px; }
  .notification__icon-background {
    position: absolute;
    left: -20px;
    bottom: -20px;
    pointer-events: none;
    opacity: 0.07;
    z-index: 0; }
  .notification:not(:last-child) {
    margin-bottom: 16px; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.barspinner {
  margin: auto;
  width: 6em;
  height: 2em;
  white-space: nowrap; }

.barspinner__rect {
  margin: 0.4em;
  border-radius: 20px;
  height: 60%;
  width: 0.6em;
  display: inline-block;
  -webkit-animation: sk-stretchdelay 1.2s infinite ease-in-out;
          animation: sk-stretchdelay 1.2s infinite ease-in-out; }

.barspinner__rect--1 {
  -webkit-animation-delay: -1.2s;
          animation-delay: -1.2s; }

.barspinner__rect--2 {
  -webkit-animation-delay: -1.1s;
          animation-delay: -1.1s; }

.barspinner__rect--3 {
  -webkit-animation-delay: -1s;
          animation-delay: -1s; }

.barspinner__rect--4 {
  -webkit-animation-delay: -.9s;
          animation-delay: -.9s; }

.barspinner__rect--5 {
  -webkit-animation-delay: -.8s;
          animation-delay: -.8s; }

.barspinner--dark .barspinner__rect {
  background-color: var(--brand-secondary); }

@-webkit-keyframes sk-stretchdelay {
  0%, 40%, 100% {
    transform: scaleY(1); }
  20% {
    transform: scaleY(2); } }

@keyframes sk-stretchdelay {
  0%, 40%, 100% {
    transform: scaleY(1); }
  20% {
    transform: scaleY(2); } }

.initial-loader {
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  display: flex;
  background: transparent; }

.initial-loader--fullscreen {
  width: 100vw;
  height: 100vh; }

.initial-loader__barspinner {
  margin: 5em auto; }

.initial-loader__barspinner--rect {
  background-color: var(--brand-secondary); }

.initial-loader__text {
  line-height: 44px;
  color: var(--text-prominent);
  font-size: 1.4rem;
  color: var(--text-general);
  font-weight: 400;
  text-transform: none;
  text-align: center;
  line-height: 1.5; }

.dc-icon {
  --fill-color1: var(--text-general);
  --fill-color2: var(--text-less-prominent);
  --fill-color3: var(--general-section-1); }

.dc-icon--disabled {
  --fill-color1: var(--text-disabled);
  --fill-color2: var(--text-disabled); }

.dc-icon--active {
  --fill-color1: #fff;
  --fill-color2: #fff; }

.dc-icon--green {
  --fill-color1: var(--text-profit-success);
  --fill-color2: var(--text-profit-success);
  --fill-color3: #fff; }

.dc-icon--red {
  --fill-color1: var(--text-loss-danger);
  --fill-color2: var(--text-loss-danger);
  --fill-color3: #fff; }

.dc-icon--secondary {
  --fill-color1: var(--text-less-prominent);
  --fill-color2: var(--text-less-prominent);
  --fill-color3: #fff; }

.dc-icon--brand {
  --fill-color1: var(--brand-red-coral);
  --fill-color2: var(--brand-secondary);
  --fill-color3: #fff; }

.dc-dialog {
  width: 100vw;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  flex-direction: column;
  z-index: 999;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0; }

.dc-dialog__wrapper {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 999;
  transition: transform 0.25s cubic-bezier(0.25, 0.1, 0.1, 0.25), opacity 0.25s cubic-bezier(0.25, 0.1, 0.1, 0.25); }

.dc-dialog__wrapper--enter, .dc-dialog__wrapper--exit {
  transform: translate3d(0, 50px, 0);
  opacity: 0; }

.dc-dialog__wrapper--enter-done {
  transform: translate3d(0, 0, 0);
  opacity: 1; }

.dc-dialog__dialog {
  max-width: 560px;
  max-height: 320px;
  min-width: 480px;
  min-height: 176px;
  margin-top: -48px;
  padding: 1.6em;
  border-radius: 4px;
  box-sizing: border-box;
  display: flex;
  justify-content: space-around;
  flex-direction: column;
  align-items: center;
  box-shadow: 0 2px 8px 0 var(--shadow-menu);
  background-color: var(--general-main-2); }

.dc-dialog__header {
  align-self: flex-start;
  font-size: 1.6rem;
  color: var(--text-general);
  font-weight: 700;
  text-transform: none;
  text-align: left;
  line-height: 1.75;
  margin-bottom: 10px;
  color: var(--text-prominent); }

.dc-dialog__content {
  align-self: flex-start;
  font-size: 1.4rem;
  color: var(--text-general);
  font-weight: 400;
  text-transform: unset;
  text-align: left;
  line-height: 1.5;
  margin-bottom: 22.85714px;
  color: var(--text-general);
  max-width: 448px; }

.dc-dialog__content .dc-input__label {
  background-color: var(--general-main-2); }

.dc-dialog__content--centered {
  align-self: center; }

.dc-dialog__footer {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  width: 100%; }

.dc-dialog__button {
  margin: 0.4em; }

@media screen and (max-width: 560px) {
  .dc-dialog__dialog {
    width: 100vw;
    height: 100vh; } }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.advanced-simple-toggle__icon, .footer__link:hover .footer__icon, .footer__icon, .contract-drawer svg, .positions-drawer__icon-close svg, .account-settings-toggle svg, .calendar__icon, .datepicker__icon, .side-menu__icon, .cashier__transferred-icon {
  /* postcss-bem-linter: ignore */
  /* postcss-bem-linter: ignore */
  /* postcss-bem-linter: ignore */
  /* postcss-bem-linter: ignore */ }
  .advanced-simple-toggle__icon .color1-fill, .footer__link:hover .footer__icon .color1-fill, .footer__icon .color1-fill, .contract-drawer svg .color1-fill, .positions-drawer__icon-close svg .color1-fill, .account-settings-toggle svg .color1-fill, .calendar__icon .color1-fill, .datepicker__icon .color1-fill, .side-menu__icon .color1-fill, .cashier__transferred-icon .color1-fill {
    fill: var(--text-general); }
  .advanced-simple-toggle__icon .color1-stroke, .footer__link:hover .footer__icon .color1-stroke, .footer__icon .color1-stroke, .contract-drawer svg .color1-stroke, .positions-drawer__icon-close svg .color1-stroke, .account-settings-toggle svg .color1-stroke, .calendar__icon .color1-stroke, .datepicker__icon .color1-stroke, .side-menu__icon .color1-stroke, .cashier__transferred-icon .color1-stroke {
    stroke: var(--text-general); }
  .advanced-simple-toggle__icon .color2-fill, .footer__link:hover .footer__icon .color2-fill, .footer__icon .color2-fill, .contract-drawer svg .color2-fill, .positions-drawer__icon-close svg .color2-fill, .account-settings-toggle svg .color2-fill, .calendar__icon .color2-fill, .datepicker__icon .color2-fill, .side-menu__icon .color2-fill, .cashier__transferred-icon .color2-fill {
    fill: none; }
  .advanced-simple-toggle__icon .color2-stroke, .footer__link:hover .footer__icon .color2-stroke, .footer__icon .color2-stroke, .contract-drawer svg .color2-stroke, .positions-drawer__icon-close svg .color2-stroke, .account-settings-toggle svg .color2-stroke, .calendar__icon .color2-stroke, .datepicker__icon .color2-stroke, .side-menu__icon .color2-stroke, .cashier__transferred-icon .color2-stroke {
    stroke: none; }
  .active.advanced-simple-toggle__icon, .header__menu-link--active .header__icon, .footer__link:hover .active.footer__icon, .active.footer__icon, .ic-settings--active .ic-settings__icon, .contract-drawer svg.active, .positions-drawer__icon-close svg.active, .account-settings-toggle svg.active, .account-settings-toggle:hover svg, .active.calendar__icon, .active.datepicker__icon, .active.side-menu__icon, .active.cashier__transferred-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .active.advanced-simple-toggle__icon .color1-fill, .header__menu-link--active .header__icon .color1-fill, .active.footer__icon .color1-fill, .ic-settings--active .ic-settings__icon .color1-fill, .contract-drawer svg.active .color1-fill, .positions-drawer__icon-close svg.active .color1-fill, .account-settings-toggle svg.active .color1-fill, .account-settings-toggle:hover svg .color1-fill, .active.calendar__icon .color1-fill, .active.datepicker__icon .color1-fill, .active.side-menu__icon .color1-fill, .active.cashier__transferred-icon .color1-fill {
      fill: var(--text-prominent); }
    .active.advanced-simple-toggle__icon .color1-stroke, .header__menu-link--active .header__icon .color1-stroke, .active.footer__icon .color1-stroke, .ic-settings--active .ic-settings__icon .color1-stroke, .contract-drawer svg.active .color1-stroke, .positions-drawer__icon-close svg.active .color1-stroke, .account-settings-toggle svg.active .color1-stroke, .account-settings-toggle:hover svg .color1-stroke, .active.calendar__icon .color1-stroke, .active.datepicker__icon .color1-stroke, .active.side-menu__icon .color1-stroke, .active.cashier__transferred-icon .color1-stroke {
      stroke: var(--text-prominent); }
    .active.advanced-simple-toggle__icon .color2-fill, .header__menu-link--active .header__icon .color2-fill, .active.footer__icon .color2-fill, .ic-settings--active .ic-settings__icon .color2-fill, .contract-drawer svg.active .color2-fill, .positions-drawer__icon-close svg.active .color2-fill, .account-settings-toggle svg.active .color2-fill, .account-settings-toggle:hover svg .color2-fill, .active.calendar__icon .color2-fill, .active.datepicker__icon .color2-fill, .active.side-menu__icon .color2-fill, .active.cashier__transferred-icon .color2-fill {
      fill: none; }
    .active.advanced-simple-toggle__icon .color2-stroke, .header__menu-link--active .header__icon .color2-stroke, .active.footer__icon .color2-stroke, .ic-settings--active .ic-settings__icon .color2-stroke, .contract-drawer svg.active .color2-stroke, .positions-drawer__icon-close svg.active .color2-stroke, .account-settings-toggle svg.active .color2-stroke, .account-settings-toggle:hover svg .color2-stroke, .active.calendar__icon .color2-stroke, .active.datepicker__icon .color2-stroke, .active.side-menu__icon .color2-stroke, .active.cashier__transferred-icon .color2-stroke {
      stroke: none; }
  .disabled.advanced-simple-toggle__icon, .footer__link:hover .disabled.footer__icon, .disabled.footer__icon, .contract-drawer svg.disabled, .positions-drawer__icon-close svg.disabled, .account-settings-toggle svg.disabled, .disabled.calendar__icon, .calendar__nav--disabled .calendar__icon, .disabled.datepicker__icon, .disabled.side-menu__icon, .disabled.cashier__transferred-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .disabled.advanced-simple-toggle__icon .color1-fill, .disabled.footer__icon .color1-fill, .contract-drawer svg.disabled .color1-fill, .positions-drawer__icon-close svg.disabled .color1-fill, .account-settings-toggle svg.disabled .color1-fill, .disabled.calendar__icon .color1-fill, .calendar__nav--disabled .calendar__icon .color1-fill, .disabled.datepicker__icon .color1-fill, .disabled.side-menu__icon .color1-fill, .disabled.cashier__transferred-icon .color1-fill {
      fill: var(--text-disabled); }
    .disabled.advanced-simple-toggle__icon .color1-stroke, .disabled.footer__icon .color1-stroke, .contract-drawer svg.disabled .color1-stroke, .positions-drawer__icon-close svg.disabled .color1-stroke, .account-settings-toggle svg.disabled .color1-stroke, .disabled.calendar__icon .color1-stroke, .calendar__nav--disabled .calendar__icon .color1-stroke, .disabled.datepicker__icon .color1-stroke, .disabled.side-menu__icon .color1-stroke, .disabled.cashier__transferred-icon .color1-stroke {
      stroke: var(--text-disabled); }
    .disabled.advanced-simple-toggle__icon .color2-fill, .disabled.footer__icon .color2-fill, .contract-drawer svg.disabled .color2-fill, .positions-drawer__icon-close svg.disabled .color2-fill, .account-settings-toggle svg.disabled .color2-fill, .disabled.calendar__icon .color2-fill, .calendar__nav--disabled .calendar__icon .color2-fill, .disabled.datepicker__icon .color2-fill, .disabled.side-menu__icon .color2-fill, .disabled.cashier__transferred-icon .color2-fill {
      fill: none; }
    .disabled.advanced-simple-toggle__icon .color2-stroke, .disabled.footer__icon .color2-stroke, .contract-drawer svg.disabled .color2-stroke, .positions-drawer__icon-close svg.disabled .color2-stroke, .account-settings-toggle svg.disabled .color2-stroke, .disabled.calendar__icon .color2-stroke, .calendar__nav--disabled .calendar__icon .color2-stroke, .disabled.datepicker__icon .color2-stroke, .disabled.side-menu__icon .color2-stroke, .disabled.cashier__transferred-icon .color2-stroke {
      stroke: none; }
  .white.advanced-simple-toggle__icon, .footer__link:hover .white.footer__icon, .white.footer__icon, .contract-drawer svg.white, .positions-drawer__icon-close svg.white, .account-settings-toggle svg.white, .white.calendar__icon, .white.datepicker__icon, .white.side-menu__icon, .white.cashier__transferred-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .white.advanced-simple-toggle__icon .color1-fill, .white.footer__icon .color1-fill, .contract-drawer svg.white .color1-fill, .positions-drawer__icon-close svg.white .color1-fill, .account-settings-toggle svg.white .color1-fill, .white.calendar__icon .color1-fill, .white.datepicker__icon .color1-fill, .white.side-menu__icon .color1-fill, .white.cashier__transferred-icon .color1-fill {
      fill: var(--text-prominent); }
    .white.advanced-simple-toggle__icon .color1-stroke, .white.footer__icon .color1-stroke, .contract-drawer svg.white .color1-stroke, .positions-drawer__icon-close svg.white .color1-stroke, .account-settings-toggle svg.white .color1-stroke, .white.calendar__icon .color1-stroke, .white.datepicker__icon .color1-stroke, .white.side-menu__icon .color1-stroke, .white.cashier__transferred-icon .color1-stroke {
      stroke: var(--text-prominent); }
  .border_hover_color.advanced-simple-toggle__icon, .footer__link:hover .border_hover_color.footer__icon, .border_hover_color.footer__icon, .contract-drawer svg.border_hover_color, .positions-drawer__icon-close svg.border_hover_color, .account-settings-toggle svg.border_hover_color, .border_hover_color.calendar__icon, .border_hover_color.datepicker__icon, .border_hover_color.side-menu__icon, .border_hover_color.cashier__transferred-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .border_hover_color.advanced-simple-toggle__icon .color1-fill, .border_hover_color.footer__icon .color1-fill, .contract-drawer svg.border_hover_color .color1-fill, .positions-drawer__icon-close svg.border_hover_color .color1-fill, .account-settings-toggle svg.border_hover_color .color1-fill, .border_hover_color.calendar__icon .color1-fill, .border_hover_color.datepicker__icon .color1-fill, .border_hover_color.side-menu__icon .color1-fill, .border_hover_color.cashier__transferred-icon .color1-fill {
      fill: var(--text-prominent); }
    .border_hover_color.advanced-simple-toggle__icon .color1-stroke, .border_hover_color.footer__icon .color1-stroke, .contract-drawer svg.border_hover_color .color1-stroke, .positions-drawer__icon-close svg.border_hover_color .color1-stroke, .account-settings-toggle svg.border_hover_color .color1-stroke, .border_hover_color.calendar__icon .color1-stroke, .border_hover_color.datepicker__icon .color1-stroke, .border_hover_color.side-menu__icon .color1-stroke, .border_hover_color.cashier__transferred-icon .color1-stroke {
      stroke: var(--text-prominent); }
  .secondary.advanced-simple-toggle__icon, .footer__link:hover .secondary.footer__icon, .secondary.footer__icon, .contract-drawer svg.secondary, .positions-drawer__icon-close svg.secondary, .account-settings-toggle svg.secondary, .secondary.calendar__icon, .secondary.datepicker__icon, .secondary.side-menu__icon, .secondary.cashier__transferred-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .secondary.advanced-simple-toggle__icon .color1-fill, .secondary.footer__icon .color1-fill, .contract-drawer svg.secondary .color1-fill, .positions-drawer__icon-close svg.secondary .color1-fill, .account-settings-toggle svg.secondary .color1-fill, .secondary.calendar__icon .color1-fill, .secondary.datepicker__icon .color1-fill, .secondary.side-menu__icon .color1-fill, .secondary.cashier__transferred-icon .color1-fill {
      fill: var(--text-less-prominent); }
    .secondary.advanced-simple-toggle__icon .color1-stroke, .secondary.footer__icon .color1-stroke, .contract-drawer svg.secondary .color1-stroke, .positions-drawer__icon-close svg.secondary .color1-stroke, .account-settings-toggle svg.secondary .color1-stroke, .secondary.calendar__icon .color1-stroke, .secondary.datepicker__icon .color1-stroke, .secondary.side-menu__icon .color1-stroke, .secondary.cashier__transferred-icon .color1-stroke {
      stroke: var(--text-less-prominent); }

/* postcss-bem-linter: ignore */
html {
  font-size: 62.5%;
  /** TODO: define breakpoints */ }

/** @define body */
.body {
  position: relative;
  min-height: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden; }

/* postcss-bem-linter: ignore */
*, html, .body {
  font-family: "IBM Plex Sans", sans-serif;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  box-sizing: border-box; }

/** @define select */
.select {
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  padding: 2px 3px;
  border: 1px solid var(--border-normal);
  border-radius: 4px; }

/** @define input */
.input {
  font-family: inherit;
  font-style: inherit;
  padding: 2px 3px;
  color: var(--text-general); }

::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
  color: var(--text-general); }

::-moz-placeholder {
  /* Firefox 19+ */
  color: var(--text-general); }

:-ms-input-placeholder {
  /* IE 10+ */
  color: var(--text-general); }

:-moz-placeholder {
  /* Firefox 18- */
  color: var(--text-general); }

/** @define theme */
.theme--light {
  background: #ffffff; }

.theme--dark {
  background: #0e0e0e; }

/** @define container */
.container {
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
  box-sizing: border-box; }

/** @define hidden */
.hidden {
  visibility: hidden !important;
  transition: none !important; }

/** @define absolute-center-v */
.absolute-center-v, .calendar__icon, .datepicker__icon {
  position: absolute;
  margin: auto;
  top: 0;
  bottom: 0; }

/** @define link */
.link {
  color: var(--brand-red-coral);
  font-weight: bold;
  text-decoration: none; }
  .link:hover {
    text-decoration: underline;
    cursor: pointer; }
  .link--white {
    color: #ffffff; }

/** @define icon */
.icon--centered, .datepicker__icon {
  top: 0.8em;
  left: 5%; }

/** @define center-text */
.center-text {
  text-align: center; }

/** @define no-margin */
.no-margin {
  margin: 0; }

/** @define hr */
.hr {
  border-top: var(--general-section-1);
  display: block;
  height: 1px;
  border: 0;
  margin: 0.5em 0;
  padding: 0; }

/** @define deriv-app */
.deriv-app {
  height: 100%;
  overflow: hidden; }

/*------------------------------------*
 *  # Reset SCSS
 *  - to make browsers render all elements more consistently
 *  - Reference:  https://github.com/AdamMarsden/simple-typography/blob/master/_reset.scss
 *------------------------------------*/
/* stylelint-disable */
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, input, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

html {
  height: 100%;
  font-size: 10px; }

body {
  line-height: 1;
  height: 100%; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after, q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/* stylelint-enable */
:host, :root {
  --text-size-xxs: 1.2rem;
  --text-size-xs: 1.4rem;
  --text-size-s: 1.6rem;
  --text-size-sm: 2rem;
  --text-size-m: 2.4rem;
  --text-size-l: 3.2rem;
  --text-size-xl: 4.8rem;
  --text-size-xxl: 6.4rem;
  --brand-dark-grey: #0e0e0e;
  --brand-red-coral: #ff444f;
  --brand-orange: #ff6444;
  --brand-secondary: #85acb0; }
  :host .theme--light, :root .theme--light {
    --general-main-1: #ffffff;
    --general-main-2: #ffffff;
    --general-section-1: #f2f3f4;
    --general-section-2: #f2f3f4;
    --general-disabled: #eaeced;
    --general-hover: #e6e9e9;
    --general-active: #d6dadb;
    --text-prominent: #333333;
    --text-general: #333333;
    --text-less-prominent: #999999;
    --text-disabled: #d6d6d6;
    --text-profit-success: #4bb4b3;
    --text-loss-danger: #ec3f3f;
    --text-colored-background: #ffffff;
    --purchase-main-1: #4bb4b3;
    --purchase-section-1: #3d9494;
    --purchase-main-2: #ec3f3f;
    --purchase-section-2: #d33636;
    --purchase-disabled-main: #eaeced;
    --purchase-disabled-section: #e6e9e9;
    --button-primary-default: var(--brand-red-coral);
    --button-secondary-default: #999999;
    --button-tertiary-default: transparent;
    --button-primary-hover: #eb3e48;
    --button-secondary-hover: rgba(0, 0, 0, 0.08);
    --button-tertiary-hover: rgba(255, 68, 79, 0.08);
    --overlay-outside-dialog: rgba(0, 0, 0, 0.72);
    --overlay-inside-dialog: rgba(255, 255, 255, 0.96);
    --shadow-menu: rgba(0, 0, 0, 0.16);
    --state-normal: #ffffff;
    --state-hover: #e6e9e9;
    --state-active: #d6dadb;
    --state-disabled: #eaeced;
    --border-normal: #d6dadb;
    --border-hover: #999999;
    --border-active: var(--brand-secondary);
    --border-disabled: #eaeced;
    --fill-normal: #ffffff;
    --fill-hover: #999999;
    --fill-active: var(--brand-secondary);
    --fill-disabled: #eaeced;
    --status-default: #eaeced;
    --status-danger: #ec3f3f;
    --status-success: #4bb4b3;
    --status-warning: #ffad3a;
    --status-info: #377cfc;
    --status-colored-background: #ffffff;
    --transparent-success: rgba(75, 180, 179, 0.92);
    /* TODO: change to styleguide later */
    --gradient-success: linear-gradient(to top, #ffffff, rgba(75, 180, 179, 0.16));
    --gradient-danger: linear-gradient(to top, #ffffff, rgba(255, 68, 79, 0.16)); }
  :host .theme--dark, :root .theme--dark {
    --general-main-1: #0e0e0e;
    --general-main-2: #151717;
    --general-section-1: #151717;
    --general-section-2: #0e0e0e;
    --general-disabled: #1d1f20;
    --general-hover: #242828;
    --general-active: #323738;
    --text-prominent: #ffffff;
    --text-general: #c2c2c2;
    --text-less-prominent: #6e6e6e;
    --text-disabled: #3e3e3e;
    --text-profit-success: #00a79e;
    --text-loss-danger: #cc2e3d;
    --text-colored-background: #ffffff;
    --purchase-main-1: #00a79e;
    --purchase-section-1: #008079;
    --purchase-main-2: #cc2e3d;
    --purchase-section-2: #a32430;
    --purchase-disabled-main: #1d1f20;
    --purchase-disabled-section: #0e0e0e;
    --button-primary-default: var(--brand-red-coral);
    --button-secondary-default: #6e6e6e;
    --button-tertiary-default: transparent;
    --button-primary-hover: #eb3e48;
    --button-secondary-hover: rgba(255, 255, 255, 0.08);
    --button-tertiary-hover: rgba(255, 68, 79, 0.08);
    --overlay-outside-dialog: rgba(0, 0, 0, 0.72);
    --overlay-inside-dialog: rgba(14, 14, 14, 0.96);
    --shadow-menu: rgba(0, 0, 0, 0.84);
    --state-normal: #0e0e0e;
    --state-hover: #242828;
    --state-active: #323738;
    --state-disabled: #1d1f20;
    --border-normal: #323738;
    --border-hover: #6e6e6e;
    --border-active: var(--brand-secondary);
    --border-disabled: #1d1f20;
    --fill-normal: #0e0e0e;
    --fill-hover: #6e6e6e;
    --fill-active: var(--brand-secondary);
    --fill-disabled: #1d1f20;
    --status-default: #eaeced;
    --status-danger: #cc2e3d;
    --status-warning: #ffad3a;
    --status-success: #00a79e;
    --status-info: #377cfc;
    --status-colored-background: #ffffff;
    --transparent-success: rgba(0, 167, 158, 0.92);
    /* TODO: change to styleguide later */
    --gradient-success: linear-gradient(to top, #0e0e0e, rgba(0, 167, 158, 0.16));
    --gradient-danger: linear-gradient(to top, #0e0e0e, rgba(255, 68, 79, 0.16)); }

@font-face {
  font-family: 'BinarySymbols';
  font-style: normal;
  font-weight: normal;
  font-display: fallback;
  src: url(/public/fonts/binary_symbols.woff) format("woff"); }

/** @define symbols */
.symbols:before {
  font-family: 'BinarySymbols';
  font-style: normal;
  pointer-events: none;
  padding-right: 0.05em; }

.symbols, .symbols:before {
  transition: none;
  -webkit-animation: none;
          animation: none; }

.symbols--aud:before {
  content: '\0041\0024'; }

.symbols--eur:before {
  content: '\20AC'; }

.symbols--gbp:before {
  content: '\00A3'; }

.symbols--jpy:before {
  content: '\00A5'; }

.symbols--usd:before {
  content: '\0024'; }

.symbols--btc:before {
  content: '\0042'; }

.symbols--bch:before {
  content: '\e901'; }

.symbols--eth:before {
  content: '\0045'; }

.symbols--etc:before {
  content: '\e900'; }

.symbols--ltc:before {
  content: '\004c'; }

.symbols--ust:before {
  content: '\e903'; }

/** @define tooltip */
.tooltip {
  text-decoration: none;
  font-size: inherit;
  color: var(--text-prominent); }
  .tooltip:before {
    background: var(--status-default); }
  .tooltip:after, .tooltip[data-tooltip-pos=top]:after {
    border-top-color: var(--status-default); }
  .tooltip[data-tooltip-pos=right]:after {
    border-top-color: transparent;
    border-right-color: var(--status-default); }
  .tooltip[data-tooltip-pos=left]:after {
    border-top-color: transparent;
    border-left-color: var(--status-default); }
  .tooltip[data-tooltip-pos=bottom]:after {
    border-top-color: transparent;
    border-bottom-color: var(--status-default); }
  .tooltip__balloon-icon {
    position: absolute;
    top: 0;
    left: -319px;
    z-index: 999;
    opacity: 0;
    transition: opacity 0.3s;
    pointer-events: none; }
    .tooltip__balloon-icon--show {
      transition: opacity 0.3s 0.2s;
      opacity: 1; }
  .tooltip[data-tooltip] {
    cursor: auto;
    cursor: initial;
    display: block; }
    .tooltip[data-tooltip]:before {
      background: var(--status-default); }
    .tooltip[data-tooltip]:after, .tooltip[data-tooltip][data-tooltip-pos=top]:after {
      border-top-color: var(--status-default); }
    .tooltip[data-tooltip][data-tooltip-pos=right]:after {
      border-top-color: transparent;
      border-right-color: var(--status-default); }
    .tooltip[data-tooltip][data-tooltip-pos=left]:after {
      border-top-color: transparent;
      border-left-color: var(--status-default); }
    .tooltip[data-tooltip][data-tooltip-pos=bottom]:after {
      border-top-color: transparent;
      border-bottom-color: var(--status-default); }
    .tooltip[data-tooltip]:hover:after, .tooltip[data-tooltip]:hover:before {
      opacity: 0.96;
      pointer-events: auto;
      transform: translate(-50%, 0); }
    .tooltip[data-tooltip]:before, .tooltip[data-tooltip]:after {
      opacity: 0;
      pointer-events: none;
      transition: all 0.18s ease-out 0.18s;
      bottom: 100%;
      left: 50%;
      position: absolute;
      z-index: 1;
      transform: translate(-50%, 1em);
      transform-origin: top; }
    .tooltip[data-tooltip]:before {
      font-size: 1.2rem;
      color: var(--text-colored-background);
      font-weight: 400;
      text-transform: none;
      text-align: left;
      line-height: 1.25;
      line-height: 1.5;
      text-decoration: none;
      letter-spacing: normal;
      border-radius: 4px;
      content: attr(data-tooltip);
      padding: 0.7em;
      margin-bottom: 10px;
      width: -webkit-max-content;
      width: -moz-max-content;
      width: max-content;
      width: 220px;
      max-width: 280px; }
    .tooltip[data-tooltip]:after {
      border: solid transparent;
      content: '';
      height: 0;
      width: 0;
      position: absolute;
      pointer-events: none;
      border-width: 6px;
      margin-bottom: -2px; }
    .tooltip[data-tooltip][data-tooltip-pos=right]:before, .tooltip[data-tooltip][data-tooltip-pos=right]:after {
      bottom: auto;
      left: 100%;
      top: 50%;
      transform: translate(-1em, -50%); }
    .tooltip[data-tooltip][data-tooltip-pos=right]:before {
      margin-left: 1em; }
    .tooltip[data-tooltip][data-tooltip-pos=right]:hover:after, .tooltip[data-tooltip][data-tooltip-pos=right]:hover:before {
      transform: translate(0, -50%); }
    .tooltip[data-tooltip][data-tooltip-pos=left]:before, .tooltip[data-tooltip][data-tooltip-pos=left]:after {
      bottom: auto;
      left: auto;
      right: 100%;
      top: 50%;
      transform: translate(1em, -50%); }
    .tooltip[data-tooltip][data-tooltip-pos=left]:before {
      margin-right: 1em; }
    .tooltip[data-tooltip][data-tooltip-pos=left]:hover:after, .tooltip[data-tooltip][data-tooltip-pos=left]:hover:before {
      transform: translate(0, -50%); }
    .tooltip[data-tooltip][data-tooltip-pos=bottom]:before, .tooltip[data-tooltip][data-tooltip-pos=bottom]:after {
      bottom: auto;
      left: 50%;
      top: 100%;
      transform: translate(-50%, -1em); }
    .tooltip[data-tooltip][data-tooltip-pos=bottom]:before {
      margin-top: 1.1em; }
    .tooltip[data-tooltip][data-tooltip-pos=bottom]:hover:after, .tooltip[data-tooltip][data-tooltip-pos=bottom]:hover:before {
      transform: translate(-50%, 0); }
  .tooltip--with-label[data-tooltip]:before, .tooltip--with-label[data-tooltip]:after {
    margin-top: 1em; }
  .tooltip--error[data-tooltip]:before {
    background: var(--status-danger); }
  .tooltip--error[data-tooltip]:after, .tooltip--error[data-tooltip][data-tooltip-pos=top]:after {
    border-top-color: var(--status-danger); }
  .tooltip--error[data-tooltip][data-tooltip-pos=right]:after {
    border-top-color: transparent;
    border-right-color: var(--status-danger); }
  .tooltip--error[data-tooltip][data-tooltip-pos=left]:after {
    border-top-color: transparent;
    border-left-color: var(--status-danger); }
  .tooltip--error[data-tooltip][data-tooltip-pos=bottom]:after {
    border-top-color: transparent;
    border-bottom-color: var(--status-danger); }
  .tooltip--error[data-tooltip]:after, .tooltip--error[data-tooltip]:before, .tooltip--error[data-tooltip][data-tooltip-pos=left]:after, .tooltip--error[data-tooltip][data-tooltip-pos=left]:before {
    opacity: 0.96;
    pointer-events: auto;
    transform: translate(0, -50%); }
  .tooltip--error[data-tooltip]:before, .tooltip--error[data-tooltip][data-tooltip-pos=left]:before {
    width: 180px; }
  .tooltip--error-secondary[data-tooltip]:before {
    background: var(--status-danger); }
  .tooltip--error-secondary[data-tooltip]:after, .tooltip--error-secondary[data-tooltip][data-tooltip-pos=top]:after {
    border-top-color: var(--status-danger); }
  .tooltip--error-secondary[data-tooltip][data-tooltip-pos=right]:after {
    border-top-color: transparent;
    border-right-color: var(--status-danger); }
  .tooltip--error-secondary[data-tooltip][data-tooltip-pos=left]:after {
    border-top-color: transparent;
    border-left-color: var(--status-danger); }
  .tooltip--error-secondary[data-tooltip][data-tooltip-pos=bottom]:after {
    border-top-color: transparent;
    border-bottom-color: var(--status-danger); }
  .tooltip--error-secondary[data-tooltip]:after, .tooltip--error-secondary[data-tooltip]:before, .tooltip--error-secondary[data-tooltip][data-tooltip-pos=left]:after, .tooltip--error-secondary[data-tooltip][data-tooltip-pos=left]:before {
    opacity: 0.96;
    pointer-events: auto;
    transform: translate(0, -50%);
    top: 55%; }

/** @define barspinner */
.barspinner {
  margin: auto;
  width: 6em;
  height: 2em;
  white-space: nowrap; }
  .barspinner__rect {
    margin: 0.4em;
    border-radius: 20px;
    height: 60%;
    width: 0.6em;
    display: inline-block;
    -webkit-animation: sk-stretchdelay 1.2s infinite ease-in-out;
            animation: sk-stretchdelay 1.2s infinite ease-in-out; }
    .barspinner__rect--1 {
      -webkit-animation-delay: -1.2s;
              animation-delay: -1.2s; }
    .barspinner__rect--2 {
      -webkit-animation-delay: -1.1s;
              animation-delay: -1.1s; }
    .barspinner__rect--3 {
      -webkit-animation-delay: -1s;
              animation-delay: -1s; }
    .barspinner__rect--4 {
      -webkit-animation-delay: -0.9s;
              animation-delay: -0.9s; }
    .barspinner__rect--5 {
      -webkit-animation-delay: -0.8s;
              animation-delay: -0.8s; }
  .barspinner--dark .barspinner__rect {
    background-color: var(--brand-secondary); }

@-webkit-keyframes sk-stretchdelay {
  0%, 40%, 100% {
    transform: scaleY(1); }
  20% {
    transform: scaleY(2); } }

@keyframes sk-stretchdelay {
  0%, 40%, 100% {
    transform: scaleY(1); }
  20% {
    transform: scaleY(2); } }

/** @define initial-loader */
.initial-loader {
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  display: flex;
  background: transparent; }
  .initial-loader--fullscreen {
    width: 100vw;
    height: 100vh; }
  .initial-loader__barspinner {
    margin: 5em auto; }
    .initial-loader__barspinner--rect {
      background-color: var(--brand-secondary); }
  .initial-loader__text {
    line-height: 44px;
    color: var(--text-prominent);
    font-size: 1.4rem;
    color: var(--text-general);
    font-weight: 400;
    text-transform: none;
    text-align: center;
    line-height: 1.5; }

/** @define app-contents; weak */
.app-contents {
  margin: 48px 0 36px;
  height: calc(100vh - 48px - 36px);
  overflow: hidden;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  background-color: var(--general-main-1); }
  .app-contents:after {
    z-index: 1;
    position: absolute;
    opacity: 0;
    pointer-events: none;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    content: '';
    background-color: var(--overlay-outside-dialog); }
  .app-contents--is-disabled:after {
    opacity: 1;
    pointer-events: auto; }
  .app-contents--is-route-modal {
    background-color: var(--overlay-outside-dialog); }
  .app-contents--show-positions-drawer .trade-container .chart-container {
    width: 100%; }
    .app-contents--show-positions-drawer .trade-container .chart-container .cq-top-ui-widgets {
      transform: translate3d(248px, 0, 0); }
    .app-contents--show-positions-drawer .trade-container .chart-container .cq-chart-controls {
      transform: translate3d(130px, 0, 0) !important; }
    .app-contents--show-positions-drawer .trade-container .chart-container .cq-bottom-ui-widgets .digits__container {
      transform: translate3d(130px, 0, 0) !important; }
    .app-contents--show-positions-drawer .trade-container .chart-container .cq-chart-control-left .cq-chart-controls {
      transform: translate3d(248px, 0, 0) !important; }
    .app-contents--show-positions-drawer .trade-container .chart-container .cq-chart-control-left .cq-bottom-ui-widgets .digits__container {
      transform: translate3d(170px, 40px, 0) !important; }
    .app-contents--show-positions-drawer .trade-container .chart-container__loader .barspinner {
      transform: translate3d(130px, 0, 0) !important; }
  @media screen and (max-width: 768px) {
    .app-contents {
      margin-bottom: 0;
      height: calc(100vh - 48px); } }

/** @define trade-container; weak */
.trade-container {
  position: relative;
  padding: 0.8em 1.2em 0;
  display: flex;
  min-height: calc(100vh - 83px);
  transition: transform 0.25s ease;
  will-change: transform;
  overflow: hidden; }
  .trade-container__replay {
    display: flex;
    flex-direction: row;
    margin: 16px;
    height: calc(100vh - 115px);
    border-radius: 4px;
    background-color: var(--general-section-1);
    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.16); }
    .trade-container__replay .contract-drawer {
      top: -16px;
      left: 16px;
      height: calc(100vh - 48px - 36px - (8px * 4));
      border-bottom-right-radius: 0;
      border-top-right-radius: 0;
      z-index: 1;
      overflow: hidden; }
      .trade-container__replay .contract-drawer-wrapper {
        z-index: 4; }
      .trade-container__replay .contract-drawer .contract-card__sell-button--exit {
        display: none; }
    .trade-container__replay .replay-chart__container {
      width: 100%;
      position: relative;
      margin-left: 242px; }
      .trade-container__replay .replay-chart__container .smartcharts {
        left: 0;
        width: calc(100vw - 286px);
        height: calc(100% - 65px);
        top: 53px;
        border-radius: 4px; }
        .trade-container__replay .replay-chart__container .smartcharts .ciq-chart .cq-top-ui-widgets, .trade-container__replay .replay-chart__container .smartcharts .ciq-chart .info-box {
          transition: transform 0.25s ease; }
          .trade-container__replay .replay-chart__container .smartcharts .ciq-chart .cq-top-ui-widgets .cq-symbols-display, .trade-container__replay .replay-chart__container .smartcharts .ciq-chart .info-box .cq-symbols-display {
            z-index: 1; }
            .trade-container__replay .replay-chart__container .smartcharts .ciq-chart .cq-top-ui-widgets .cq-symbols-display.ciq-disabled, .trade-container__replay .replay-chart__container .smartcharts .ciq-chart .info-box .cq-symbols-display.ciq-disabled {
              display: none; }
          .trade-container__replay .replay-chart__container .smartcharts .ciq-chart .cq-top-ui-widgets .info-box-container, .trade-container__replay .replay-chart__container .smartcharts .ciq-chart .info-box .info-box-container {
            transform: none;
            opacity: 1;
            left: 1px; }
            .trade-container__replay .replay-chart__container .smartcharts .ciq-chart .cq-top-ui-widgets .info-box-container .chart-close-btn, .trade-container__replay .replay-chart__container .smartcharts .ciq-chart .info-box .info-box-container .chart-close-btn {
              display: none; }
        .trade-container__replay .replay-chart__container .smartcharts .ciq-chart .ciq-asset-information {
          top: 75px; }
        .trade-container__replay .replay-chart__container .smartcharts .ciq-chart .stx_jump_today.home > svg {
          top: 6px;
          left: 8px;
          padding: 0;
          position: absolute; }
        .trade-container__replay .replay-chart__container .smartcharts .ciq-chart .cq-bottom-ui-widgets {
          bottom: 30px !important; }
          .trade-container__replay .replay-chart__container .smartcharts .ciq-chart .cq-bottom-ui-widgets .digits {
            margin-right: 0; }
            .trade-container__replay .replay-chart__container .smartcharts .ciq-chart .cq-bottom-ui-widgets .digits__container {
              transition: transform 0.25s ease; }
  @media (max-width: 768px) {
    .trade-container {
      flex-direction: column; } }

/** @define chart-container; weak */
.chart-container {
  width: 100%;
  position: relative;
  z-index: 1; }
  .chart-container__loader {
    position: absolute;
    height: calc(100% - 68px);
    width: calc(100% - 12px);
    top: 54px;
    left: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 4px;
    background-color: var(--general-main-1); }
    .chart-container__loader .initial-loader {
      pointer-events: none; }
    .chart-container__loader .barspinner {
      display: flex;
      justify-content: center;
      align-items: center;
      margin: 0;
      width: 100%;
      height: 18px; }
    .chart-container__loader + .smartcharts {
      visibility: hidden;
      pointer-events: none; }
      .chart-container__loader + .smartcharts .chart-marker-line__wrapper, .chart-container__loader + .smartcharts .cq-chart-controls, .chart-container__loader + .smartcharts .cq-symbols-display, .chart-container__loader + .smartcharts .cq-bottom-ui-widgets, .chart-container__loader + .smartcharts .cq-inchart-subholder {
        display: none; }
  .chart-container .cq-context {
    top: 0;
    left: 0;
    z-index: 0; }
    .chart-container .cq-context div.ciq-chart {
      height: calc(100% - 5em);
      box-shadow: none; }
      .chart-container .cq-context div.ciq-chart div.cq-last-digits {
        bottom: 15px;
        left: calc(45% - 150px); }
      .chart-container .cq-context div.ciq-chart div.cq-chart-controls {
        box-shadow: none; }
      .chart-container .cq-context div.ciq-chart div.stx_jump_today.home > svg {
        top: 6px;
        left: 8px;
        padding: 0;
        position: absolute; }
      .chart-container .cq-context div.ciq-chart div.stx-marker {
        z-index: 2; }
        .chart-container .cq-context div.ciq-chart div.stx-marker:not(.chart-marker-line) {
          -webkit-animation: fadeIn 0.2s;
                  animation: fadeIn 0.2s; }
    .chart-container .cq-context div.cq-chart-control-left .cq-top-ui-widgets {
      width: calc(100% - 9em); }
  .chart-container div.debug-text {
    display: none; }
  .chart-container .cq-chart-control-left .cq-chart-controls {
    transform: translate3d(0, 0, 0);
    transition: transform 0.25s ease; }
  .chart-container .cq-chart-control-left .cq-top-ui-widgets {
    left: 9em; }
    .chart-container .cq-chart-control-left .cq-top-ui-widgets .info-box {
      transform: translate3d(0, 0, 0); }
  .chart-container .ciq-chart .cq-top-ui-widgets, .chart-container .ciq-chart .info-box {
    transition: transform 0.25s ease; }
    .chart-container .ciq-chart .cq-top-ui-widgets .cq-symbols-display, .chart-container .ciq-chart .info-box .cq-symbols-display {
      z-index: 1; }
      .chart-container .ciq-chart .cq-top-ui-widgets .cq-symbols-display.ciq-disabled, .chart-container .ciq-chart .info-box .cq-symbols-display.ciq-disabled {
        display: none; }
  .chart-container .ciq-chart .cq-chart-controls {
    transition: max-width 0.25s ease, transform 0.25s ease; }
  .chart-container .chartContainer {
    background: transparent;
    min-height: 100%; }
  @media (max-width: 768px) {
    .chart-container {
      height: 400px; }
      .chart-container .cq-context div.cq-chart-controls {
        border: 1px solid rgba(0, 0, 0, 0.04); }
      .chart-container .cq-modal-dropdown.stxMenuActive {
        position: fixed;
        height: 100%;
        width: 100%;
        top: 4.7em;
        left: -0.1em; }
      .chart-container .cq-modal-dropdown .cq-categorical-display .ic-icon.icon-close-menu svg {
        width: 2.4em;
        height: 2.4em; }
      .chart-container .cq-modal-dropdown .cq-categorical-display .cq-lookup-filters.scroll-down {
        max-height: unset; }
      .chart-container .cq-modal-dropdown .cq-categorical-display .scrollbar-container.cq-scroll-panel {
        left: -0.1em; }
      .chart-container .smartcharts-mobile .cq-modal-dropdown .cq-menu-overlay .cq-menu-dropdown {
        bottom: 4.8em; } }

/** @define sidebar; weak; */
.sidebar__container {
  position: relative;
  margin-left: 1.6em;
  width: 240px;
  margin-top: 8px;
  z-index: 1; }

.sidebar__items {
  opacity: 1;
  transform: none;
  position: relative;
  min-height: 460px;
  width: 240px; }
  .sidebar__items:after {
    transition: opacity 0.25s cubic-bezier(0.25, 0.1, 0.1, 0.25);
    opacity: 0;
    position: absolute;
    pointer-events: none;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 999;
    content: '';
    background-color: var(--overlay-outside-dialog); }
  .sidebar__items--market-closed .tooltip--with-label {
    display: none; }
  .sidebar__items--market-closed .tooltip--with-label:before, .sidebar__items--market-closed .tooltip--with-label:after {
    display: none; }

/** @define contract */
.contract__wrapper {
  position: absolute;
  width: 240px;
  min-height: 460px;
  height: 100%;
  z-index: 2;
  top: 0;
  right: 0;
  transition: transform 0.4s ease, opacity 0.2s linear;
  opacity: 1;
  transform: none; }

.contract--enter {
  transform: translate3d(calc(100% + 1.6em), 0, 0);
  opacity: 0; }

.contract--exit {
  transform: translate3d(calc(100% + 1.6em), 0, 0);
  opacity: 0;
  pointer-events: none; }

/** @define advanced-simple-toggle */
.advanced-simple-toggle {
  display: flex;
  justify-content: center;
  align-items: center;
  width: calc(100% + 18px);
  /* margin shorthand for values below does not work */
  margin-top: 8px;
  margin-left: -9px;
  margin-bottom: -9px;
  margin-right: 0;
  padding: 8px 0;
  border-bottom-right-radius: 4px;
  border-bottom-left-radius: 4px;
  border: 0;
  background: none;
  transition: background-color 0.25s linear; }
  .advanced-simple-toggle__icon {
    transition: transform 0.2s ease; }
    .advanced-simple-toggle__icon--active {
      transform: rotate(180deg); }
  .advanced-simple-toggle:hover {
    cursor: pointer;
    background-color: var(--general-hover); }
  .advanced-simple-toggle:focus {
    outline: none; }

/** @define category-wrapper */
.category-wrapper {
  width: 2.4em;
  height: 2.4em;
  border-radius: 3px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--general-main-2); }

/** @define type-wrapper */
.type-wrapper {
  width: 2.4em;
  height: 2.4em;
  border-radius: 3px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--general-main-2);
  /* postcss-bem-linter: ignore */
  /* postcss-bem-linter: ignore */ }
  .type-wrapper .color1-fill {
    fill: var(--brand-red-coral); }
  .type-wrapper .color2-fill {
    fill: var(--brand-secondary); }

/** @define no-scroll */
.no-scroll {
  overflow: hidden;
  max-height: 100vh; }

/** @define desktop-only */
@media (max-width: 768px) {
  .desktop-only {
    display: none !important; } }

/** @define mobile-only */
@media (min-width: 769px) {
  .mobile-only {
    display: none !important; } }

/** @define error */
.error__container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: calc(100vh - 9em); }

.error__message {
  color: var(--text-general); }
  .error__message {
    font-size: 14px; }
    @media screen and (min-width: 320px) {
      .error__message {
        font-size: calc(0.53571vw + 12.28571px); } }
    @media screen and (min-width: 1440px) {
      .error__message {
        font-size: 20px; } }

@-webkit-keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

/** @define header */
.header {
  position: fixed;
  z-index: 99;
  box-sizing: border-box;
  height: 48px;
  width: 100%;
  top: 0;
  transition: opacity 0.3s;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  background-color: var(--general-main-1);
  border-bottom: 1px solid var(--general-section-1); }
  .header:after {
    position: absolute;
    opacity: 0;
    pointer-events: none;
    top: -1px;
    z-index: 2;
    left: 0;
    width: 100%;
    height: calc(100% + 2px);
    content: '';
    background-color: var(--overlay-outside-dialog); }
  .header--is-disabled:after {
    opacity: 1;
    pointer-events: auto; }
  .header__menu-items {
    display: flex;
    position: relative;
    box-sizing: border-box;
    align-items: center;
    width: 100%;
    height: 100%; }
  .header__navbar-icons {
    cursor: pointer;
    padding: 0.8em 1.6em;
    align-self: center;
    height: 100%; }
    .header__navbar-icons--notify-toggle {
      order: 2;
      order: 2;
      padding: 0.5em 1em;
      width: 2em; }
  .header__menu-left {
    justify-content: flex-start;
    order: -1;
    display: inline-flex;
    flex: 1;
    height: 47px; }
  .header__menu-right {
    justify-content: flex-end;
    order: 1;
    display: inline-flex;
    height: 47px;
    position: relative; }
  .header__menu-toggle {
    align-self: center;
    display: flex; }
  .header__menu-links {
    height: 100%;
    align-self: center; }
    @media (max-width: 520px) {
      .header__menu-links {
        display: none; } }
  .header__menu-link {
    height: 100%;
    padding: 0 1.6em;
    text-decoration: none;
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: space-evenly;
    transition: background-color 0.3s;
    cursor: pointer; }
    .header__menu-link-text {
      font-size: 1.6rem;
      color: var(--text-general);
      font-weight: 400;
      text-transform: none;
      text-align: left;
      line-height: 1.75;
      padding: 0.5em 0;
      position: relative;
      color: var(--text-general);
      /* postcss-bem-linter: ignore */
      /* postcss-bem-linter: ignore */
      /* postcss-bem-linter: ignore */
      /* postcss-bem-linter: ignore */
      /* postcss-bem-linter: ignore */
      /* postcss-bem-linter: ignore */ }
      .header__menu-link-text .color1-fill {
        fill: var(--text-general); }
      .header__menu-link-text .color1-stroke {
        stroke: var(--text-general); }
      .header__menu-link-text .color2-fill {
        fill: none; }
      .header__menu-link-text .color2-stroke {
        stroke: none; }
      .header__menu-link-text .color3-fill {
        fill: var(--text-general); }
      .header__menu-link-text .color3-stroke {
        stroke: var(--text-general); }
      .header__menu-link-text:before {
        position: absolute;
        top: 1.4em;
        left: 1.2em; }
      .header__menu-link-text:after {
        display: block;
        content: attr(title);
        font-weight: 400;
        height: 0;
        overflow: hidden;
        visibility: hidden; }
    .header__menu-link:hover:not(.header__menu-link--active) {
      background-color: var(--general-hover); }
    .header__menu-link--active > .header__menu-link-text[title] {
      font-weight: bold;
      color: var(--text-prominent); }
      .header__menu-link--active > .header__menu-link-text[title]:after {
        color: var(--text-prominent); }
  .header__logo {
    background-color: var(--brand-secondary);
    border-radius: 10px;
    color: var(--text-colored-background);
    display: inline-block;
    font-size: 1.4rem;
    font-weight: normal;
    height: 20px;
    line-height: 1.43;
    text-align: center;
    width: 50px;
    margin-left: 8px; }
  .header__title {
    display: inline-block;
    font-weight: bold;
    color: var(--text-prominent); }
  .header__icon {
    margin-right: 0.8rem;
    vertical-align: middle; }

/** @define footer */
.footer {
  position: fixed;
  bottom: 0;
  padding: 0 1em;
  width: 100%;
  height: 36px;
  box-sizing: border-box;
  z-index: 3;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  transition: opacity 0.3s;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  background: var(--general-main-1);
  color: var(--text-prominent);
  border-top: 1px solid var(--general-section-1); }
  .footer:after {
    position: absolute;
    opacity: 0;
    pointer-events: none;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    content: '';
    background-color: var(--overlay-outside-dialog); }
  .footer--is-disabled {
    border-top: none; }
    .footer--is-disabled:after {
      opacity: 1;
      pointer-events: auto; }
  .footer__links {
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    flex-direction: row;
    height: 100%; }
    .footer__links--left {
      margin-right: auto; }
  .footer__link {
    padding: 0 0.8em;
    text-decoration: none;
    height: 100%;
    display: inline-flex;
    align-items: center;
    position: relative; }
    .footer__link:hover {
      background: var(--general-hover); }
  .footer__icon {
    width: 1.6em;
    height: 1.6em; }
  @media (max-width: 768px) {
    .footer {
      display: none; } }

/** @define ic-positions */
.ic-positions {
  position: relative; }
  .ic-positions__icon {
    margin-bottom: 0.5em; }
  .ic-positions:before {
    content: '';
    width: 0.2em;
    height: 0.2em;
    border-radius: 50%;
    position: absolute;
    margin-top: 1em;
    right: 1.5em;
    display: block;
    transition: transform 0.25s ease;
    transform: translate3d(0, 0, 0);
    background-color: var(--text-prominent); }
  .ic-positions--active {
    background: none !important; }
    .ic-positions--active .ic-positions__icon {
      margin-bottom: 0; }
    .ic-positions--active:before {
      transform: translate3d(0, 50px, 0); }
  .ic-positions--has-count:not(.ic-positions--active):after {
    content: attr(data-count);
    width: 14px;
    height: 14px;
    font-size: 1em;
    border-radius: 50%;
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    top: 2px;
    right: 0;
    background-color: var(--brand-red-coral);
    color: #ffffff; }

@-webkit-keyframes blinking-network-status {
  40% {
    opacity: 1; }
  100% {
    opacity: 0; } }

@keyframes blinking-network-status {
  40% {
    opacity: 1; }
  100% {
    opacity: 0; } }

/** @define network-status */
.network-status__wrapper {
  height: 1.4em;
  position: relative; }

.network-status__tooltip {
  left: unset;
  -webkit-text-decoration-line: none;
          text-decoration-line: none; }

.network-status__circle {
  background: var(--general-section-1);
  width: 1em;
  height: 1em;
  margin: 0.2em 1.6em;
  border-radius: 50%; }
  .network-status__circle--online {
    background: var(--text-profit-success); }
  .network-status__circle--offline {
    background: var(--text-loss-danger); }
  .network-status__circle--blinker {
    -webkit-animation: blinking-network-status 0.4s alternate infinite;
            animation: blinking-network-status 0.4s alternate infinite;
    background: var(--text-profit-success); }

/** @define server-time */
.server-time {
  display: inline-flex;
  align-self: center;
  margin-right: 1em;
  padding: 0 1em;
  font-size: 1.2rem;
  color: var(--text-general);
  font-weight: 400;
  text-transform: none;
  text-align: left;
  line-height: 1.25;
  color: var(--text-general); }

/** @define ic-settings */
.ic-settings--active {
  position: relative;
  background: var(--state-hover); }
  .ic-settings--active:after {
    content: '';
    height: 0.2em;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background: var(--text-prominent); }
  .ic-settings--active .ic-settings__icon {
    pointer-events: none; }

.modal-root {
  width: 100vw;
  height: 100vh;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 9999;
  display: none;
  overflow: hidden;
  opacity: 0;
  background-color: var(--overlay-outside-dialog); }
  .modal-root:not(:empty) {
    display: flex;
    opacity: 1; }

/** @define multistep; weak */
.multistep__header {
  display: flex;
  align-items: center;
  padding-top: 24px;
  padding-left: 16px;
  padding-right: 16px; }

.multistep__btn {
  display: flex;
  font-size: 1.4rem;
  font-weight: bold;
  cursor: pointer;
  color: var(--text-general); }
  .multistep__btn-icon {
    margin-right: 8px; }
    .multistep__btn-icon .color1-fill {
      fill: var(--text-general); }

.multistep__component {
  width: 100%;
  height: 100%; }

/** @define send-email-template */
.send-email-template {
  padding: 0 16px; }
  .send-email-template__title {
    color: var(--text-prominent);
    font-size: 1.6rem;
    font-weight: bold;
    margin-bottom: 0.8rem;
    line-height: 1.5; }
  .send-email-template__subtitle {
    font-size: 1.4rem;
    margin-bottom: 1.6rem;
    color: var(--text-general); }
  .send-email-template__icon {
    margin-top: 5.6rem;
    margin-bottom: 1.6rem; }
  .send-email-template__sent, .send-email-template__cta {
    text-align: center; }
  .send-email-template__cta-btn {
    margin: 3.2rem auto 0; }
  .send-email-template__btn {
    margin: 0 auto; }

/** @define drawer */
.drawer {
  position: absolute;
  z-index: 666;
  top: 0;
  left: 0;
  right: auto;
  right: initial;
  will-change: transform;
  overflow: hidden;
  box-sizing: border-box;
  width: 260px;
  height: 100%;
  transition: transform 0.25s ease;
  background: var(--general-main-1); }
  .drawer__container {
    display: block; }
  .drawer__bg {
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    left: 0;
    height: 100vh;
    z-index: 665;
    background: var(--overlay-outside-dialog);
    overflow: hidden; }
  .drawer__items-container {
    overflow: hidden;
    height: 100%;
    max-height: calc(100% - 140px);
    z-index: 1;
    position: relative; }
  .drawer__header {
    display: flex;
    align-items: center;
    border-bottom: 1px solid var(--general-section-1); }
  .drawer__icons {
    display: inline-flex;
    cursor: pointer; }
    .drawer__icons-btn-close {
      width: 2.4em;
      height: 2.4em; }
    .drawer__icons-icon-close {
      width: 2.4em;
      height: 2.4em; }
  .drawer--left {
    right: auto;
    left: 0;
    transform: translateX(-100%); }
    .drawer--left .drawer__header {
      z-index: 3; }
      .drawer--left .drawer__header .drawer__icons {
        padding: 0.6em 1em; }
        .drawer--left .drawer__header .drawer__icons-btn-close {
          align-self: center; }
      .drawer--left .drawer__header .drawer__brand-logo {
        display: inline-flex;
        padding: 0.8em 2em;
        border-left: 1px solid var(--general-section-1); }
    .drawer--left .drawer__footer {
      height: 4.4em;
      border-top: 1px solid var(--general-section-1);
      left: 0;
      bottom: 0;
      z-index: 3;
      position: fixed;
      width: 100%;
      display: flex;
      justify-content: center;
      align-items: center; }
  .drawer--right {
    right: 0;
    left: auto;
    transform: translateX(100%); }
    .drawer--right .drawer__header {
      flex-direction: row-reverse;
      justify-content: space-between; }
      .drawer--right .drawer__header .drawer__icons {
        padding: 1.4em 1.1em; }
        .drawer--right .drawer__header .drawer__icons-btn-close {
          border-left: 1px solid var(--general-section-1); }
        .drawer--right .drawer__header .drawer__icons-icon-close {
          position: absolute;
          top: 1.4em;
          right: 1em; }
      .drawer--right .drawer__header .drawer__notifications {
        font-size: 1.6rem;
        color: var(--text-general);
        font-weight: 400;
        text-transform: capitalize;
        text-align: left;
        line-height: 1.75;
        padding: 0 10px;
        color: var(--text-general); }
        .drawer--right .drawer__header .drawer__notifications-header {
          margin: 0.5em;
          font-weight: 400; }
    .drawer--right .drawer__no-notifications-container {
      position: relative;
      height: 100%;
      display: flex; }
      .drawer--right .drawer__no-notifications-container .drawer__no-notifications {
        display: flex;
        flex-grow: 1;
        flex-flow: column;
        align-items: center;
        justify-content: center;
        height: 80%; }
        .drawer--right .drawer__no-notifications-container .drawer__no-notifications .drawer__bell {
          height: 7em; }
          .drawer--right .drawer__no-notifications-container .drawer__no-notifications .drawer__bell-icon {
            width: 1.6em;
            height: 1.6em;
            transform: scale(6, 6); }
        .drawer--right .drawer__no-notifications-container .drawer__no-notifications-header {
          font-size: 1.4rem;
          color: var(--text-general);
          font-weight: 400;
          text-transform: capitalize;
          text-align: center;
          line-height: 1.5;
          padding: 0 10px;
          color: var(--text-general);
          margin: 0; }
        .drawer--right .drawer__no-notifications-container .drawer__no-notifications-message {
          display: block;
          font-size: 1.2em; }
  .drawer__items {
    max-height: 0;
    transition: all 0.25s;
    transform: scale(1, 0);
    opacity: 0;
    transform-origin: top; }
    .drawer__items--show {
      max-height: 100%;
      opacity: 1;
      z-index: 1;
      transform: scale(1, 1); }
  .drawer__item {
    position: relative;
    width: 100%;
    cursor: pointer;
    font-size: 1.4em;
    box-sizing: border-box;
    padding: 1.6em;
    z-index: 1; }
    .drawer__item .drawer__parent-item {
      font-weight: 300;
      cursor: pointer;
      padding-left: 3em;
      line-height: 1.5em; }
      .drawer__item .drawer__parent-item:before {
        content: '\25A2';
        font-size: 1.6em;
        position: absolute;
        display: inline-flex;
        justify-content: center;
        align-items: center;
        color: var(--state-normal);
        left: 1em;
        top: 1.1em; }
      .drawer__item .drawer__parent-item:after {
        content: '\002303';
        font-size: 1.5em;
        position: absolute;
        font-weight: 300;
        display: inline-flex;
        justify-content: center;
        align-items: center;
        right: 1em;
        transition: transform 0.25s;
        transform: rotate(-180deg);
        transform-origin: 50% 35%;
        top: 30%; }
      .drawer__item .drawer__parent-item--show:after {
        transform: none; }
    .drawer__item-link {
      text-decoration: none;
      font-weight: 300;
      display: block; }
      .drawer__item-link:before {
        content: none; }
      .drawer__item-link-text {
        padding-left: 1.5em;
        color: var(--text-general);
        position: relative; }
        .drawer__item-link-text .drawer__icon {
          width: 1.6em;
          height: 1.6em;
          position: absolute;
          left: 0;
          top: 0; }
    .drawer__item:hover {
      background: var(--general-hover); }
    @media (max-width: 768px) {
      .drawer__item {
        width: 100%; } }
  .drawer--enter .drawer__bg, .drawer--exit .drawer__bg {
    box-shadow: none; }
    .drawer--enter .drawer__bg .drawer--right, .drawer--exit .drawer__bg .drawer--right {
      transform: translateX(100%); }
    .drawer--enter .drawer__bg .drawer--left, .drawer--exit .drawer__bg .drawer--left {
      transform: translateX(-100%); }
  .drawer--enter-done .drawer__bg {
    box-shadow: 0 8px 10px -5px rgba(0, 0, 0, 0.2), 0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12); }
    .drawer--enter-done .drawer__bg .drawer--left, .drawer--enter-done .drawer__bg .drawer--right {
      transform: translateX(0); }

.contract-drawer {
  width: 240px;
  height: calc(100vh - 48px - 36px - 2px - (8px * 4));
  margin-top: 16px;
  position: absolute;
  z-index: 2;
  padding: 8px;
  top: 0;
  left: 4px;
  box-sizing: border-box;
  will-change: transform, opacity;
  transition: opacity 0.3s ease, transform 0.3s ease;
  border-radius: 4px;
  border: 1px solid var(--general-section-1);
  background: var(--general-section-1);
  color: var(--text-prominent); }
  .contract-drawer h2 {
    margin-left: 8px;
    text-transform: none;
    color: var(--text-prominent); }
  .contract-drawer--contract-mode:before {
    background: var(--general-section-1);
    content: '';
    position: absolute;
    top: 38px;
    left: -3px;
    width: calc(100% + 6px);
    height: calc(100% - 32px);
    -webkit-filter: blur(3px);
            filter: blur(3px); }
  .contract-drawer__heading {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    padding: 0.5em;
    margin-left: -8px;
    font-size: 1.6rem;
    color: var(--text-general);
    font-weight: 700;
    text-transform: none;
    text-align: left;
    line-height: 1.75;
    color: var(--text-general); }
    .contract-drawer__heading-btn {
      padding: 4px 8px 0;
      margin-bottom: -4px;
      cursor: pointer;
      border-radius: 4px;
      background: var(--general-section-1); }
      .contract-drawer__heading-btn:hover {
        background: var(--general-hover); }
  .contract-drawer__icon {
    margin-right: 16px; }

/** @define .contract-card */
.contract-card {
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  text-decoration: none;
  position: relative;
  border-radius: 4px;
  padding: 4px;
  background-color: var(--general-main-1);
  color: var(--text-prominent); }
  .contract-card .progress-slider, .contract-card .progress-slider--completed {
    margin: 0;
    border-bottom: 1px solid var(--general-section-1); }
  .contract-card:before {
    content: '';
    position: absolute;
    height: 52px;
    width: 100%;
    left: 0;
    top: 0;
    border-radius: 4px; }
  .contract-card--green:before {
    background-image: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16)); }
  .contract-card--red:before {
    background-image: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16)); }
  .contract-card__grid {
    display: grid;
    grid-template-rows: 1fr auto; }
    .contract-card__grid-underlying-trade {
      grid-template-columns: 1.5fr 1fr;
      width: 100%; }
    .contract-card__grid-profit-payout {
      grid-template-columns: 1fr 1fr;
      padding: 8px 0;
      border-radius: 4px;
      margin-left: -4px;
      margin-right: -4px;
      background: var(--general-hover); }
  .contract-card .purchase-price-container, .contract-card .potential-payout-container {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center; }
  .contract-card .purchase-price__label, .contract-card .potential-payout__label {
    font-size: 1rem;
    align-self: flex-start;
    text-transform: none;
    margin-bottom: 4px;
    color: var(--text-general); }
  .contract-card .purchase-price__value, .contract-card .potential-payout__value {
    font-size: 1em;
    font-weight: bold;
    align-self: flex-start; }
  .contract-card .potential-payout-container {
    padding-left: 4px; }
  .contract-card .potential-payout-price__value {
    font-size: 1em;
    font-weight: bold;
    align-self: flex-start; }
  .contract-card__separator {
    width: 100%;
    border-top: 1px solid var(--general-section-1); }
  .contract-card__underlying-name {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    font-weight: bold;
    font-size: 1.2em;
    max-width: 120px; }
  .contract-card__type {
    font-size: 1.2em;
    display: flex;
    justify-content: flex-start;
    font-weight: bold;
    /* postcss-bem-linter: ignore */ }
    .contract-card__type .category-type .color1-fill {
      fill: var(--brand-red-coral) !important; }
    .contract-card__type .category-type .color2-fill {
      fill: var(--brand-secondary) !important; }
  .contract-card__symbol {
    margin-left: 0.5rem;
    font-size: 1em;
    line-height: 1.5; }
  .contract-card__header {
    display: flex;
    justify-content: space-evenly;
    margin: 0.5em 0.2em; }
  .contract-card__body {
    border-radius: 4px;
    width: 100%;
    padding: 8px 12px 0;
    color: var(--text-prominent); }
  .contract-card__footer {
    margin-bottom: 0.5em;
    padding: 0 4px; }
    .contract-card__footer-wrapper {
      font-size: 1.2rem;
      color: var(--text-general);
      font-weight: 400;
      text-transform: none;
      text-align: center;
      line-height: 1.25;
      color: var(--text-prominent);
      padding: 8px 8px 0;
      display: grid;
      grid-template-columns: 1fr 1fr; }
  .contract-card__sell-button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    margin: 8px 0 -4px;
    transition: transform 0.25s ease, opacity 0.25s linear;
    border-top: 1px solid var(--general-section-1); }
    .contract-card__sell-button--enter-done {
      opacity: 1;
      transform: translateY(0); }
    .contract-card__sell-button--enter, .contract-card__sell-button--exit {
      opacity: 0;
      transform: translateY(-8px); }
    .contract-card__sell-button .btn--sell {
      height: 32px; }
  .contract-card .contract-audit__wrapper {
    padding: 2px 0;
    width: 100%; }
  .contract-card .contract-audit__wrapper--is-open {
    margin-top: 0.5em; }
  .contract-card .contract-audit__toggle {
    margin: 0 0 -0.5em;
    width: 100%; }
  .contract-card .contract-audit__label {
    font-size: 0.8em;
    text-align: left; }
  .contract-card .contract-audit__value {
    font-size: 1em;
    text-align: left; }

.trade-container + .positions-drawer {
  transition: opacity 0.4s ease; }

.positions-drawer {
  width: 240px;
  height: calc(100% - 32px);
  margin-top: 16px;
  position: absolute;
  z-index: 2;
  top: 0;
  left: 4px;
  box-sizing: border-box;
  opacity: 0;
  transform: translateX(-100%);
  will-change: transform, opacity;
  transition: opacity 0.3s ease, transform 0.3s ease;
  border-radius: 4px;
  border: 1px solid var(--general-section-1);
  background-color: var(--general-section-1);
  color: var(--text-prominent); }
  .positions-drawer__bg {
    position: absolute;
    z-index: 2;
    top: 0;
    left: 0;
    width: 260px;
    height: 100%;
    background: var(--general-main-1);
    transition: opacity 0.25s linear;
    opacity: 0;
    pointer-events: none; }
    .positions-drawer__bg--open {
      opacity: 1; }
  .positions-drawer--open {
    transform: translateX(8px);
    opacity: 1; }
  .positions-drawer__header {
    height: 3.6em;
    display: flex;
    flex-direction: row;
    align-items: center;
    padding: 0 1em; }
    .positions-drawer__header:after {
      content: '';
      position: absolute;
      height: 8px;
      width: calc(100% - 18px);
      left: 9px;
      top: 39px;
      z-index: 1;
      box-shadow: 0 8px 2px -2px var(--general-section-1) inset; }
  .positions-drawer__body {
    height: calc(100% - 9.72em);
    padding: 0.8em 0 0;
    box-sizing: border-box;
    overflow: hidden;
    align-self: center;
    color: var(--text-general); }
  .positions-drawer__footer {
    position: relative;
    height: 6em;
    display: flex;
    justify-content: center;
    align-items: center; }
    .positions-drawer__footer:before {
      content: '';
      position: absolute;
      height: 8px;
      width: calc(100% - 18px);
      left: 9px;
      top: -6px;
      box-shadow: 0 8px 2px -2px var(--general-section-1) inset; }
    .positions-drawer__footer .btn {
      width: 100%;
      margin: 8px;
      height: 40px; }
      .positions-drawer__footer .btn .btn__text {
        font-size: 1.4em;
        font-weight: bold; }
  .positions-drawer__title {
    font-size: 1.4em;
    font-weight: bold;
    color: var(--text-prominent); }
  .positions-drawer__icon-main {
    margin-right: 0.8em; }
  .positions-drawer__icon-close {
    display: inline-block;
    margin-left: auto;
    cursor: pointer; }
    .positions-drawer__icon-close svg {
      height: 1.6em;
      width: 1.6em; }

/** @define positions-drawer-card; weak */
.positions-drawer-card {
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  cursor: pointer;
  text-decoration: none;
  position: relative;
  color: var(--text-general); }
  .positions-drawer-card__result {
    position: absolute;
    top: -1px;
    left: -1px;
    width: calc(100% + 2px);
    height: calc(100% + 2px);
    max-height: 140px;
    border-radius: 4px;
    z-index: 2;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--overlay-inside-dialog); }
    .positions-drawer-card__result--won, .positions-drawer-card__result--won:after {
      background-image: var(--gradient-success); }
    .positions-drawer-card__result--lost, .positions-drawer-card__result--lost:after {
      background-image: var(--gradient-danger); }
    .positions-drawer-card__result:hover {
      background: 0 !important; }
      .positions-drawer-card__result:hover .result__caption {
        opacity: 0; }
    .positions-drawer-card__result:after {
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: 4px;
      z-index: 2; }
    .positions-drawer-card__result--enter, .positions-drawer-card__result--exit {
      opacity: 0; }
    .positions-drawer-card__result--enter-done {
      opacity: 1; }
  .positions-drawer-card__wrapper {
    padding: 0.8em;
    margin: 0 1em;
    max-width: 218px;
    border-radius: 4px;
    transition: transform 0.25s ease, opacity 0.25s linear;
    position: relative;
    background: var(--general-main-1); }
    .positions-drawer-card__wrapper--active:before {
      content: '';
      top: -1px;
      left: -1px;
      width: calc(100% + 2px);
      height: calc(100% + 2px);
      position: absolute;
      box-shadow: 0 4px 6px 0 rgba(0, 0, 0, 0.24);
      border-radius: 4px;
      pointer-events: none; }
    .positions-drawer-card__wrapper:first-child {
      margin-top: 2px; }
    .positions-drawer-card__wrapper:not(:last-child) {
      margin-bottom: 16px; }
    .positions-drawer-card__wrapper:last-child {
      margin-bottom: 10px; }
    .positions-drawer-card__wrapper--enter-done {
      opacity: 1;
      transform: translateY(0); }
    .positions-drawer-card__wrapper--enter, .positions-drawer-card__wrapper--exit {
      opacity: 0;
      transform: translateY(-16px); }
  .positions-drawer-card--active {
    cursor: default; }
  .positions-drawer-card--green:before {
    background-image: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16)); }
  .positions-drawer-card--orange:before {
    background-image: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(255, 153, 51, 0.16)); }
  .positions-drawer-card--red:before {
    background-image: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16)); }
  .positions-drawer-card:before {
    content: '';
    position: absolute;
    height: 52px;
    width: calc(100% + 18px);
    left: -9px;
    top: -9px;
    border-radius: 4px; }
  .positions-drawer-card__grid {
    display: grid;
    grid-template-rows: 1fr auto; }
    .positions-drawer-card__grid-underlying-trade {
      grid-template-columns: 1.5fr 1fr; }
    .positions-drawer-card__grid-profit-payout {
      grid-template-columns: 1fr 1fr;
      padding: 8px;
      border-radius: 4px; }
    .positions-drawer-card__grid-price-payout {
      grid-template-columns: 1fr 1fr;
      padding: 0 8px; }
  .positions-drawer-card__purchase-label, .positions-drawer-card__payout-label {
    text-transform: none;
    font-size: 1rem;
    font-weight: normal;
    white-space: nowrap;
    max-width: 90px;
    color: var(--text-general); }
  .positions-drawer-card__purchase-value, .positions-drawer-card__payout-value {
    font-size: 1.2em;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    font-weight: bold;
    padding: 4px 0 8px; }
  .positions-drawer-card__purchase-price, .positions-drawer-card__payout-price {
    display: flex;
    flex-direction: column; }
  .positions-drawer-card__payout-price {
    margin-left: 4px; }
  .positions-drawer-card__type {
    font-size: 1.2em;
    display: flex;
    justify-content: flex-start;
    font-weight: bold;
    /* postcss-bem-linter: ignore */ }
    .positions-drawer-card__type .category-type .color1-fill {
      fill: var(--brand-red-coral); }
    .positions-drawer-card__type .category-type .color2-fill {
      fill: var(--brand-secondary); }
  .positions-drawer-card__symbol {
    margin-left: 0.5rem;
    font-size: 1em;
    line-height: 1.5; }
  .positions-drawer-card__indicative {
    font-size: 1.2em;
    font-weight: bold;
    display: flex;
    justify-content: flex-start;
    margin-left: 4px;
    align-items: center;
    color: var(--text-general); }
    .positions-drawer-card__indicative-label {
      font-size: 1em;
      font-weight: normal;
      margin-bottom: 4px;
      white-space: nowrap;
      max-width: 90px;
      color: var(--text-general); }
    .positions-drawer-card__indicative--movement {
      margin-left: 2px;
      width: 16px;
      height: 16px; }
      .positions-drawer-card__indicative--movement-complete, .positions-drawer-card__indicative--movement-complete:after {
        display: none; }
      .positions-drawer-card__indicative--movement:after {
        content: '';
        width: 16px; }
  .positions-drawer-card__remaining-time {
    font-size: 1em;
    color: var(--text-general); }
  .positions-drawer-card__profit-loss {
    font-size: 1.2em;
    text-align: center;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    font-weight: bold; }
    .positions-drawer-card__profit-loss-label {
      font-size: 1em;
      margin-bottom: 4px;
      font-weight: normal;
      white-space: nowrap;
      max-width: 90px;
      color: var(--text-general); }
    .positions-drawer-card__profit-loss--is-crypto {
      margin-left: -6px; }
    .positions-drawer-card__profit-loss--negative {
      color: var(--text-loss-danger); }
      .positions-drawer-card__profit-loss--negative:before {
        content: '-';
        color: inherit; }
    .positions-drawer-card__profit-loss--positive {
      color: var(--text-profit-success); }
      .positions-drawer-card__profit-loss--positive:before {
        content: '+';
        color: inherit; }
  .positions-drawer-card__underlying-name {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    font-weight: bold;
    font-size: 1.2em; }
  .positions-drawer-card__sell-button {
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.25s ease, opacity 0.25s linear;
    margin: 4px -4px -4px;
    border-top: 1px solid var(--general-section-1); }
    .positions-drawer-card__sell-button--enter-done {
      opacity: 1;
      transform: translateY(0); }
    .positions-drawer-card__sell-button--enter, .positions-drawer-card__sell-button--exit {
      opacity: 0;
      transform: translateY(-8px); }

/** @define contract-type */
.contract-type {
  display: flex;
  flex-direction: row;
  align-items: center;
  text-align: center;
  margin-left: -4px; }
  .contract-type__type-wrapper {
    margin: 0;
    padding: 0.5em 0.3em;
    display: flex;
    justify-content: center;
    align-items: center;
    /* postcss-bem-linter: ignore */ }
    .contract-type__type-wrapper .category-type {
      width: 20px;
      height: 20px; }
  .contract-type__type-label {
    width: 3.8em;
    line-height: 1.5;
    text-align: left; }

/** @define btn; */
.btn--sell {
  margin: 8px 4px 4px !important;
  width: 100%; }

/** @define remaining-time; */
.remaining-time {
  display: inline; }

/** @define result */
.result__caption {
  text-transform: capitalize;
  font-size: 1.6em;
  font-weight: bold;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: opacity 0.25s ease;
  cursor: pointer;
  width: 100%;
  margin-top: 1rem;
  height: calc(100% - 36px); }
  .result__caption--won {
    color: var(--text-profit-success); }
  .result__caption--lost {
    color: var(--text-loss-danger); }
  .result__caption-wrapper {
    cursor: pointer;
    width: 100%;
    margin-top: 2rem;
    height: calc(100% - 36px);
    text-decoration: none; }

.result__close-btn {
  position: absolute;
  top: 2px;
  right: 8px;
  cursor: pointer;
  visibility: visible; }
  .result__close-btn:after {
    content: '\0000D7';
    font-size: 24px;
    font-weight: 300;
    color: var(--text-general); }

.result__icon {
  margin-left: 10px; }

/** @define progress-slider */
.progress-slider {
  position: relative;
  width: 100%;
  padding: 0 4px;
  box-sizing: border-box;
  margin: 8px 0 0;
  border-bottom: 1px solid var(--general-section-1); }
  .progress-slider--completed {
    margin: 8px 0 0;
    border-bottom: 1px solid var(--general-section-1); }
  .progress-slider__track {
    background: var(--text-disabled);
    position: relative;
    margin: 2px 0 8px;
    height: 6px;
    width: 100%;
    border-radius: 8px; }
  .progress-slider__ticks {
    position: relative; }
    .progress-slider__ticks-wrapper {
      position: relative;
      margin: 2px 0 8px;
      height: 6px;
      width: 100%;
      display: flex;
      flex-direction: row;
      justify-content: space-evenly; }
    .progress-slider__ticks-step {
      height: 6px;
      width: 100%;
      margin: 0 2px;
      position: relative;
      background: var(--state-hover); }
      .progress-slider__ticks-step:before {
        position: absolute;
        content: '';
        transition: transform 0.25s ease-in;
        transform: scale3d(0, 1, 1);
        transform-origin: left;
        left: 0;
        top: 0;
        height: 6px;
        width: 100%;
        background-color: var(--brand-secondary); }
      .progress-slider__ticks-step--marked:before {
        transform: scale3d(1, 1, 1); }
      .progress-slider__ticks-step:first-child {
        margin-left: 0; }
      .progress-slider__ticks-step:last-child {
        margin-right: 0; }
      .progress-slider__ticks-step:first-child, .progress-slider__ticks-step:first-child:before {
        border-top-left-radius: 4px;
        border-bottom-left-radius: 4px; }
      .progress-slider__ticks-step:last-child, .progress-slider__ticks-step:last-child:before {
        border-top-right-radius: 4px;
        border-bottom-right-radius: 4px; }
    .progress-slider__ticks-caption {
      display: flex;
      padding: 4px 0;
      justify-content: space-between;
      line-height: 18px; }
  .progress-slider__line {
    background: var(--state-hover);
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    border-radius: 8px;
    pointer-events: none;
    transition: width 0.3s; }
    .progress-slider__line--ticks {
      height: 2px; }
    .progress-slider__line--green {
      background: var(--brand-secondary) !important; }
    .progress-slider__line--orange {
      background: var(--brand-orange) !important; }
    .progress-slider__line--red {
      background: var(--brand-red-coral) !important; }
  .progress-slider__infinite-loader {
    position: relative;
    height: 4px;
    display: block;
    width: 100%;
    background-color: var(--state-hover);
    border-radius: 2px;
    background-clip: padding-box;
    margin: 0.5rem 0 1rem;
    overflow: hidden; }
    .progress-slider__infinite-loader--indeterminate {
      background-color: var(--state-active); }
      .progress-slider__infinite-loader--indeterminate:before, .progress-slider__infinite-loader--indeterminate:after {
        content: '';
        position: absolute;
        background-color: inherit;
        top: 0;
        left: 0;
        bottom: 0;
        will-change: left, right; }
      .progress-slider__infinite-loader--indeterminate:before {
        -webkit-animation: indeterminate 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
                animation: indeterminate 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite; }
      .progress-slider__infinite-loader--indeterminate:after {
        -webkit-animation: indeterminate-short 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) infinite;
                animation: indeterminate-short 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) infinite;
        -webkit-animation-delay: 1.15s;
                animation-delay: 1.15s; }

@-webkit-keyframes indeterminate {
  0% {
    left: -35%;
    right: 100%; }
  60% {
    left: 100%;
    right: -90%; }
  100% {
    left: 100%;
    right: -90%; } }

@keyframes indeterminate {
  0% {
    left: -35%;
    right: 100%; }
  60% {
    left: 100%;
    right: -90%; }
  100% {
    left: 100%;
    right: -90%; } }

@-webkit-keyframes indeterminate-short {
  0% {
    left: -200%;
    right: 100%; }
  60% {
    left: 107%;
    right: -8%; }
  100% {
    left: 107%;
    right: -8%; } }

@keyframes indeterminate-short {
  0% {
    left: -200%;
    right: 100%; }
  60% {
    left: 107%;
    right: -8%; }
  100% {
    left: 107%;
    right: -8%; } }

.account-settings-toggle svg {
  height: 20px;
  width: 20px; }

/** @define calendar */
.calendar {
  position: absolute;
  top: 0;
  outline: 0;
  border-radius: 5px;
  z-index: 999;
  box-sizing: border-box;
  font-size: 1em;
  background: var(--general-main-2);
  box-shadow: 0 2px 8px 0 var(--shadow-menu); }
  .calendar__header, .calendar__footer {
    position: relative;
    display: flex;
    align-items: center;
    height: 5em;
    border-radius: 5px;
    padding: 1.6em; }
  .calendar__header {
    justify-content: center; }
  .calendar__body {
    border-top: 0.1em solid var(--general-section-2);
    border-bottom: 0.1em solid var(--general-section-2); }
    .calendar__body--date, .calendar__body--month, .calendar__body--year, .calendar__body--decade {
      display: grid;
      grid-gap: 1.2em;
      padding: 0.8em 2em; }
      .calendar__body--date .calendar__cell, .calendar__body--month .calendar__cell, .calendar__body--year .calendar__cell, .calendar__body--decade .calendar__cell {
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 5px; }
    .calendar__body--date {
      grid-template-columns: repeat(7, 2.4em);
      grid-auto-rows: 2.4em; }
      .calendar__body--date .calendar__cell {
        width: 100%;
        height: 100%; }
    .calendar__body--month, .calendar__body--year, .calendar__body--decade {
      grid-template-columns: repeat(3, minmax(7.2em, 1fr));
      grid-auto-rows: minmax(4.2em, auto); }
      .calendar__body--month .calendar__cell, .calendar__body--year .calendar__cell, .calendar__body--decade .calendar__cell {
        width: 5.6em;
        height: 3.2em; }
    .calendar__body--decade .calendar__cell {
      width: 100%; }
  .calendar__icon {
    cursor: pointer;
    right: 5%; }
    .calendar__icon--today:hover {
      cursor: pointer; }
  .calendar__nav {
    border: none;
    outline: none;
    background: none;
    position: absolute;
    padding: 0 0.5em;
    height: 1.4em; }
    .calendar__nav:hover:not(.calendar__nav--disabled) {
      cursor: pointer; }
    .calendar__nav--is-hidden {
      display: none; }
    .calendar__nav--prev-year {
      left: 7%; }
    .calendar__nav--next-year {
      right: 7%; }
    .calendar__nav--prev-month {
      left: 14%; }
    .calendar__nav--next-month {
      right: 14%; }
  .calendar__btn {
    text-align: center;
    padding: 0em 0.2em;
    font-weight: bold;
    cursor: pointer;
    border: none;
    outline: none;
    background: none; }
    .calendar__btn--disabled {
      cursor: default;
      transition: none; }
    .calendar__btn--select {
      font-size: 1.4rem;
      color: var(--text-general);
      font-weight: 700;
      text-transform: none;
      text-align: left;
      line-height: 1.5;
      color: var(--text-prominent); }
  .calendar__text {
    font-size: 1.2rem;
    color: var(--text-general);
    font-weight: 400;
    text-transform: unset;
    text-align: center;
    line-height: 1.25;
    color: var(--text-general); }
    .calendar__text--bold {
      font-weight: bold; }
  .calendar__cell {
    font-size: 1.2rem;
    color: var(--text-general);
    font-weight: 400;
    text-transform: none;
    text-align: left;
    line-height: 1.25;
    align-self: center;
    justify-self: center;
    position: relative;
    cursor: pointer;
    color: var(--text-general); }
    .calendar__cell:hover:not(.calendar__cell--disabled) {
      color: var(--text-general);
      background: var(--state-hover); }
    .calendar__cell:nth-child(7n):before {
      padding: 0;
      border-radius: 4px; }
    .calendar__cell:nth-child(7n + 1):before {
      left: 0;
      border-radius: 4px; }
    .calendar__cell:nth-child(7n + 1):after {
      content: none; }
    .calendar__cell--bold {
      font-size: 1.4rem;
      color: var(--text-general);
      font-weight: 700;
      text-transform: none;
      text-align: left;
      line-height: 1.5;
      color: var(--text-prominent); }
    .calendar__cell--disabled:hover {
      cursor: default; }
    .calendar__cell--disabled:not(.calendar__cell--today), .calendar__cell--other:not(.calendar__cell--today) {
      color: var(--text-disabled);
      transition: none; }
    .calendar__cell--is-hidden {
      opacity: 0;
      cursor: auto;
      cursor: initial; }
    .calendar__cell--today {
      font-weight: 400; }
      .calendar__cell--today-duration {
        background: var(--state-active) !important; }
    .calendar__cell--active {
      font-weight: bold;
      color: var(--text-prominent);
      background: var(--state-active); }
      .calendar__cell--active:hover {
        background: var(--state-active); }
      .calendar__cell--active-duration {
        background: var(--state-active); }
        .calendar__cell--active-duration:after {
          position: absolute;
          content: '';
          width: 100%;
          top: 0;
          right: 50%;
          z-index: -1;
          height: 100%;
          padding-left: 10px;
          background: var(--state-active); }
    .calendar__cell--between {
      font-weight: bold;
      color: var(--text-prominent);
      background: var(--state-active); }
      .calendar__cell--between-hover:before {
        position: absolute;
        content: '';
        width: 100%;
        z-index: -2;
        height: 100%;
        padding-left: 32px;
        background: var(--state-hover); }
      .calendar__cell--between:hover {
        background: var(--state-active); }
      .calendar__cell--between:before {
        position: absolute;
        content: '';
        width: 100%;
        z-index: -1;
        height: 100%;
        padding-left: 32px;
        background: var(--state-active); }
    .calendar__cell-tooltip {
      position: absolute;
      display: inline-grid;
      cursor: default;
      height: 0;
      top: 0;
      left: 0;
      justify-content: center;
      width: 100%; }
      .calendar__cell-tooltip-icon {
        margin-top: 0.1em;
        display: inherit; }

/** @define datepicker */
.datepicker {
  position: relative;
  display: inline-block;
  width: 100%;
  max-width: 280px; }
  .datepicker__input-field {
    border-radius: 4px;
    margin-top: 0.8em; }
  .datepicker__input {
    background: var(--fill-normal);
    border: 1px solid var(--border-normal); }
    .datepicker__input:hover {
      border-color: var(--border-hover); }
    .datepicker__input:focus, .datepicker__input:active {
      border-color: var(--border-active); }
    .datepicker__input::-ms-clear {
      display: none; }
  .datepicker__icon {
    opacity: 1;
    transition: opacity 0.1s; }
    .datepicker__icon:hover {
      cursor: pointer; }
    .datepicker__icon--is-hidden {
      opacity: 0; }
    .datepicker__icon--with-label {
      top: 35px !important; }
  .datepicker__picker {
    position: absolute;
    top: 7px;
    z-index: 2;
    transform: translate3d(0, 0, 0);
    opacity: 1; }
    .datepicker__picker--left-enter, .datepicker__picker--left-exit {
      transform: translate3d(-275px, 0, 0);
      opacity: 0; }
    .datepicker__picker--left-enter-done {
      transform: translate3d(-295px, 0, 0);
      opacity: 1; }
    .datepicker__picker--left-enter-done, .datepicker__picker--left-exit {
      transition: transform 0.25s ease, opacity 0.25s linear; }
    .datepicker__picker--bottom-enter, .datepicker__picker--bottom-exit {
      transform: translate3d(0, 0, 0);
      opacity: 0; }
    .datepicker__picker--bottom-enter-done {
      transform: translate3d(0, 33px, 0);
      opacity: 1; }
    .datepicker__picker--bottom-enter-done, .datepicker__picker--bottom-exit {
      transition: transform 0.25s ease, opacity 0.25s linear; }

/** @define error-box */
.error-box {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  width: 100%;
  text-align: center;
  color: var(--text-colored-background); }

/** @define login-prompt */
.login-prompt {
  height: calc(100vh - 83px);
  margin: 0 2em;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center; }
  .login-prompt__icon {
    height: 6.4em;
    width: 6.4em;
    margin-bottom: 1em; }
    .login-prompt__icon-svg {
      height: 100%;
      width: 100%; }
  .login-prompt__message {
    font-size: 1.4em; }

.media {
  margin: 0 0 24px; }
  .media__heading {
    font-size: 1.4rem;
    color: var(--text-general);
    font-weight: 700;
    text-transform: none;
    text-align: left;
    line-height: 1.5;
    color: var(--text-prominent);
    margin: 0 0 16px;
    text-transform: none; }
  .media__icon {
    height: 120px;
    margin-right: 1.6em;
    border-radius: 4px;
    min-width: 160px; }
    .media__icon:empty {
      background-color: var(--general-disabled); }
  .media__description {
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    font-size: 1.4rem;
    color: var(--text-general);
    font-weight: 400;
    text-transform: none;
    text-align: left;
    line-height: 1.5;
    color: var(--text-prominent); }
  .media__form {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    text-transform: none;
    text-transform: initial;
    color: var(--text-prominent); }

/** @define side-menu */
.side-menu {
  overflow: hidden; }
  .side-menu__heading {
    padding: 20px 16px; }
  .side-menu__main-header-layout {
    height: 100%;
    min-width: 270px; }
  .side-menu__sub-header-layout {
    padding-top: 56px;
    height: 100%;
    border-left: 2px solid var(--general-main-1); }
  .side-menu__title {
    font-size: var(--text-size-s);
    font-weight: bold;
    margin: 0 0.8rem;
    color: var(--text-prominent); }
  .side-menu__header--active {
    background-color: var(--general-main-1);
    /* postcss-bem-linter: ignore */ }
    .side-menu__header--active:hover {
      background-color: var(--general-main-1) !important; }
    .side-menu__header--active div {
      font-weight: bold; }
  .side-menu__header--disabled {
    opacity: 0.32;
    pointer-events: none; }
  .side-menu__icon {
    transform: rotate(360deg);
    margin-left: auto;
    font-weight: bold; }

/* postcss-bem-linter: ignore */
.vertical-tab__tab .vertical-tab__header {
  /* postcss-bem-linter: ignore */
  /* postcss-bem-linter: ignore */ }
  .vertical-tab__tab .vertical-tab__header .vertical-tab__header__link {
    margin-left: 4px; }
  .vertical-tab__tab .vertical-tab__header--active {
    /* postcss-bem-linter: ignore */ }
    .vertical-tab__tab .vertical-tab__header--active .vertical-tab__header__link {
      margin-left: 0; }
  .vertical-tab__tab .vertical-tab__header--disabled {
    opacity: 0.32;
    pointer-events: none; }

/* Loading Spinner */
/** @define block-ui */
.block-ui {
  position: absolute;
  z-index: 3;
  top: 0;
  left: 0.2em;
  right: 0;
  bottom: 0;
  width: calc(100% - 4px);
  height: 100%;
  background: var(--overlay-inside-dialog); }
  .block-ui__loading {
    position: absolute;
    top: calc(50% - 22px);
    left: calc(50% - 16px);
    z-index: 11; }
    .block-ui__loading-spinner {
      position: relative;
      margin: 0 auto;
      width: 4.2em; }
      .block-ui__loading-spinner:before {
        content: '';
        display: block;
        padding-top: 100%; }
      .block-ui__loading-spinner-circular {
        -webkit-animation: rotate 2s linear infinite;
                animation: rotate 2s linear infinite;
        height: 100%;
        transform-origin: center center;
        width: 100%;
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        margin: auto; }
      .block-ui__loading-spinner-path {
        stroke-dasharray: 1, 200;
        stroke-dashoffset: 0;
        -webkit-animation: dash 1.5s ease-in-out infinite, colorRed 6s ease-in-out infinite;
                animation: dash 1.5s ease-in-out infinite, colorRed 6s ease-in-out infinite;
        stroke-linecap: round; }

/* Spinner Loader Animation */
@-webkit-keyframes rotate {
  100% {
    transform: rotate(360deg); } }
@keyframes rotate {
  100% {
    transform: rotate(360deg); } }

@-webkit-keyframes dash {
  0% {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0; }
  50% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -35px; }
  100% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -124px; } }

@keyframes dash {
  0% {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0; }
  50% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -35px; }
  100% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -124px; } }

@-webkit-keyframes colorRed {
  100%, 0% {
    stroke: var(--brand-red-coral); } }

@keyframes colorRed {
  100%, 0% {
    stroke: var(--brand-red-coral); } }

.vertical-tab {
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
  border-radius: 4px;
  background-color: var(--general-section-1);
  height: 100%; }
  .vertical-tab__content-container {
    position: relative;
    height: 100%;
    width: 100%;
    display: flex;
    flex-flow: column nowrap;
    flex-grow: 1; }
  .vertical-tab--full-screen {
    min-height: calc(100vh - 84px - 31px); }
  .vertical-tab:not(.vertical-tab--full-screen) .vertical-tab__content {
    padding: 2.4em; }
  .vertical-tab__action-bar {
    width: 100%;
    display: flex;
    flex-flow: row-reverse nowrap;
    justify-content: space-between;
    align-items: center;
    padding: 16px; }
    .vertical-tab__action-bar--icon {
      /* postcss-bem-linter: ignore */
      /* postcss-bem-linter: ignore */ }
      .vertical-tab__action-bar--icon .color1-fill {
        fill: var(--text-general); }
      .vertical-tab__action-bar--icon .color1-stroke {
        stroke: var(--text-general); }
    .vertical-tab__action-bar-wrapper {
      cursor: pointer;
      padding: 4px 4px 2px;
      border-radius: 4px;
      margin-left: auto; }
      .vertical-tab__action-bar-wrapper:hover {
        background: var(--general-hover); }
  .vertical-tab__tab {
    display: flex;
    min-width: 28%;
    height: 100%;
    flex-direction: column;
    border-radius: 4px 0 0 4px;
    background-color: var(--general-section-1); }
  .vertical-tab__header-title {
    font-size: 1.6rem;
    color: var(--text-general);
    font-weight: 700;
    text-transform: none;
    text-align: center;
    line-height: 1.75;
    color: var(--text-general);
    padding: 16px;
    display: flex;
    align-items: center;
    transition: background-color 0.1s ease-in;
    text-decoration: none; }
  .vertical-tab__header {
    font-size: 1.4rem;
    color: var(--text-general);
    font-weight: 700;
    text-transform: none;
    text-align: center;
    line-height: 1.5;
    line-height: 1.5;
    color: var(--text-general);
    padding: 10px 12px 10px 16px;
    cursor: pointer;
    display: flex;
    align-items: center;
    transition: background-color 0.1s ease-in;
    text-decoration: none; }
    .vertical-tab__header:hover:not(.vertical-tab__header--active) {
      background-color: var(--state-hover); }
    .vertical-tab__header--active {
      font-size: 1.4rem;
      color: var(--text-colored-background);
      font-weight: 700;
      text-transform: none;
      text-align: left;
      line-height: 1.5;
      color: var(--text-prominent);
      background-color: var(--state-normal);
      border-left: 4px solid var(--brand-red-coral); }
    .vertical-tab__header__link {
      font-weight: normal; }
    .vertical-tab__header--active .vertical-tab__header__link {
      font-weight: bold; }
    .vertical-tab__header__icon {
      margin-right: 16px;
      /* postcss-bem-linter: ignore */
      /* postcss-bem-linter: ignore */ }
      .vertical-tab__header__icon .color1-fill {
        fill: var(--text-general); }
      .vertical-tab__header__icon .color1-stroke {
        stroke: var(--text-general); }
      .vertical-tab__header__icon--active {
        margin-left: -4px; }
    .vertical-tab__header__counter {
      margin-left: 1rem; }
  .vertical-tab__content {
    width: 100%;
    height: 100%;
    min-height: inherit;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    border-radius: 0 4px 4px 0;
    position: relative;
    background-color: var(--general-main-1); }
    .vertical-tab__content.vertical-tab:not(.vertical-tab--full-screen) {
      padding: 2.4em;
      height: 100%; }

/** @define .wallet-information; weak; */
.account-wallet {
  font-size: 1.4rem;
  color: var(--text-general);
  font-weight: 400;
  text-transform: none;
  text-align: left;
  line-height: 1.5;
  color: var(--text-prominent);
  text-transform: initial;
  display: flex;
  align-items: center; }
  .account-wallet .description {
    font-weight: bold; }
    .account-wallet .description__currency {
      font-size: 1.6rem; }
  .account-wallet .current-loginid, .account-wallet .symbols {
    margin-left: 4px; }
  .account-wallet__label {
    margin-left: 16px !important; }
  .account-wallet .dc-icon {
    display: inline-block;
    vertical-align: middle;
    margin: 0 8px; }
    .account-wallet .dc-icon .color1-fill {
      fill: var(--text-profit-success); }

/** @define mobile-dialog; weak */
.mobile-dialog {
  box-sizing: border-box;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 999;
  overflow: auto;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.2s;
  background: #ffffff; }
  .mobile-dialog--open {
    opacity: 1;
    pointer-events: auto; }
    .mobile-dialog--open .mobile-dialog__content {
      transform: scale(1); }
    .mobile-dialog--open .mobile-dialog__header {
      transform: translateY(0); }
  .mobile-dialog__content {
    box-sizing: border-box;
    position: relative;
    padding-top: 3.6em;
    padding-bottom: 7em;
    z-index: 1;
    background: #ffffff;
    transform: scale(0);
    transition: all 0.2s ease-out; }
  .mobile-dialog__header {
    box-sizing: border-box;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    position: fixed;
    top: 0;
    padding: 1em;
    height: 3.2em;
    z-index: 4;
    background: #ffffff;
    transform: translateY(-100%);
    transition: all 0.2s ease-out;
    transition-delay: 0.2s; }
  .mobile-dialog__header-shadow-cover {
    position: absolute;
    top: 0;
    width: 100%;
    height: 3.6em;
    z-index: 3;
    background-color: #ffffff; }
  .mobile-dialog__header-shadow {
    position: fixed;
    top: 0;
    width: 100%;
    height: 3.2em;
    z-index: 2;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); }
  .mobile-dialog__title {
    font-size: 1.3em;
    font-weight: 600;
    color: var(--text-prominent);
    margin: 0; }
  .mobile-dialog__close-btn-icon {
    width: 2.4em;
    height: 2.4em; }
  .mobile-dialog fieldset {
    border: none;
    margin-right: 0.5em;
    margin-left: 0.5em; }
  .mobile-dialog__trade-type-info-modal {
    padding: 1.6em; }
    .mobile-dialog__trade-type-info-modal .info-header {
      display: flex;
      padding: 0.8em; }
      .mobile-dialog__trade-type-info-modal .info-header .title {
        margin-left: 1.5em;
        font-size: 1.4em;
        color: var(--text-prominent); }
      .mobile-dialog__trade-type-info-modal .info-header span {
        align-self: center; }
    .mobile-dialog__trade-type-info-modal .info-gif {
      padding: 0.8em;
      width: 90%;
      width: calc(100% - 1.6em);
      height: -webkit-fit-content;
      height: -moz-fit-content;
      height: fit-content;
      background-color: #ffffff;
      border-radius: 4px;
      margin: 0 auto; }
    .mobile-dialog__trade-type-info-modal .info-content {
      padding: 0.8em;
      margin: 0 auto;
      font-size: 1.4em;
      line-height: 2em;
      color: var(--text-prominent); }
    .mobile-dialog__trade-type-info-modal .info-choose button {
      background: var(--button-primary-default);
      color: #ffffff;
      font-weight: bold;
      margin: 1.6em 0;
      width: 100%; }
    .mobile-dialog__trade-type-info-modal .info-navigation {
      display: flex;
      align-self: flex-end;
      margin-top: 1.6em; }
      .mobile-dialog__trade-type-info-modal .info-navigation__list {
        display: inline-block;
        text-align: center;
        margin: 0 auto; }
        .mobile-dialog__trade-type-info-modal .info-navigation__list .circle-button {
          width: 1em;
          height: 1em;
          border-radius: 50%;
          display: inline-block;
          margin: 0 0.5em;
          background-color: var(--text-general);
          cursor: pointer; }
          .mobile-dialog__trade-type-info-modal .info-navigation__list .circle-button.active {
            background-color: var(--text-prominent); }

/* @define reset-password */
.reset-password {
  margin: 1.6rem 1.6rem 0; }
  .reset-password__residence-selection, .reset-password__password-selection {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-flow: nowrap column; }
  .reset-password__password-selection .reset-password__heading {
    margin-bottom: 3.3rem; }
  .reset-password__heading {
    font-weight: bold;
    text-align: center;
    margin-bottom: 0.8rem; }
  .reset-password__text {
    text-align: center;
    margin-bottom: 3.3rem; }
  .reset-password__subtext {
    font-size: 1.2rem;
    text-align: center;
    margin: 1rem 0 2.4rem; }
  .reset-password__btn {
    margin: 0;
    background-color: var(--button-primary-default);
    font-weight: bold;
    color: var(--text-colored-background);
    font-size: 1.2rem; }
    .reset-password__btn:hover {
      background-color: var(--button-primary-hover); }
    .reset-password__btn--disabled {
      opacity: 0.32;
      cursor: not-allowed !important; }
  .reset-password__fiedlset {
    position: relative; }
  .reset-password__residence-field {
    width: 30rem; }
  .reset-password__password-field {
    width: 30rem;
    /* postcss-bem-linter: ignore */ }
    .reset-password__password-field > label {
      background-color: var(--general-main-2); }

/** @define cashier; weak */
.cashier {
  margin: 16px;
  box-shadow: 18px 8px 8px var(--shadow-menu);
  border-radius: 4px;
  /** @define cashier-error */ }
  .cashier__content {
    width: 100%;
    background: var(--status-default); }
  .cashier__wrapper {
    text-align: center; }
    .cashier__wrapper, .cashier__wrapper--align-left {
      color: var(--text-general);
      width: 100%;
      height: 100%;
      line-height: 1.43;
      position: absolute;
      padding: 2.4rem; }
      .cashier__wrapper .inline-icon .color1-fill, .cashier__wrapper--align-left .inline-icon .color1-fill {
        fill: var(--text-general); }
    .cashier__wrapper--align-left {
      text-align: left; }
  .cashier__loader {
    font-size: 1rem; }
    .cashier__loader-wrapper {
      display: flex;
      height: 100%; }
  .cashier__header {
    font-size: 1.6rem;
    line-height: 1.5;
    font-weight: bold;
    margin-bottom: 16px;
    color: var(--text-prominent); }
  .cashier__inset_header {
    box-shadow: inset 0 -1px 0 0 var(--general-section-1); }
  .cashier__form-submit {
    display: flex;
    justify-content: flex-end;
    width: 100%;
    margin-left: -2.4rem;
    position: absolute;
    bottom: 0;
    height: 8rem;
    overflow: hidden; }
  .cashier__form-error {
    flex: 1;
    margin: 2rem 5.6rem 4.4rem 0;
    font-size: 1.2rem;
    font-weight: 500;
    line-height: 1.33; }
    .cashier__form-error-icon {
      position: absolute;
      left: -10px;
      bottom: -15px;
      pointer-events: none;
      opacity: 0.07;
      z-index: 0; }
    .cashier__form-error-small-icon {
      margin: 2rem 1.6rem 4.4rem 2.4rem; }
  .cashier__form-submit-button {
    margin: 1.6rem 2.4rem 2.4rem; }
  .cashier__input {
    display: inline-block !important;
    margin-bottom: 0 !important; }
    .cashier__input--short {
      width: 29rem; }
    .cashier__input--long {
      width: 100%; }
  .cashier__drop-down {
    display: inline-block;
    min-width: 20.3rem;
    min-height: 4rem;
    margin: 0 0 16px;
    line-height: 1.43; }
    .cashier__drop-down-display {
      justify-content: left;
      min-height: 4rem;
      min-width: 20.3rem;
      height: auto; }
      .cashier__drop-down-display-span {
        font-size: 1.4rem;
        text-align: left;
        padding: 9px 36px 9px 12px;
        text-transform: none;
        line-height: 1.43;
        display: flex;
        align-items: center; }
    .cashier__drop-down-items, .cashier__drop-down-label {
      justify-content: left; }
    .cashier__drop-down-label {
      margin-left: 1.6rem; }
  .cashier__transferred-amount {
    color: var(--text-profit-success);
    font-size: 3.2rem;
    line-height: 0.75;
    margin-bottom: 1.6rem; }
  .cashier__transferred-details {
    margin-left: 8px;
    vertical-align: super;
    font-size: 1.4rem;
    text-align: left;
    line-height: 1.43;
    max-width: 20rem; }
    .cashier__transferred-details-wrapper {
      display: flex;
      justify-content: center;
      align-items: center; }
  .cashier__transferred-icon {
    transform: scale(-1, 1);
    vertical-align: middle;
    margin: 0 1.6rem; }
  .cashier__paragraph {
    font-size: 1.4rem;
    align-self: center;
    line-height: 1.43; }
  .cashier__text {
    font-size: 1.4rem;
    line-height: 1.43;
    max-width: 70%;
    margin-left: auto;
    margin-right: auto; }
    .cashier__text--bold {
      font-weight: bold; }
  .cashier__modal-tab {
    min-width: 24rem; }
  .cashier__success {
    text-align: center;
    background-color: var(--general-section-1);
    padding: 2.4rem;
    width: 50.4rem;
    margin: 0 auto 3.2rem; }
  .cashier__done-button {
    width: 15.6rem;
    margin-left: -1.6rem; }
  .cashier__no-balance-icon {
    margin-bottom: 1.6rem; }
  .cashier__no-balance-button {
    margin: 3.2rem auto; }
  .cashier__account-switch-icon {
    background-image: url(/public/images/app/cashier/account_switcher.png);
    width: 400px;
    height: 360px;
    background-repeat: no-repeat;
    background-size: 100%;
    margin: 2.4rem auto; }
  .cashier__virtual-center {
    margin: 12vh 0; }
  .cashier__virtual-header {
    margin-top: 0;
    margin-bottom: 0.8rem; }
  .cashier__center-align {
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center; }
    .cashier__center-align-wrapper {
      display: flex; }
    .cashier__center-align-content {
      align-self: center;
      width: 100%; }
  .cashier-error__icon {
    width: 6.4rem;
    height: 6.4rem;
    margin-bottom: 1.6rem; }
  .cashier-error__header {
    color: var(--text-loss-danger);
    font-weight: bold;
    font-size: 1.6rem;
    line-height: 1.5;
    margin-bottom: 0.8rem; }
  .cashier-error__button {
    margin: 3.2rem auto 1.6rem; }
  .cashier-error__footer {
    font-size: 1.2rem; }

/** @define withdraw */
.withdraw__header {
  font-weight: bold;
  margin-bottom: 8px;
  font-size: 1.6rem;
  line-height: 1.5; }

.withdraw__header, .withdraw__text {
  color: var(--text-general); }

.withdraw__text {
  font-size: 1.4rem; }

.withdraw__verify-button {
  margin: 3.2rem auto; }

.withdraw__icon {
  margin-top: 8rem;
  margin-bottom: 1.6rem; }

.withdraw__resend-button {
  margin: 4rem auto 0; }

.withdraw__email-sent {
  width: 40rem;
  margin: auto; }
  .withdraw__email-sent-title {
    color: var(--text-general);
    font-size: 1.6rem;
    font-weight: bold;
    margin-bottom: 0.8rem;
    line-height: 1.5; }
    .withdraw__email-sent-title-sub {
      font-size: 1.4rem; }
  .withdraw__email-sent-text {
    color: var(--text-general); }

.withdraw__email-resend-text, .withdraw__email-sent-text {
  font-size: 1.4rem;
  line-height: 1.43; }

.withdraw__email-resend {
  margin-top: 4rem; }
  .withdraw__email-resend-text {
    color: var(--brand-red-coral);
    font-weight: bold;
    text-decoration: none;
    cursor: pointer; }

/** @define payment-agent */
.payment-agent__instructions {
  margin-top: 2.4rem;
  display: flex; }
  .payment-agent__instructions-section {
    border: 1px solid var(--border-normal);
    flex: 1;
    padding: 1.6rem; }
    .payment-agent__instructions-section .payment-agent__header {
      margin-bottom: 8px;
      text-align: center; }
    .payment-agent__instructions-section:not(:first-child) {
      margin-left: 24px;
      margin-left: 1.6rem; }
  .payment-agent__instructions-button {
    display: block;
    margin: auto; }

.payment-agent__list-header {
  margin-top: 32px;
  font-size: 1.4rem;
  line-height: 1.43; }

.payment-agent__list-selector {
  margin-bottom: 8px;
  display: flex;
  justify-content: flex-end;
  margin-right: 1px; }

.payment-agent__list-line {
  border-bottom: 1px solid var(--general-section-1);
  position: relative;
  width: 80%;
  margin-left: 20%;
  top: -25px; }

.payment-agent__drop-down {
  margin-left: 8px;
  width: auto;
  margin-bottom: 0; }

.payment-agent__filter {
  min-width: 22.8rem;
  margin-top: 0; }
  .payment-agent__filter-display {
    min-height: 3.2rem;
    min-width: 22.8rem; }

.payment-agent__accordion-content-line {
  margin-bottom: 8px; }

.payment-agent__accordion-content-icon {
  vertical-align: middle;
  margin-right: 12px; }

.payment-agent__disclaimer {
  background-color: var(--general-section-1);
  margin-top: 2.4rem;
  padding: 1.6rem;
  font-size: 1.2rem;
  line-height: 1.5; }

.payment-agent__radio {
  display: none; }
  .payment-agent__radio-group {
    display: block;
    margin-bottom: 3.9rem; }
  .payment-agent__radio-wrapper {
    display: flex;
    margin-bottom: 2rem;
    width: -webkit-fit-content;
    width: -moz-fit-content;
    width: fit-content; }
  .payment-agent__radio-circle {
    border: 2px solid var(--text-general);
    border-radius: 50%;
    box-shadow: 0 0 1px 0 #ffffff;
    width: 16px;
    height: 16px;
    transition: all 0.3s ease-in-out;
    margin-right: 8px;
    align-self: center;
    display: inline-flex; }
    .payment-agent__radio-circle--selected {
      border-width: 4px;
      border-color: var(--brand-red-coral); }

.payment-agent__transferred-contact {
  margin-top: 1.6rem;
  margin-bottom: 0.8rem; }
  .payment-agent__transferred-contact-wrapper {
    margin: 3.2rem; }

.payment-agent__contact {
  text-decoration: none;
  color: var(--brand-red-coral); }

.payment-agent__explanation {
  margin-top: -0.8rem; }

.payment-agent__input {
  width: 12.6rem !important;
  margin-left: 8px;
  display: inline-block !important;
  margin-bottom: 0 !important; }
  .payment-agent__input-field {
    text-align: left;
    font-size: 1.4rem;
    padding: 10px 12px !important;
    height: 4rem; }
  .payment-agent__input-error {
    white-space: nowrap; }

.payment-agent__paragraph {
  align-self: flex-start; }

/** @define account-transfer */
.account-transfer__notes {
  color: var(--text-general);
  margin-top: calc(3.2rem + 1.7rem);
  font-size: 1.2rem;
  line-height: 1.5; }

.account-transfer__bullet {
  background-color: var(--text-general);
  border-radius: 100%;
  margin-right: 1.3rem;
  width: 0.6rem;
  height: 0.6rem;
  flex: none;
  margin-top: 0.6rem; }
  .account-transfer__bullet-wrapper {
    display: flex;
    margin-bottom: 0.4rem; }

.account-transfer__drop-down {
  min-width: calc(calc(100% - calc(16px + 1.6rem)) / 2);
  width: auto;
  margin-bottom: 3.4rem; }

.account-transfer__currency, .account-transfer__balance {
  line-height: 1.43; }

.account-transfer__currency {
  margin: 0 0.4rem; }
  .account-transfer__currency-icon {
    align-self: center; }

.account-transfer__balance {
  color: var(--text-less-prominent); }

.account-transfer__receipt-icon {
  margin: 5.6rem 0 1.6rem; }

.account-transfer__transfer-icon {
  vertical-align: baseline;
  vertical-align: initial;
  margin: 0 0.8rem; }

.account-transfer__transfer-details-from, .account-transfer__transfer-details-to {
  display: flex;
  align-items: center; }

.account-transfer__button-done {
  margin: 3.2rem auto 0; }

/* stylelint-disable plugin/selector-bem-pattern */
/** @define payment-agent-transfer */
div.payment-agent-transfer__header {
  margin-bottom: 2.8rem; }

div.payment-agent-transfer__input {
  width: 29.6rem;
  display: inline-flex;
  margin-bottom: 3.1rem; }
  div.payment-agent-transfer__input:not(:first-child) {
    margin-left: 2.4rem; }

/* stylelint-enable plugin/selector-bem-pattern */
/** @define dc-modal-header; */
.dc-modal-header__modal-cashier {
  box-shadow: inset 0 -1px 0 0 var(--general-section-1); }

.dc-modal-header--modal-cashier {
  background-color: var(--general-main-1); }

.dc-modal-header__title {
  line-height: 1.65; }
  .dc-modal-header__title--modal-cashier {
    min-width: 24rem;
    border-bottom: 1px solid var(--general-section-1);
    background-color: var(--general-section-1); }

/** @define page-error */
.page-error__container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: calc(100vh - 83px); }

.page-error__box {
  background: var(--general-main-1);
  border: var(--general-main-1);
  padding: 5em;
  text-align: center;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
  /* postcss-bem-linter: ignore */ }
  @media screen and (min-width: 1008px) {
    .page-error__box {
      max-width: calc(100vw - 45%); } }
  .page-error__box .inline-icon {
    margin: 0 auto; }

.page-error__header {
  font-size: 3rem;
  color: var(--text-general);
  font-weight: 700;
  text-transform: none;
  text-align: center;
  line-height: unset;
  color: var(--text-prominent);
  line-height: 44px; }

.page-error__message {
  font-size: 1.4rem;
  color: var(--text-general);
  font-weight: 400;
  text-transform: none;
  text-align: center;
  line-height: 1.5;
  margin: 1.14286em 0em;
  color: var(--text-prominent);
  line-height: 1.45;
  max-width: 400px; }
  .page-error__message-wrapper {
    display: flex;
    justify-content: center; }

.page-error__code {
  font-weight: bold; }

